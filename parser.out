Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ACOR
    ARROBA
    BREAK
    CCOR
    COMDOBLE
    COMENTARIOMULTILINEA
    COMENTARIOSIMPLE
    COMSIMPLE
    FUN
    GET
    INDEXOF
    INICIOCOMENTARIO
    ISEMPTY
    MAIN
    NEGACION
    PREGUNTA
    SIGNODOLAR
    SIZE
    SLICE
    TOLIST
    TOSTRING

Grammar

Rule 0     S' -> todos
Rule 1     todos -> sentencia PUNTOCOMA
Rule 2     todos -> sentencia
Rule 3     todos -> todos sentencia
Rule 4     todos -> todos sentencia PUNTOCOMA
Rule 5     sentencia -> asignacion
Rule 6     sentencia -> valor
Rule 7     sentencia -> funcion
Rule 8     sentencia -> control
Rule 9     sentencia -> condicion
Rule 10    sentencia -> print
Rule 11    print -> printType APAR CADENAEXPRESION CPAR
Rule 12    print -> printType APAR CPAR
Rule 13    print -> printType APAR ID CPAR
Rule 14    print -> printType APAR funcion CPAR
Rule 15    print -> printType APAR error CPAR
Rule 16    printType -> PRINT
Rule 17    printType -> PRINTLN
Rule 18    funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
Rule 19    funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
Rule 20    funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR
Rule 21    funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR
Rule 22    funcion -> ID PUNTO CONTAINS APAR ID CPAR
Rule 23    funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
Rule 24    asignacion -> VAL ID tipoAsignacion
Rule 25    asignacion -> VAR ID tipoAsignacion
Rule 26    asignacion -> ID inicializacion
Rule 27    tipoAsignacion -> declaracion
Rule 28    tipoAsignacion -> inicializacion
Rule 29    tipoAsignacion -> declaracion inicializacion
Rule 30    declaracion -> DOSPUNTOS tipoDato
Rule 31    inicializacion -> IGUAL valor
Rule 32    tipoDato -> INT
Rule 33    tipoDato -> FLOAT
Rule 34    tipoDato -> BOOLEAN
Rule 35    tipoDato -> STRING
Rule 36    tipoDato -> LIST MENOR tipoDato MAYOR
Rule 37    tipoDato -> SET MENOR tipoDato MAYOR
Rule 38    tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR
Rule 39    tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR
Rule 40    valor -> ENTEROEXPRESION
Rule 41    valor -> flotante
Rule 42    valor -> expresionBooleano
Rule 43    valor -> CADENAEXPRESION
Rule 44    valor -> list
Rule 45    valor -> set
Rule 46    valor -> pair
Rule 47    valor -> triple
Rule 48    valor -> expresion
Rule 49    valor -> ID
Rule 50    valor -> if
Rule 51    expresionBooleano -> TRUE
Rule 52    expresionBooleano -> FALSE
Rule 53    flotante -> ENTEROEXPRESION F
Rule 54    flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F
Rule 55    list -> LISTOF APAR contenido CPAR
Rule 56    set -> SETOF APAR contenido CPAR
Rule 57    pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR
Rule 58    triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
Rule 59    contenido -> factorEspecial
Rule 60    contenido -> factorEspecial COMA contenido
Rule 61    expresion -> expresion SUMA termino
Rule 62    expresion -> expresion RESTA termino
Rule 63    expresion -> expresion DIVISION termino
Rule 64    expresion -> expresion MULT termino
Rule 65    expresion -> expresion MODULO termino
Rule 66    expresion -> termino
Rule 67    termino -> termino SUMA factorEspecial
Rule 68    termino -> termino RESTA factor
Rule 69    termino -> termino MULT factor
Rule 70    termino -> termino DIVISION factor
Rule 71    termino -> termino MODULO factor
Rule 72    termino -> factor
Rule 73    termino -> ENTEROEXPRESION
Rule 74    termino -> flotante
Rule 75    termino -> CADENAEXPRESION
Rule 76    termino -> list
Rule 77    termino -> set
Rule 78    termino -> ID
Rule 79    factor -> ENTEROEXPRESION
Rule 80    factor -> flotante
Rule 81    factor -> ID
Rule 82    factorEspecial -> factor
Rule 83    factorEspecial -> CADENAEXPRESION
Rule 84    factorEspecial -> list
Rule 85    factorEspecial -> set
Rule 86    factor -> APAR expresion CPAR
Rule 87    comparador -> IGUALIGUAL
Rule 88    comparador -> TRIPLEIGUAL
Rule 89    comparador -> NOIGUAL
Rule 90    comparador -> MAYOR
Rule 91    comparador -> MENOR
Rule 92    comparador -> MAYORIGUAL
Rule 93    comparador -> MENORIGUAL
Rule 94    conector -> AND
Rule 95    conector -> OR
Rule 96    compmiembro -> ID
Rule 97    compmiembro -> ENTEROEXPRESION
Rule 98    compmiembro -> funcion
Rule 99    compmiembro -> asignacion
Rule 100   condicion -> compmiembro comparador compmiembro
Rule 101   condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro
Rule 102   control -> if
Rule 103   control -> for
Rule 104   control -> while
Rule 105   cuerpo -> sentencia
Rule 106   cuerpo -> ALLAVE sentencia CLLAVE
Rule 107   if -> IF APAR condicion CPAR cuerpo
Rule 108   if -> IF APAR condicion CPAR cuerpo ELSE cuerpo
Rule 109   for -> FOR APAR ID IN ID CPAR cuerpo
Rule 110   for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
Rule 111   for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
Rule 112   for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
Rule 113   for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
Rule 114   for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
Rule 115   for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
Rule 116   for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo
Rule 117   for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
Rule 118   for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
Rule 119   while -> WHILE APAR condicion CPAR cuerpo

Terminals, with rules where they appear

ACOR                 : 
ALLAVE               : 106
AND                  : 94
APAR                 : 11 12 13 14 15 18 19 20 21 22 23 55 56 57 58 86 107 108 109 110 111 112 113 114 115 116 117 117 117 118 118 119
ARROBA               : 
BOOLEAN              : 34
BREAK                : 
CADENAEXPRESION      : 11 18 18 19 20 43 75 83
CCOR                 : 
CLLAVE               : 106
COMA                 : 38 39 39 57 58 58 60 117 118
COMDOBLE             : 
COMENTARIOMULTILINEA : 
COMENTARIOSIMPLE     : 
COMPARETO            : 18
COMSIMPLE            : 
CONTAINS             : 21 22
CPAR                 : 11 12 13 14 15 18 19 20 21 22 23 55 56 57 58 86 107 108 109 110 111 112 113 114 115 116 117 117 117 118 118 119
DIVISION             : 63 70
DOSPUNTOS            : 30 110
DOWNTO               : 114
ELSE                 : 108
ENTEROEXPRESION      : 19 23 40 53 54 54 73 79 97 111 111 112 112 113 113 113 114 114 114
F                    : 53 54
FALSE                : 52
FLOAT                : 33
FOR                  : 109 110 111 112 113 114 115 116 117 118
FUN                  : 
GET                  : 
GETINDEX             : 19 23
HASHCODE             : 20
ID                   : 13 21 22 22 23 24 25 26 49 78 81 96 109 109 110 110 111 112 113 114 115 115 116 116 116 117 117 117 118 118 118
IF                   : 107 108
IGUAL                : 31
IGUALIGUAL           : 87
IN                   : 109 110 111 112 113 114 115 116 117 118
INDEXOF              : 
INDICES              : 115
INICIOCOMENTARIO     : 
INT                  : 32 110
ISEMPTY              : 
LIST                 : 36
LISTOF               : 55
MAIN                 : 
MAYOR                : 36 37 38 39 90
MAYORIGUAL           : 92
MENOR                : 36 37 38 39 91
MENORIGUAL           : 93
MODULO               : 65 71
MULT                 : 64 69
NEGACION             : 
NOIGUAL              : 89
OR                   : 95
PAIR                 : 38 57
PREGUNTA             : 
PRINT                : 16
PRINTLN              : 17
PUNTO                : 18 19 20 21 22 23 54 115 116 117
PUNTOCOMA            : 1 4
PUNTOPUNTO           : 111
RESTA                : 62 68
SET                  : 37
SETOF                : 56
SIGNODOLAR           : 
SIZE                 : 
SLICE                : 
STEP                 : 113 114
STRING               : 35
SUMA                 : 61 67
TOLIST               : 
TOSTRING             : 
TRIPLE               : 39 58
TRIPLEIGUAL          : 88
TRUE                 : 51
UNTIL                : 112 113
VAL                  : 24
VAR                  : 25
WHILE                : 119
WITHINDEX            : 117
error                : 15

Nonterminals, with rules where they appear

asignacion           : 5 99
comparador           : 100 101 101
compmiembro          : 100 100 101 101 101 101
condicion            : 9 107 108 119
conector             : 101
contenido            : 55 56 60
control              : 8
cuerpo               : 107 108 108 109 110 111 112 113 114 115 116 117 118 119
declaracion          : 27 29
expresion            : 48 61 62 63 64 65 86
expresionBooleano    : 42
factor               : 68 69 70 71 72 82
factorEspecial       : 21 57 57 58 58 58 59 60 67
flotante             : 41 74 80
for                  : 103
funcion              : 7 14 98
if                   : 50 102
inicializacion       : 26 28 29
list                 : 44 76 84
pair                 : 46
print                : 10
printType            : 11 12 13 14 15
sentencia            : 1 2 3 4 105 106
set                  : 45 77 85
termino              : 61 62 63 64 65 66 67 68 69 70 71
tipoAsignacion       : 24 25
tipoDato             : 30 36 37 38 38 39 39 39
todos                : 3 4 0
triple               : 47
valor                : 6 31
while                : 104

Parsing method: LALR

state 0

    (0) S' -> . todos
    (1) todos -> . sentencia PUNTOCOMA
    (2) todos -> . sentencia
    (3) todos -> . todos sentencia
    (4) todos -> . todos sentencia PUNTOCOMA
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion
    (40) valor -> . ENTEROEXPRESION
    (41) valor -> . flotante
    (42) valor -> . expresionBooleano
    (43) valor -> . CADENAEXPRESION
    (44) valor -> . list
    (45) valor -> . set
    (46) valor -> . pair
    (47) valor -> . triple
    (48) valor -> . expresion
    (49) valor -> . ID
    (50) valor -> . if
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (102) control -> . if
    (103) control -> . for
    (104) control -> . while
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR error CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (51) expresionBooleano -> . TRUE
    (52) expresionBooleano -> . FALSE
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (57) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (58) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (107) if -> . IF APAR condicion CPAR cuerpo
    (108) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (109) for -> . FOR APAR ID IN ID CPAR cuerpo
    (110) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (119) while -> . WHILE APAR condicion CPAR cuerpo
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (16) printType -> . PRINT
    (17) printType -> . PRINTLN
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR

    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    CADENAEXPRESION shift and go to state 15
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30
    PAIR            shift and go to state 31
    TRIPLE          shift and go to state 32
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    APAR            shift and go to state 22

    todos                          shift and go to state 1
    sentencia                      shift and go to state 2
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    compmiembro                    shift and go to state 25
    printType                      shift and go to state 26
    termino                        shift and go to state 33
    factor                         shift and go to state 39

state 1

    (0) S' -> todos .
    (3) todos -> todos . sentencia
    (4) todos -> todos . sentencia PUNTOCOMA
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion
    (40) valor -> . ENTEROEXPRESION
    (41) valor -> . flotante
    (42) valor -> . expresionBooleano
    (43) valor -> . CADENAEXPRESION
    (44) valor -> . list
    (45) valor -> . set
    (46) valor -> . pair
    (47) valor -> . triple
    (48) valor -> . expresion
    (49) valor -> . ID
    (50) valor -> . if
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (102) control -> . if
    (103) control -> . for
    (104) control -> . while
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR error CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (51) expresionBooleano -> . TRUE
    (52) expresionBooleano -> . FALSE
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (57) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (58) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (107) if -> . IF APAR condicion CPAR cuerpo
    (108) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (109) for -> . FOR APAR ID IN ID CPAR cuerpo
    (110) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (119) while -> . WHILE APAR condicion CPAR cuerpo
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (16) printType -> . PRINT
    (17) printType -> . PRINTLN
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR

    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    CADENAEXPRESION shift and go to state 15
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30
    PAIR            shift and go to state 31
    TRIPLE          shift and go to state 32
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    APAR            shift and go to state 22

    sentencia                      shift and go to state 40
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    compmiembro                    shift and go to state 25
    printType                      shift and go to state 26
    termino                        shift and go to state 33
    factor                         shift and go to state 39

state 2

    (1) todos -> sentencia . PUNTOCOMA
    (2) todos -> sentencia .

    PUNTOCOMA       shift and go to state 41
    VAL             reduce using rule 2 (todos -> sentencia .)
    VAR             reduce using rule 2 (todos -> sentencia .)
    ID              reduce using rule 2 (todos -> sentencia .)
    ENTEROEXPRESION reduce using rule 2 (todos -> sentencia .)
    CADENAEXPRESION reduce using rule 2 (todos -> sentencia .)
    TRUE            reduce using rule 2 (todos -> sentencia .)
    FALSE           reduce using rule 2 (todos -> sentencia .)
    LISTOF          reduce using rule 2 (todos -> sentencia .)
    SETOF           reduce using rule 2 (todos -> sentencia .)
    PAIR            reduce using rule 2 (todos -> sentencia .)
    TRIPLE          reduce using rule 2 (todos -> sentencia .)
    IF              reduce using rule 2 (todos -> sentencia .)
    FOR             reduce using rule 2 (todos -> sentencia .)
    WHILE           reduce using rule 2 (todos -> sentencia .)
    PRINT           reduce using rule 2 (todos -> sentencia .)
    PRINTLN         reduce using rule 2 (todos -> sentencia .)
    APAR            reduce using rule 2 (todos -> sentencia .)
    $end            reduce using rule 2 (todos -> sentencia .)


state 3

    (5) sentencia -> asignacion .
    (99) compmiembro -> asignacion .

  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 5 (sentencia -> asignacion .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 5 (sentencia -> asignacion .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 5 (sentencia -> asignacion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 5 (sentencia -> asignacion .)
  ! reduce/reduce conflict for MENOR resolved using rule 5 (sentencia -> asignacion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 5 (sentencia -> asignacion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 5 (sentencia -> asignacion .)
    PUNTOCOMA       reduce using rule 5 (sentencia -> asignacion .)
    VAL             reduce using rule 5 (sentencia -> asignacion .)
    VAR             reduce using rule 5 (sentencia -> asignacion .)
    ID              reduce using rule 5 (sentencia -> asignacion .)
    ENTEROEXPRESION reduce using rule 5 (sentencia -> asignacion .)
    CADENAEXPRESION reduce using rule 5 (sentencia -> asignacion .)
    TRUE            reduce using rule 5 (sentencia -> asignacion .)
    FALSE           reduce using rule 5 (sentencia -> asignacion .)
    LISTOF          reduce using rule 5 (sentencia -> asignacion .)
    SETOF           reduce using rule 5 (sentencia -> asignacion .)
    PAIR            reduce using rule 5 (sentencia -> asignacion .)
    TRIPLE          reduce using rule 5 (sentencia -> asignacion .)
    IF              reduce using rule 5 (sentencia -> asignacion .)
    FOR             reduce using rule 5 (sentencia -> asignacion .)
    WHILE           reduce using rule 5 (sentencia -> asignacion .)
    PRINT           reduce using rule 5 (sentencia -> asignacion .)
    PRINTLN         reduce using rule 5 (sentencia -> asignacion .)
    APAR            reduce using rule 5 (sentencia -> asignacion .)
    $end            reduce using rule 5 (sentencia -> asignacion .)
    IGUALIGUAL      reduce using rule 5 (sentencia -> asignacion .)
    TRIPLEIGUAL     reduce using rule 5 (sentencia -> asignacion .)
    NOIGUAL         reduce using rule 5 (sentencia -> asignacion .)
    MAYOR           reduce using rule 5 (sentencia -> asignacion .)
    MENOR           reduce using rule 5 (sentencia -> asignacion .)
    MAYORIGUAL      reduce using rule 5 (sentencia -> asignacion .)
    MENORIGUAL      reduce using rule 5 (sentencia -> asignacion .)
    ELSE            reduce using rule 5 (sentencia -> asignacion .)
    AND             reduce using rule 5 (sentencia -> asignacion .)
    OR              reduce using rule 5 (sentencia -> asignacion .)
    CPAR            reduce using rule 5 (sentencia -> asignacion .)
    CLLAVE          reduce using rule 5 (sentencia -> asignacion .)

  ! IGUALIGUAL      [ reduce using rule 99 (compmiembro -> asignacion .) ]
  ! TRIPLEIGUAL     [ reduce using rule 99 (compmiembro -> asignacion .) ]
  ! NOIGUAL         [ reduce using rule 99 (compmiembro -> asignacion .) ]
  ! MAYOR           [ reduce using rule 99 (compmiembro -> asignacion .) ]
  ! MENOR           [ reduce using rule 99 (compmiembro -> asignacion .) ]
  ! MAYORIGUAL      [ reduce using rule 99 (compmiembro -> asignacion .) ]
  ! MENORIGUAL      [ reduce using rule 99 (compmiembro -> asignacion .) ]


state 4

    (6) sentencia -> valor .

    PUNTOCOMA       reduce using rule 6 (sentencia -> valor .)
    VAL             reduce using rule 6 (sentencia -> valor .)
    VAR             reduce using rule 6 (sentencia -> valor .)
    ID              reduce using rule 6 (sentencia -> valor .)
    ENTEROEXPRESION reduce using rule 6 (sentencia -> valor .)
    CADENAEXPRESION reduce using rule 6 (sentencia -> valor .)
    TRUE            reduce using rule 6 (sentencia -> valor .)
    FALSE           reduce using rule 6 (sentencia -> valor .)
    LISTOF          reduce using rule 6 (sentencia -> valor .)
    SETOF           reduce using rule 6 (sentencia -> valor .)
    PAIR            reduce using rule 6 (sentencia -> valor .)
    TRIPLE          reduce using rule 6 (sentencia -> valor .)
    IF              reduce using rule 6 (sentencia -> valor .)
    FOR             reduce using rule 6 (sentencia -> valor .)
    WHILE           reduce using rule 6 (sentencia -> valor .)
    PRINT           reduce using rule 6 (sentencia -> valor .)
    PRINTLN         reduce using rule 6 (sentencia -> valor .)
    APAR            reduce using rule 6 (sentencia -> valor .)
    $end            reduce using rule 6 (sentencia -> valor .)
    IGUALIGUAL      reduce using rule 6 (sentencia -> valor .)
    TRIPLEIGUAL     reduce using rule 6 (sentencia -> valor .)
    NOIGUAL         reduce using rule 6 (sentencia -> valor .)
    MAYOR           reduce using rule 6 (sentencia -> valor .)
    MENOR           reduce using rule 6 (sentencia -> valor .)
    MAYORIGUAL      reduce using rule 6 (sentencia -> valor .)
    MENORIGUAL      reduce using rule 6 (sentencia -> valor .)
    ELSE            reduce using rule 6 (sentencia -> valor .)
    AND             reduce using rule 6 (sentencia -> valor .)
    OR              reduce using rule 6 (sentencia -> valor .)
    CPAR            reduce using rule 6 (sentencia -> valor .)
    CLLAVE          reduce using rule 6 (sentencia -> valor .)


state 5

    (7) sentencia -> funcion .
    (98) compmiembro -> funcion .

  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for MENOR resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 7 (sentencia -> funcion .)
    PUNTOCOMA       reduce using rule 7 (sentencia -> funcion .)
    VAL             reduce using rule 7 (sentencia -> funcion .)
    VAR             reduce using rule 7 (sentencia -> funcion .)
    ID              reduce using rule 7 (sentencia -> funcion .)
    ENTEROEXPRESION reduce using rule 7 (sentencia -> funcion .)
    CADENAEXPRESION reduce using rule 7 (sentencia -> funcion .)
    TRUE            reduce using rule 7 (sentencia -> funcion .)
    FALSE           reduce using rule 7 (sentencia -> funcion .)
    LISTOF          reduce using rule 7 (sentencia -> funcion .)
    SETOF           reduce using rule 7 (sentencia -> funcion .)
    PAIR            reduce using rule 7 (sentencia -> funcion .)
    TRIPLE          reduce using rule 7 (sentencia -> funcion .)
    IF              reduce using rule 7 (sentencia -> funcion .)
    FOR             reduce using rule 7 (sentencia -> funcion .)
    WHILE           reduce using rule 7 (sentencia -> funcion .)
    PRINT           reduce using rule 7 (sentencia -> funcion .)
    PRINTLN         reduce using rule 7 (sentencia -> funcion .)
    APAR            reduce using rule 7 (sentencia -> funcion .)
    $end            reduce using rule 7 (sentencia -> funcion .)
    IGUALIGUAL      reduce using rule 7 (sentencia -> funcion .)
    TRIPLEIGUAL     reduce using rule 7 (sentencia -> funcion .)
    NOIGUAL         reduce using rule 7 (sentencia -> funcion .)
    MAYOR           reduce using rule 7 (sentencia -> funcion .)
    MENOR           reduce using rule 7 (sentencia -> funcion .)
    MAYORIGUAL      reduce using rule 7 (sentencia -> funcion .)
    MENORIGUAL      reduce using rule 7 (sentencia -> funcion .)
    ELSE            reduce using rule 7 (sentencia -> funcion .)
    AND             reduce using rule 7 (sentencia -> funcion .)
    OR              reduce using rule 7 (sentencia -> funcion .)
    CPAR            reduce using rule 7 (sentencia -> funcion .)
    CLLAVE          reduce using rule 7 (sentencia -> funcion .)

  ! IGUALIGUAL      [ reduce using rule 98 (compmiembro -> funcion .) ]
  ! TRIPLEIGUAL     [ reduce using rule 98 (compmiembro -> funcion .) ]
  ! NOIGUAL         [ reduce using rule 98 (compmiembro -> funcion .) ]
  ! MAYOR           [ reduce using rule 98 (compmiembro -> funcion .) ]
  ! MENOR           [ reduce using rule 98 (compmiembro -> funcion .) ]
  ! MAYORIGUAL      [ reduce using rule 98 (compmiembro -> funcion .) ]
  ! MENORIGUAL      [ reduce using rule 98 (compmiembro -> funcion .) ]


state 6

    (8) sentencia -> control .

    PUNTOCOMA       reduce using rule 8 (sentencia -> control .)
    VAL             reduce using rule 8 (sentencia -> control .)
    VAR             reduce using rule 8 (sentencia -> control .)
    ID              reduce using rule 8 (sentencia -> control .)
    ENTEROEXPRESION reduce using rule 8 (sentencia -> control .)
    CADENAEXPRESION reduce using rule 8 (sentencia -> control .)
    TRUE            reduce using rule 8 (sentencia -> control .)
    FALSE           reduce using rule 8 (sentencia -> control .)
    LISTOF          reduce using rule 8 (sentencia -> control .)
    SETOF           reduce using rule 8 (sentencia -> control .)
    PAIR            reduce using rule 8 (sentencia -> control .)
    TRIPLE          reduce using rule 8 (sentencia -> control .)
    IF              reduce using rule 8 (sentencia -> control .)
    FOR             reduce using rule 8 (sentencia -> control .)
    WHILE           reduce using rule 8 (sentencia -> control .)
    PRINT           reduce using rule 8 (sentencia -> control .)
    PRINTLN         reduce using rule 8 (sentencia -> control .)
    APAR            reduce using rule 8 (sentencia -> control .)
    $end            reduce using rule 8 (sentencia -> control .)
    IGUALIGUAL      reduce using rule 8 (sentencia -> control .)
    TRIPLEIGUAL     reduce using rule 8 (sentencia -> control .)
    NOIGUAL         reduce using rule 8 (sentencia -> control .)
    MAYOR           reduce using rule 8 (sentencia -> control .)
    MENOR           reduce using rule 8 (sentencia -> control .)
    MAYORIGUAL      reduce using rule 8 (sentencia -> control .)
    MENORIGUAL      reduce using rule 8 (sentencia -> control .)
    ELSE            reduce using rule 8 (sentencia -> control .)
    AND             reduce using rule 8 (sentencia -> control .)
    OR              reduce using rule 8 (sentencia -> control .)
    CPAR            reduce using rule 8 (sentencia -> control .)
    CLLAVE          reduce using rule 8 (sentencia -> control .)


state 7

    (9) sentencia -> condicion .

    PUNTOCOMA       reduce using rule 9 (sentencia -> condicion .)
    VAL             reduce using rule 9 (sentencia -> condicion .)
    VAR             reduce using rule 9 (sentencia -> condicion .)
    ID              reduce using rule 9 (sentencia -> condicion .)
    ENTEROEXPRESION reduce using rule 9 (sentencia -> condicion .)
    CADENAEXPRESION reduce using rule 9 (sentencia -> condicion .)
    TRUE            reduce using rule 9 (sentencia -> condicion .)
    FALSE           reduce using rule 9 (sentencia -> condicion .)
    LISTOF          reduce using rule 9 (sentencia -> condicion .)
    SETOF           reduce using rule 9 (sentencia -> condicion .)
    PAIR            reduce using rule 9 (sentencia -> condicion .)
    TRIPLE          reduce using rule 9 (sentencia -> condicion .)
    IF              reduce using rule 9 (sentencia -> condicion .)
    FOR             reduce using rule 9 (sentencia -> condicion .)
    WHILE           reduce using rule 9 (sentencia -> condicion .)
    PRINT           reduce using rule 9 (sentencia -> condicion .)
    PRINTLN         reduce using rule 9 (sentencia -> condicion .)
    APAR            reduce using rule 9 (sentencia -> condicion .)
    $end            reduce using rule 9 (sentencia -> condicion .)
    IGUALIGUAL      reduce using rule 9 (sentencia -> condicion .)
    TRIPLEIGUAL     reduce using rule 9 (sentencia -> condicion .)
    NOIGUAL         reduce using rule 9 (sentencia -> condicion .)
    MAYOR           reduce using rule 9 (sentencia -> condicion .)
    MENOR           reduce using rule 9 (sentencia -> condicion .)
    MAYORIGUAL      reduce using rule 9 (sentencia -> condicion .)
    MENORIGUAL      reduce using rule 9 (sentencia -> condicion .)
    ELSE            reduce using rule 9 (sentencia -> condicion .)
    AND             reduce using rule 9 (sentencia -> condicion .)
    OR              reduce using rule 9 (sentencia -> condicion .)
    CPAR            reduce using rule 9 (sentencia -> condicion .)
    CLLAVE          reduce using rule 9 (sentencia -> condicion .)


state 8

    (10) sentencia -> print .

    PUNTOCOMA       reduce using rule 10 (sentencia -> print .)
    VAL             reduce using rule 10 (sentencia -> print .)
    VAR             reduce using rule 10 (sentencia -> print .)
    ID              reduce using rule 10 (sentencia -> print .)
    ENTEROEXPRESION reduce using rule 10 (sentencia -> print .)
    CADENAEXPRESION reduce using rule 10 (sentencia -> print .)
    TRUE            reduce using rule 10 (sentencia -> print .)
    FALSE           reduce using rule 10 (sentencia -> print .)
    LISTOF          reduce using rule 10 (sentencia -> print .)
    SETOF           reduce using rule 10 (sentencia -> print .)
    PAIR            reduce using rule 10 (sentencia -> print .)
    TRIPLE          reduce using rule 10 (sentencia -> print .)
    IF              reduce using rule 10 (sentencia -> print .)
    FOR             reduce using rule 10 (sentencia -> print .)
    WHILE           reduce using rule 10 (sentencia -> print .)
    PRINT           reduce using rule 10 (sentencia -> print .)
    PRINTLN         reduce using rule 10 (sentencia -> print .)
    APAR            reduce using rule 10 (sentencia -> print .)
    $end            reduce using rule 10 (sentencia -> print .)
    IGUALIGUAL      reduce using rule 10 (sentencia -> print .)
    TRIPLEIGUAL     reduce using rule 10 (sentencia -> print .)
    NOIGUAL         reduce using rule 10 (sentencia -> print .)
    MAYOR           reduce using rule 10 (sentencia -> print .)
    MENOR           reduce using rule 10 (sentencia -> print .)
    MAYORIGUAL      reduce using rule 10 (sentencia -> print .)
    MENORIGUAL      reduce using rule 10 (sentencia -> print .)
    ELSE            reduce using rule 10 (sentencia -> print .)
    AND             reduce using rule 10 (sentencia -> print .)
    OR              reduce using rule 10 (sentencia -> print .)
    CPAR            reduce using rule 10 (sentencia -> print .)
    CLLAVE          reduce using rule 10 (sentencia -> print .)


state 9

    (24) asignacion -> VAL . ID tipoAsignacion

    ID              shift and go to state 42


state 10

    (26) asignacion -> ID . inicializacion
    (49) valor -> ID .
    (21) funcion -> ID . PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> ID . PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> ID . PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (96) compmiembro -> ID .
    (78) termino -> ID .
    (81) factor -> ID .
    (31) inicializacion -> . IGUAL valor

  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MAYOR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MENOR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for VAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for VAR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for LISTOF resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for SETOF resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for PAIR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for APAR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MAYOR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MENOR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for AND resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for OR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for CPAR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for SUMA resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for RESTA resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for MULT resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for DIVISION resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for VAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for VAR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for LISTOF resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for SETOF resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for PAIR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for APAR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MAYOR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MENOR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for AND resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for OR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for CPAR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 49 (valor -> ID .)
    PUNTOCOMA       reduce using rule 49 (valor -> ID .)
    VAL             reduce using rule 49 (valor -> ID .)
    VAR             reduce using rule 49 (valor -> ID .)
    ID              reduce using rule 49 (valor -> ID .)
    ENTEROEXPRESION reduce using rule 49 (valor -> ID .)
    CADENAEXPRESION reduce using rule 49 (valor -> ID .)
    TRUE            reduce using rule 49 (valor -> ID .)
    FALSE           reduce using rule 49 (valor -> ID .)
    LISTOF          reduce using rule 49 (valor -> ID .)
    SETOF           reduce using rule 49 (valor -> ID .)
    PAIR            reduce using rule 49 (valor -> ID .)
    TRIPLE          reduce using rule 49 (valor -> ID .)
    IF              reduce using rule 49 (valor -> ID .)
    FOR             reduce using rule 49 (valor -> ID .)
    WHILE           reduce using rule 49 (valor -> ID .)
    PRINT           reduce using rule 49 (valor -> ID .)
    PRINTLN         reduce using rule 49 (valor -> ID .)
    APAR            reduce using rule 49 (valor -> ID .)
    $end            reduce using rule 49 (valor -> ID .)
    IGUALIGUAL      reduce using rule 49 (valor -> ID .)
    TRIPLEIGUAL     reduce using rule 49 (valor -> ID .)
    NOIGUAL         reduce using rule 49 (valor -> ID .)
    MAYOR           reduce using rule 49 (valor -> ID .)
    MENOR           reduce using rule 49 (valor -> ID .)
    MAYORIGUAL      reduce using rule 49 (valor -> ID .)
    MENORIGUAL      reduce using rule 49 (valor -> ID .)
    ELSE            reduce using rule 49 (valor -> ID .)
    AND             reduce using rule 49 (valor -> ID .)
    OR              reduce using rule 49 (valor -> ID .)
    CPAR            reduce using rule 49 (valor -> ID .)
    CLLAVE          reduce using rule 49 (valor -> ID .)
    PUNTO           shift and go to state 44
    SUMA            reduce using rule 78 (termino -> ID .)
    RESTA           reduce using rule 78 (termino -> ID .)
    MULT            reduce using rule 78 (termino -> ID .)
    DIVISION        reduce using rule 78 (termino -> ID .)
    MODULO          reduce using rule 78 (termino -> ID .)
    IGUAL           shift and go to state 45

  ! IGUALIGUAL      [ reduce using rule 96 (compmiembro -> ID .) ]
  ! TRIPLEIGUAL     [ reduce using rule 96 (compmiembro -> ID .) ]
  ! NOIGUAL         [ reduce using rule 96 (compmiembro -> ID .) ]
  ! MAYOR           [ reduce using rule 96 (compmiembro -> ID .) ]
  ! MENOR           [ reduce using rule 96 (compmiembro -> ID .) ]
  ! MAYORIGUAL      [ reduce using rule 96 (compmiembro -> ID .) ]
  ! MENORIGUAL      [ reduce using rule 96 (compmiembro -> ID .) ]
  ! PUNTOCOMA       [ reduce using rule 78 (termino -> ID .) ]
  ! VAL             [ reduce using rule 78 (termino -> ID .) ]
  ! VAR             [ reduce using rule 78 (termino -> ID .) ]
  ! ID              [ reduce using rule 78 (termino -> ID .) ]
  ! ENTEROEXPRESION [ reduce using rule 78 (termino -> ID .) ]
  ! CADENAEXPRESION [ reduce using rule 78 (termino -> ID .) ]
  ! TRUE            [ reduce using rule 78 (termino -> ID .) ]
  ! FALSE           [ reduce using rule 78 (termino -> ID .) ]
  ! LISTOF          [ reduce using rule 78 (termino -> ID .) ]
  ! SETOF           [ reduce using rule 78 (termino -> ID .) ]
  ! PAIR            [ reduce using rule 78 (termino -> ID .) ]
  ! TRIPLE          [ reduce using rule 78 (termino -> ID .) ]
  ! IF              [ reduce using rule 78 (termino -> ID .) ]
  ! FOR             [ reduce using rule 78 (termino -> ID .) ]
  ! WHILE           [ reduce using rule 78 (termino -> ID .) ]
  ! PRINT           [ reduce using rule 78 (termino -> ID .) ]
  ! PRINTLN         [ reduce using rule 78 (termino -> ID .) ]
  ! APAR            [ reduce using rule 78 (termino -> ID .) ]
  ! $end            [ reduce using rule 78 (termino -> ID .) ]
  ! IGUALIGUAL      [ reduce using rule 78 (termino -> ID .) ]
  ! TRIPLEIGUAL     [ reduce using rule 78 (termino -> ID .) ]
  ! NOIGUAL         [ reduce using rule 78 (termino -> ID .) ]
  ! MAYOR           [ reduce using rule 78 (termino -> ID .) ]
  ! MENOR           [ reduce using rule 78 (termino -> ID .) ]
  ! MAYORIGUAL      [ reduce using rule 78 (termino -> ID .) ]
  ! MENORIGUAL      [ reduce using rule 78 (termino -> ID .) ]
  ! ELSE            [ reduce using rule 78 (termino -> ID .) ]
  ! AND             [ reduce using rule 78 (termino -> ID .) ]
  ! OR              [ reduce using rule 78 (termino -> ID .) ]
  ! CPAR            [ reduce using rule 78 (termino -> ID .) ]
  ! CLLAVE          [ reduce using rule 78 (termino -> ID .) ]
  ! SUMA            [ reduce using rule 81 (factor -> ID .) ]
  ! RESTA           [ reduce using rule 81 (factor -> ID .) ]
  ! MULT            [ reduce using rule 81 (factor -> ID .) ]
  ! DIVISION        [ reduce using rule 81 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 81 (factor -> ID .) ]
  ! PUNTOCOMA       [ reduce using rule 81 (factor -> ID .) ]
  ! VAL             [ reduce using rule 81 (factor -> ID .) ]
  ! VAR             [ reduce using rule 81 (factor -> ID .) ]
  ! ID              [ reduce using rule 81 (factor -> ID .) ]
  ! ENTEROEXPRESION [ reduce using rule 81 (factor -> ID .) ]
  ! CADENAEXPRESION [ reduce using rule 81 (factor -> ID .) ]
  ! TRUE            [ reduce using rule 81 (factor -> ID .) ]
  ! FALSE           [ reduce using rule 81 (factor -> ID .) ]
  ! LISTOF          [ reduce using rule 81 (factor -> ID .) ]
  ! SETOF           [ reduce using rule 81 (factor -> ID .) ]
  ! PAIR            [ reduce using rule 81 (factor -> ID .) ]
  ! TRIPLE          [ reduce using rule 81 (factor -> ID .) ]
  ! IF              [ reduce using rule 81 (factor -> ID .) ]
  ! FOR             [ reduce using rule 81 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 81 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 81 (factor -> ID .) ]
  ! PRINTLN         [ reduce using rule 81 (factor -> ID .) ]
  ! APAR            [ reduce using rule 81 (factor -> ID .) ]
  ! $end            [ reduce using rule 81 (factor -> ID .) ]
  ! IGUALIGUAL      [ reduce using rule 81 (factor -> ID .) ]
  ! TRIPLEIGUAL     [ reduce using rule 81 (factor -> ID .) ]
  ! NOIGUAL         [ reduce using rule 81 (factor -> ID .) ]
  ! MAYOR           [ reduce using rule 81 (factor -> ID .) ]
  ! MENOR           [ reduce using rule 81 (factor -> ID .) ]
  ! MAYORIGUAL      [ reduce using rule 81 (factor -> ID .) ]
  ! MENORIGUAL      [ reduce using rule 81 (factor -> ID .) ]
  ! ELSE            [ reduce using rule 81 (factor -> ID .) ]
  ! AND             [ reduce using rule 81 (factor -> ID .) ]
  ! OR              [ reduce using rule 81 (factor -> ID .) ]
  ! CPAR            [ reduce using rule 81 (factor -> ID .) ]
  ! CLLAVE          [ reduce using rule 81 (factor -> ID .) ]

    inicializacion                 shift and go to state 43

state 11

    (25) asignacion -> VAR . ID tipoAsignacion

    ID              shift and go to state 46


state 12

    (40) valor -> ENTEROEXPRESION .
    (53) flotante -> ENTEROEXPRESION . F
    (54) flotante -> ENTEROEXPRESION . PUNTO ENTEROEXPRESION F
    (97) compmiembro -> ENTEROEXPRESION .
    (73) termino -> ENTEROEXPRESION .
    (79) factor -> ENTEROEXPRESION .

  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYOR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENOR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ID resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRUE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FALSE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for LISTOF resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for SETOF resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PAIR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IF resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FOR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for WHILE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINT resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYOR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENOR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for AND resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for OR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for SUMA resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for RESTA resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MULT resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for DIVISION resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MODULO resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ID resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRUE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FALSE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for LISTOF resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for SETOF resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PAIR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IF resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FOR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for WHILE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINT resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYOR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENOR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for AND resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for OR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 40 (valor -> ENTEROEXPRESION .)
    PUNTOCOMA       reduce using rule 40 (valor -> ENTEROEXPRESION .)
    VAL             reduce using rule 40 (valor -> ENTEROEXPRESION .)
    VAR             reduce using rule 40 (valor -> ENTEROEXPRESION .)
    ID              reduce using rule 40 (valor -> ENTEROEXPRESION .)
    ENTEROEXPRESION reduce using rule 40 (valor -> ENTEROEXPRESION .)
    CADENAEXPRESION reduce using rule 40 (valor -> ENTEROEXPRESION .)
    TRUE            reduce using rule 40 (valor -> ENTEROEXPRESION .)
    FALSE           reduce using rule 40 (valor -> ENTEROEXPRESION .)
    LISTOF          reduce using rule 40 (valor -> ENTEROEXPRESION .)
    SETOF           reduce using rule 40 (valor -> ENTEROEXPRESION .)
    PAIR            reduce using rule 40 (valor -> ENTEROEXPRESION .)
    TRIPLE          reduce using rule 40 (valor -> ENTEROEXPRESION .)
    IF              reduce using rule 40 (valor -> ENTEROEXPRESION .)
    FOR             reduce using rule 40 (valor -> ENTEROEXPRESION .)
    WHILE           reduce using rule 40 (valor -> ENTEROEXPRESION .)
    PRINT           reduce using rule 40 (valor -> ENTEROEXPRESION .)
    PRINTLN         reduce using rule 40 (valor -> ENTEROEXPRESION .)
    APAR            reduce using rule 40 (valor -> ENTEROEXPRESION .)
    $end            reduce using rule 40 (valor -> ENTEROEXPRESION .)
    IGUALIGUAL      reduce using rule 40 (valor -> ENTEROEXPRESION .)
    TRIPLEIGUAL     reduce using rule 40 (valor -> ENTEROEXPRESION .)
    NOIGUAL         reduce using rule 40 (valor -> ENTEROEXPRESION .)
    MAYOR           reduce using rule 40 (valor -> ENTEROEXPRESION .)
    MENOR           reduce using rule 40 (valor -> ENTEROEXPRESION .)
    MAYORIGUAL      reduce using rule 40 (valor -> ENTEROEXPRESION .)
    MENORIGUAL      reduce using rule 40 (valor -> ENTEROEXPRESION .)
    ELSE            reduce using rule 40 (valor -> ENTEROEXPRESION .)
    AND             reduce using rule 40 (valor -> ENTEROEXPRESION .)
    OR              reduce using rule 40 (valor -> ENTEROEXPRESION .)
    CPAR            reduce using rule 40 (valor -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 40 (valor -> ENTEROEXPRESION .)
    F               shift and go to state 47
    PUNTO           shift and go to state 48
    SUMA            reduce using rule 73 (termino -> ENTEROEXPRESION .)
    RESTA           reduce using rule 73 (termino -> ENTEROEXPRESION .)
    MULT            reduce using rule 73 (termino -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 73 (termino -> ENTEROEXPRESION .)
    MODULO          reduce using rule 73 (termino -> ENTEROEXPRESION .)

  ! IGUALIGUAL      [ reduce using rule 97 (compmiembro -> ENTEROEXPRESION .) ]
  ! TRIPLEIGUAL     [ reduce using rule 97 (compmiembro -> ENTEROEXPRESION .) ]
  ! NOIGUAL         [ reduce using rule 97 (compmiembro -> ENTEROEXPRESION .) ]
  ! MAYOR           [ reduce using rule 97 (compmiembro -> ENTEROEXPRESION .) ]
  ! MENOR           [ reduce using rule 97 (compmiembro -> ENTEROEXPRESION .) ]
  ! MAYORIGUAL      [ reduce using rule 97 (compmiembro -> ENTEROEXPRESION .) ]
  ! MENORIGUAL      [ reduce using rule 97 (compmiembro -> ENTEROEXPRESION .) ]
  ! PUNTOCOMA       [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! VAL             [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! VAR             [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! ID              [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! CADENAEXPRESION [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! TRUE            [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! FALSE           [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! LISTOF          [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! SETOF           [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! PAIR            [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! TRIPLE          [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! IF              [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! FOR             [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! WHILE           [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! PRINT           [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! PRINTLN         [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! APAR            [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! $end            [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! IGUALIGUAL      [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! TRIPLEIGUAL     [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! NOIGUAL         [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! MAYOR           [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! MENOR           [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! MAYORIGUAL      [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! MENORIGUAL      [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! ELSE            [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! AND             [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! OR              [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! CPAR            [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! SUMA            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! RESTA           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MULT            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! DIVISION        [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MODULO          [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! PUNTOCOMA       [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! VAL             [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! VAR             [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! ID              [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! CADENAEXPRESION [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! TRUE            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! FALSE           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! LISTOF          [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! SETOF           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! PAIR            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! TRIPLE          [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! IF              [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! FOR             [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! WHILE           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! PRINT           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! PRINTLN         [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! APAR            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! $end            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! IGUALIGUAL      [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! TRIPLEIGUAL     [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! NOIGUAL         [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MAYOR           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MENOR           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MAYORIGUAL      [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MENORIGUAL      [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! ELSE            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! AND             [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! OR              [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! CPAR            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]


state 13

    (41) valor -> flotante .
    (74) termino -> flotante .
    (80) factor -> flotante .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for VAL resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for VAR resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for ID resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for TRUE resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for FALSE resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for LISTOF resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for SETOF resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for PAIR resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for IF resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for FOR resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for WHILE resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for PRINT resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for APAR resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for $end resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for MAYOR resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for MENOR resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for ELSE resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for AND resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for OR resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for CPAR resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for SUMA resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for RESTA resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for MULT resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for DIVISION resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for MODULO resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for VAL resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for VAR resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for ID resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for TRUE resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for FALSE resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for LISTOF resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for SETOF resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for PAIR resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for IF resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for FOR resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for WHILE resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for PRINT resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for APAR resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for $end resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for MAYOR resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for MENOR resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for ELSE resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for AND resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for OR resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for CPAR resolved using rule 41 (valor -> flotante .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 41 (valor -> flotante .)
    PUNTOCOMA       reduce using rule 41 (valor -> flotante .)
    VAL             reduce using rule 41 (valor -> flotante .)
    VAR             reduce using rule 41 (valor -> flotante .)
    ID              reduce using rule 41 (valor -> flotante .)
    ENTEROEXPRESION reduce using rule 41 (valor -> flotante .)
    CADENAEXPRESION reduce using rule 41 (valor -> flotante .)
    TRUE            reduce using rule 41 (valor -> flotante .)
    FALSE           reduce using rule 41 (valor -> flotante .)
    LISTOF          reduce using rule 41 (valor -> flotante .)
    SETOF           reduce using rule 41 (valor -> flotante .)
    PAIR            reduce using rule 41 (valor -> flotante .)
    TRIPLE          reduce using rule 41 (valor -> flotante .)
    IF              reduce using rule 41 (valor -> flotante .)
    FOR             reduce using rule 41 (valor -> flotante .)
    WHILE           reduce using rule 41 (valor -> flotante .)
    PRINT           reduce using rule 41 (valor -> flotante .)
    PRINTLN         reduce using rule 41 (valor -> flotante .)
    APAR            reduce using rule 41 (valor -> flotante .)
    $end            reduce using rule 41 (valor -> flotante .)
    IGUALIGUAL      reduce using rule 41 (valor -> flotante .)
    TRIPLEIGUAL     reduce using rule 41 (valor -> flotante .)
    NOIGUAL         reduce using rule 41 (valor -> flotante .)
    MAYOR           reduce using rule 41 (valor -> flotante .)
    MENOR           reduce using rule 41 (valor -> flotante .)
    MAYORIGUAL      reduce using rule 41 (valor -> flotante .)
    MENORIGUAL      reduce using rule 41 (valor -> flotante .)
    ELSE            reduce using rule 41 (valor -> flotante .)
    AND             reduce using rule 41 (valor -> flotante .)
    OR              reduce using rule 41 (valor -> flotante .)
    CPAR            reduce using rule 41 (valor -> flotante .)
    CLLAVE          reduce using rule 41 (valor -> flotante .)
    SUMA            reduce using rule 74 (termino -> flotante .)
    RESTA           reduce using rule 74 (termino -> flotante .)
    MULT            reduce using rule 74 (termino -> flotante .)
    DIVISION        reduce using rule 74 (termino -> flotante .)
    MODULO          reduce using rule 74 (termino -> flotante .)

  ! PUNTOCOMA       [ reduce using rule 74 (termino -> flotante .) ]
  ! VAL             [ reduce using rule 74 (termino -> flotante .) ]
  ! VAR             [ reduce using rule 74 (termino -> flotante .) ]
  ! ID              [ reduce using rule 74 (termino -> flotante .) ]
  ! ENTEROEXPRESION [ reduce using rule 74 (termino -> flotante .) ]
  ! CADENAEXPRESION [ reduce using rule 74 (termino -> flotante .) ]
  ! TRUE            [ reduce using rule 74 (termino -> flotante .) ]
  ! FALSE           [ reduce using rule 74 (termino -> flotante .) ]
  ! LISTOF          [ reduce using rule 74 (termino -> flotante .) ]
  ! SETOF           [ reduce using rule 74 (termino -> flotante .) ]
  ! PAIR            [ reduce using rule 74 (termino -> flotante .) ]
  ! TRIPLE          [ reduce using rule 74 (termino -> flotante .) ]
  ! IF              [ reduce using rule 74 (termino -> flotante .) ]
  ! FOR             [ reduce using rule 74 (termino -> flotante .) ]
  ! WHILE           [ reduce using rule 74 (termino -> flotante .) ]
  ! PRINT           [ reduce using rule 74 (termino -> flotante .) ]
  ! PRINTLN         [ reduce using rule 74 (termino -> flotante .) ]
  ! APAR            [ reduce using rule 74 (termino -> flotante .) ]
  ! $end            [ reduce using rule 74 (termino -> flotante .) ]
  ! IGUALIGUAL      [ reduce using rule 74 (termino -> flotante .) ]
  ! TRIPLEIGUAL     [ reduce using rule 74 (termino -> flotante .) ]
  ! NOIGUAL         [ reduce using rule 74 (termino -> flotante .) ]
  ! MAYOR           [ reduce using rule 74 (termino -> flotante .) ]
  ! MENOR           [ reduce using rule 74 (termino -> flotante .) ]
  ! MAYORIGUAL      [ reduce using rule 74 (termino -> flotante .) ]
  ! MENORIGUAL      [ reduce using rule 74 (termino -> flotante .) ]
  ! ELSE            [ reduce using rule 74 (termino -> flotante .) ]
  ! AND             [ reduce using rule 74 (termino -> flotante .) ]
  ! OR              [ reduce using rule 74 (termino -> flotante .) ]
  ! CPAR            [ reduce using rule 74 (termino -> flotante .) ]
  ! CLLAVE          [ reduce using rule 74 (termino -> flotante .) ]
  ! SUMA            [ reduce using rule 80 (factor -> flotante .) ]
  ! RESTA           [ reduce using rule 80 (factor -> flotante .) ]
  ! MULT            [ reduce using rule 80 (factor -> flotante .) ]
  ! DIVISION        [ reduce using rule 80 (factor -> flotante .) ]
  ! MODULO          [ reduce using rule 80 (factor -> flotante .) ]
  ! PUNTOCOMA       [ reduce using rule 80 (factor -> flotante .) ]
  ! VAL             [ reduce using rule 80 (factor -> flotante .) ]
  ! VAR             [ reduce using rule 80 (factor -> flotante .) ]
  ! ID              [ reduce using rule 80 (factor -> flotante .) ]
  ! ENTEROEXPRESION [ reduce using rule 80 (factor -> flotante .) ]
  ! CADENAEXPRESION [ reduce using rule 80 (factor -> flotante .) ]
  ! TRUE            [ reduce using rule 80 (factor -> flotante .) ]
  ! FALSE           [ reduce using rule 80 (factor -> flotante .) ]
  ! LISTOF          [ reduce using rule 80 (factor -> flotante .) ]
  ! SETOF           [ reduce using rule 80 (factor -> flotante .) ]
  ! PAIR            [ reduce using rule 80 (factor -> flotante .) ]
  ! TRIPLE          [ reduce using rule 80 (factor -> flotante .) ]
  ! IF              [ reduce using rule 80 (factor -> flotante .) ]
  ! FOR             [ reduce using rule 80 (factor -> flotante .) ]
  ! WHILE           [ reduce using rule 80 (factor -> flotante .) ]
  ! PRINT           [ reduce using rule 80 (factor -> flotante .) ]
  ! PRINTLN         [ reduce using rule 80 (factor -> flotante .) ]
  ! APAR            [ reduce using rule 80 (factor -> flotante .) ]
  ! $end            [ reduce using rule 80 (factor -> flotante .) ]
  ! IGUALIGUAL      [ reduce using rule 80 (factor -> flotante .) ]
  ! TRIPLEIGUAL     [ reduce using rule 80 (factor -> flotante .) ]
  ! NOIGUAL         [ reduce using rule 80 (factor -> flotante .) ]
  ! MAYOR           [ reduce using rule 80 (factor -> flotante .) ]
  ! MENOR           [ reduce using rule 80 (factor -> flotante .) ]
  ! MAYORIGUAL      [ reduce using rule 80 (factor -> flotante .) ]
  ! MENORIGUAL      [ reduce using rule 80 (factor -> flotante .) ]
  ! ELSE            [ reduce using rule 80 (factor -> flotante .) ]
  ! AND             [ reduce using rule 80 (factor -> flotante .) ]
  ! OR              [ reduce using rule 80 (factor -> flotante .) ]
  ! CPAR            [ reduce using rule 80 (factor -> flotante .) ]
  ! CLLAVE          [ reduce using rule 80 (factor -> flotante .) ]


state 14

    (42) valor -> expresionBooleano .

    PUNTOCOMA       reduce using rule 42 (valor -> expresionBooleano .)
    VAL             reduce using rule 42 (valor -> expresionBooleano .)
    VAR             reduce using rule 42 (valor -> expresionBooleano .)
    ID              reduce using rule 42 (valor -> expresionBooleano .)
    ENTEROEXPRESION reduce using rule 42 (valor -> expresionBooleano .)
    CADENAEXPRESION reduce using rule 42 (valor -> expresionBooleano .)
    TRUE            reduce using rule 42 (valor -> expresionBooleano .)
    FALSE           reduce using rule 42 (valor -> expresionBooleano .)
    LISTOF          reduce using rule 42 (valor -> expresionBooleano .)
    SETOF           reduce using rule 42 (valor -> expresionBooleano .)
    PAIR            reduce using rule 42 (valor -> expresionBooleano .)
    TRIPLE          reduce using rule 42 (valor -> expresionBooleano .)
    IF              reduce using rule 42 (valor -> expresionBooleano .)
    FOR             reduce using rule 42 (valor -> expresionBooleano .)
    WHILE           reduce using rule 42 (valor -> expresionBooleano .)
    PRINT           reduce using rule 42 (valor -> expresionBooleano .)
    PRINTLN         reduce using rule 42 (valor -> expresionBooleano .)
    APAR            reduce using rule 42 (valor -> expresionBooleano .)
    $end            reduce using rule 42 (valor -> expresionBooleano .)
    IGUALIGUAL      reduce using rule 42 (valor -> expresionBooleano .)
    TRIPLEIGUAL     reduce using rule 42 (valor -> expresionBooleano .)
    NOIGUAL         reduce using rule 42 (valor -> expresionBooleano .)
    MAYOR           reduce using rule 42 (valor -> expresionBooleano .)
    MENOR           reduce using rule 42 (valor -> expresionBooleano .)
    MAYORIGUAL      reduce using rule 42 (valor -> expresionBooleano .)
    MENORIGUAL      reduce using rule 42 (valor -> expresionBooleano .)
    ELSE            reduce using rule 42 (valor -> expresionBooleano .)
    AND             reduce using rule 42 (valor -> expresionBooleano .)
    OR              reduce using rule 42 (valor -> expresionBooleano .)
    CPAR            reduce using rule 42 (valor -> expresionBooleano .)
    CLLAVE          reduce using rule 42 (valor -> expresionBooleano .)


state 15

    (43) valor -> CADENAEXPRESION .
    (18) funcion -> CADENAEXPRESION . PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> CADENAEXPRESION . PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> CADENAEXPRESION . PUNTO HASHCODE APAR CPAR
    (75) termino -> CADENAEXPRESION .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for VAL resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for VAR resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for ID resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for TRUE resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for FALSE resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for LISTOF resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for SETOF resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for PAIR resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for IF resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for FOR resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for WHILE resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for PRINT resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for MAYOR resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for MENOR resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for AND resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for OR resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 43 (valor -> CADENAEXPRESION .)
    PUNTOCOMA       reduce using rule 43 (valor -> CADENAEXPRESION .)
    VAL             reduce using rule 43 (valor -> CADENAEXPRESION .)
    VAR             reduce using rule 43 (valor -> CADENAEXPRESION .)
    ID              reduce using rule 43 (valor -> CADENAEXPRESION .)
    ENTEROEXPRESION reduce using rule 43 (valor -> CADENAEXPRESION .)
    CADENAEXPRESION reduce using rule 43 (valor -> CADENAEXPRESION .)
    TRUE            reduce using rule 43 (valor -> CADENAEXPRESION .)
    FALSE           reduce using rule 43 (valor -> CADENAEXPRESION .)
    LISTOF          reduce using rule 43 (valor -> CADENAEXPRESION .)
    SETOF           reduce using rule 43 (valor -> CADENAEXPRESION .)
    PAIR            reduce using rule 43 (valor -> CADENAEXPRESION .)
    TRIPLE          reduce using rule 43 (valor -> CADENAEXPRESION .)
    IF              reduce using rule 43 (valor -> CADENAEXPRESION .)
    FOR             reduce using rule 43 (valor -> CADENAEXPRESION .)
    WHILE           reduce using rule 43 (valor -> CADENAEXPRESION .)
    PRINT           reduce using rule 43 (valor -> CADENAEXPRESION .)
    PRINTLN         reduce using rule 43 (valor -> CADENAEXPRESION .)
    APAR            reduce using rule 43 (valor -> CADENAEXPRESION .)
    $end            reduce using rule 43 (valor -> CADENAEXPRESION .)
    IGUALIGUAL      reduce using rule 43 (valor -> CADENAEXPRESION .)
    TRIPLEIGUAL     reduce using rule 43 (valor -> CADENAEXPRESION .)
    NOIGUAL         reduce using rule 43 (valor -> CADENAEXPRESION .)
    MAYOR           reduce using rule 43 (valor -> CADENAEXPRESION .)
    MENOR           reduce using rule 43 (valor -> CADENAEXPRESION .)
    MAYORIGUAL      reduce using rule 43 (valor -> CADENAEXPRESION .)
    MENORIGUAL      reduce using rule 43 (valor -> CADENAEXPRESION .)
    ELSE            reduce using rule 43 (valor -> CADENAEXPRESION .)
    AND             reduce using rule 43 (valor -> CADENAEXPRESION .)
    OR              reduce using rule 43 (valor -> CADENAEXPRESION .)
    CPAR            reduce using rule 43 (valor -> CADENAEXPRESION .)
    CLLAVE          reduce using rule 43 (valor -> CADENAEXPRESION .)
    PUNTO           shift and go to state 49
    SUMA            reduce using rule 75 (termino -> CADENAEXPRESION .)
    RESTA           reduce using rule 75 (termino -> CADENAEXPRESION .)
    MULT            reduce using rule 75 (termino -> CADENAEXPRESION .)
    DIVISION        reduce using rule 75 (termino -> CADENAEXPRESION .)
    MODULO          reduce using rule 75 (termino -> CADENAEXPRESION .)

  ! PUNTOCOMA       [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! VAL             [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! VAR             [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! ID              [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! CADENAEXPRESION [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! TRUE            [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! FALSE           [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! LISTOF          [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! SETOF           [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! PAIR            [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! TRIPLE          [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! IF              [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! FOR             [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! WHILE           [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! PRINT           [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! PRINTLN         [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! APAR            [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! $end            [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! IGUALIGUAL      [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! TRIPLEIGUAL     [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! NOIGUAL         [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! MAYOR           [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! MENOR           [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! MAYORIGUAL      [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! MENORIGUAL      [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! ELSE            [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! AND             [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! OR              [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! CPAR            [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]


state 16

    (44) valor -> list .
    (76) termino -> list .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for VAL resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for VAR resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for ID resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for TRUE resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for FALSE resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for LISTOF resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for SETOF resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for PAIR resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for IF resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for FOR resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for WHILE resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for PRINT resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for APAR resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for $end resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for MAYOR resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for MENOR resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for ELSE resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for AND resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for OR resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for CPAR resolved using rule 44 (valor -> list .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 44 (valor -> list .)
    PUNTOCOMA       reduce using rule 44 (valor -> list .)
    VAL             reduce using rule 44 (valor -> list .)
    VAR             reduce using rule 44 (valor -> list .)
    ID              reduce using rule 44 (valor -> list .)
    ENTEROEXPRESION reduce using rule 44 (valor -> list .)
    CADENAEXPRESION reduce using rule 44 (valor -> list .)
    TRUE            reduce using rule 44 (valor -> list .)
    FALSE           reduce using rule 44 (valor -> list .)
    LISTOF          reduce using rule 44 (valor -> list .)
    SETOF           reduce using rule 44 (valor -> list .)
    PAIR            reduce using rule 44 (valor -> list .)
    TRIPLE          reduce using rule 44 (valor -> list .)
    IF              reduce using rule 44 (valor -> list .)
    FOR             reduce using rule 44 (valor -> list .)
    WHILE           reduce using rule 44 (valor -> list .)
    PRINT           reduce using rule 44 (valor -> list .)
    PRINTLN         reduce using rule 44 (valor -> list .)
    APAR            reduce using rule 44 (valor -> list .)
    $end            reduce using rule 44 (valor -> list .)
    IGUALIGUAL      reduce using rule 44 (valor -> list .)
    TRIPLEIGUAL     reduce using rule 44 (valor -> list .)
    NOIGUAL         reduce using rule 44 (valor -> list .)
    MAYOR           reduce using rule 44 (valor -> list .)
    MENOR           reduce using rule 44 (valor -> list .)
    MAYORIGUAL      reduce using rule 44 (valor -> list .)
    MENORIGUAL      reduce using rule 44 (valor -> list .)
    ELSE            reduce using rule 44 (valor -> list .)
    AND             reduce using rule 44 (valor -> list .)
    OR              reduce using rule 44 (valor -> list .)
    CPAR            reduce using rule 44 (valor -> list .)
    CLLAVE          reduce using rule 44 (valor -> list .)
    SUMA            reduce using rule 76 (termino -> list .)
    RESTA           reduce using rule 76 (termino -> list .)
    MULT            reduce using rule 76 (termino -> list .)
    DIVISION        reduce using rule 76 (termino -> list .)
    MODULO          reduce using rule 76 (termino -> list .)

  ! PUNTOCOMA       [ reduce using rule 76 (termino -> list .) ]
  ! VAL             [ reduce using rule 76 (termino -> list .) ]
  ! VAR             [ reduce using rule 76 (termino -> list .) ]
  ! ID              [ reduce using rule 76 (termino -> list .) ]
  ! ENTEROEXPRESION [ reduce using rule 76 (termino -> list .) ]
  ! CADENAEXPRESION [ reduce using rule 76 (termino -> list .) ]
  ! TRUE            [ reduce using rule 76 (termino -> list .) ]
  ! FALSE           [ reduce using rule 76 (termino -> list .) ]
  ! LISTOF          [ reduce using rule 76 (termino -> list .) ]
  ! SETOF           [ reduce using rule 76 (termino -> list .) ]
  ! PAIR            [ reduce using rule 76 (termino -> list .) ]
  ! TRIPLE          [ reduce using rule 76 (termino -> list .) ]
  ! IF              [ reduce using rule 76 (termino -> list .) ]
  ! FOR             [ reduce using rule 76 (termino -> list .) ]
  ! WHILE           [ reduce using rule 76 (termino -> list .) ]
  ! PRINT           [ reduce using rule 76 (termino -> list .) ]
  ! PRINTLN         [ reduce using rule 76 (termino -> list .) ]
  ! APAR            [ reduce using rule 76 (termino -> list .) ]
  ! $end            [ reduce using rule 76 (termino -> list .) ]
  ! IGUALIGUAL      [ reduce using rule 76 (termino -> list .) ]
  ! TRIPLEIGUAL     [ reduce using rule 76 (termino -> list .) ]
  ! NOIGUAL         [ reduce using rule 76 (termino -> list .) ]
  ! MAYOR           [ reduce using rule 76 (termino -> list .) ]
  ! MENOR           [ reduce using rule 76 (termino -> list .) ]
  ! MAYORIGUAL      [ reduce using rule 76 (termino -> list .) ]
  ! MENORIGUAL      [ reduce using rule 76 (termino -> list .) ]
  ! ELSE            [ reduce using rule 76 (termino -> list .) ]
  ! AND             [ reduce using rule 76 (termino -> list .) ]
  ! OR              [ reduce using rule 76 (termino -> list .) ]
  ! CPAR            [ reduce using rule 76 (termino -> list .) ]
  ! CLLAVE          [ reduce using rule 76 (termino -> list .) ]


state 17

    (45) valor -> set .
    (77) termino -> set .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for VAL resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for VAR resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for ID resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for TRUE resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for FALSE resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for LISTOF resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for SETOF resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for PAIR resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for IF resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for FOR resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for WHILE resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for PRINT resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for APAR resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for $end resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for MAYOR resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for MENOR resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for ELSE resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for AND resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for OR resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for CPAR resolved using rule 45 (valor -> set .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 45 (valor -> set .)
    PUNTOCOMA       reduce using rule 45 (valor -> set .)
    VAL             reduce using rule 45 (valor -> set .)
    VAR             reduce using rule 45 (valor -> set .)
    ID              reduce using rule 45 (valor -> set .)
    ENTEROEXPRESION reduce using rule 45 (valor -> set .)
    CADENAEXPRESION reduce using rule 45 (valor -> set .)
    TRUE            reduce using rule 45 (valor -> set .)
    FALSE           reduce using rule 45 (valor -> set .)
    LISTOF          reduce using rule 45 (valor -> set .)
    SETOF           reduce using rule 45 (valor -> set .)
    PAIR            reduce using rule 45 (valor -> set .)
    TRIPLE          reduce using rule 45 (valor -> set .)
    IF              reduce using rule 45 (valor -> set .)
    FOR             reduce using rule 45 (valor -> set .)
    WHILE           reduce using rule 45 (valor -> set .)
    PRINT           reduce using rule 45 (valor -> set .)
    PRINTLN         reduce using rule 45 (valor -> set .)
    APAR            reduce using rule 45 (valor -> set .)
    $end            reduce using rule 45 (valor -> set .)
    IGUALIGUAL      reduce using rule 45 (valor -> set .)
    TRIPLEIGUAL     reduce using rule 45 (valor -> set .)
    NOIGUAL         reduce using rule 45 (valor -> set .)
    MAYOR           reduce using rule 45 (valor -> set .)
    MENOR           reduce using rule 45 (valor -> set .)
    MAYORIGUAL      reduce using rule 45 (valor -> set .)
    MENORIGUAL      reduce using rule 45 (valor -> set .)
    ELSE            reduce using rule 45 (valor -> set .)
    AND             reduce using rule 45 (valor -> set .)
    OR              reduce using rule 45 (valor -> set .)
    CPAR            reduce using rule 45 (valor -> set .)
    CLLAVE          reduce using rule 45 (valor -> set .)
    SUMA            reduce using rule 77 (termino -> set .)
    RESTA           reduce using rule 77 (termino -> set .)
    MULT            reduce using rule 77 (termino -> set .)
    DIVISION        reduce using rule 77 (termino -> set .)
    MODULO          reduce using rule 77 (termino -> set .)

  ! PUNTOCOMA       [ reduce using rule 77 (termino -> set .) ]
  ! VAL             [ reduce using rule 77 (termino -> set .) ]
  ! VAR             [ reduce using rule 77 (termino -> set .) ]
  ! ID              [ reduce using rule 77 (termino -> set .) ]
  ! ENTEROEXPRESION [ reduce using rule 77 (termino -> set .) ]
  ! CADENAEXPRESION [ reduce using rule 77 (termino -> set .) ]
  ! TRUE            [ reduce using rule 77 (termino -> set .) ]
  ! FALSE           [ reduce using rule 77 (termino -> set .) ]
  ! LISTOF          [ reduce using rule 77 (termino -> set .) ]
  ! SETOF           [ reduce using rule 77 (termino -> set .) ]
  ! PAIR            [ reduce using rule 77 (termino -> set .) ]
  ! TRIPLE          [ reduce using rule 77 (termino -> set .) ]
  ! IF              [ reduce using rule 77 (termino -> set .) ]
  ! FOR             [ reduce using rule 77 (termino -> set .) ]
  ! WHILE           [ reduce using rule 77 (termino -> set .) ]
  ! PRINT           [ reduce using rule 77 (termino -> set .) ]
  ! PRINTLN         [ reduce using rule 77 (termino -> set .) ]
  ! APAR            [ reduce using rule 77 (termino -> set .) ]
  ! $end            [ reduce using rule 77 (termino -> set .) ]
  ! IGUALIGUAL      [ reduce using rule 77 (termino -> set .) ]
  ! TRIPLEIGUAL     [ reduce using rule 77 (termino -> set .) ]
  ! NOIGUAL         [ reduce using rule 77 (termino -> set .) ]
  ! MAYOR           [ reduce using rule 77 (termino -> set .) ]
  ! MENOR           [ reduce using rule 77 (termino -> set .) ]
  ! MAYORIGUAL      [ reduce using rule 77 (termino -> set .) ]
  ! MENORIGUAL      [ reduce using rule 77 (termino -> set .) ]
  ! ELSE            [ reduce using rule 77 (termino -> set .) ]
  ! AND             [ reduce using rule 77 (termino -> set .) ]
  ! OR              [ reduce using rule 77 (termino -> set .) ]
  ! CPAR            [ reduce using rule 77 (termino -> set .) ]
  ! CLLAVE          [ reduce using rule 77 (termino -> set .) ]


state 18

    (46) valor -> pair .

    PUNTOCOMA       reduce using rule 46 (valor -> pair .)
    VAL             reduce using rule 46 (valor -> pair .)
    VAR             reduce using rule 46 (valor -> pair .)
    ID              reduce using rule 46 (valor -> pair .)
    ENTEROEXPRESION reduce using rule 46 (valor -> pair .)
    CADENAEXPRESION reduce using rule 46 (valor -> pair .)
    TRUE            reduce using rule 46 (valor -> pair .)
    FALSE           reduce using rule 46 (valor -> pair .)
    LISTOF          reduce using rule 46 (valor -> pair .)
    SETOF           reduce using rule 46 (valor -> pair .)
    PAIR            reduce using rule 46 (valor -> pair .)
    TRIPLE          reduce using rule 46 (valor -> pair .)
    IF              reduce using rule 46 (valor -> pair .)
    FOR             reduce using rule 46 (valor -> pair .)
    WHILE           reduce using rule 46 (valor -> pair .)
    PRINT           reduce using rule 46 (valor -> pair .)
    PRINTLN         reduce using rule 46 (valor -> pair .)
    APAR            reduce using rule 46 (valor -> pair .)
    $end            reduce using rule 46 (valor -> pair .)
    IGUALIGUAL      reduce using rule 46 (valor -> pair .)
    TRIPLEIGUAL     reduce using rule 46 (valor -> pair .)
    NOIGUAL         reduce using rule 46 (valor -> pair .)
    MAYOR           reduce using rule 46 (valor -> pair .)
    MENOR           reduce using rule 46 (valor -> pair .)
    MAYORIGUAL      reduce using rule 46 (valor -> pair .)
    MENORIGUAL      reduce using rule 46 (valor -> pair .)
    ELSE            reduce using rule 46 (valor -> pair .)
    AND             reduce using rule 46 (valor -> pair .)
    OR              reduce using rule 46 (valor -> pair .)
    CPAR            reduce using rule 46 (valor -> pair .)
    CLLAVE          reduce using rule 46 (valor -> pair .)


state 19

    (47) valor -> triple .

    PUNTOCOMA       reduce using rule 47 (valor -> triple .)
    VAL             reduce using rule 47 (valor -> triple .)
    VAR             reduce using rule 47 (valor -> triple .)
    ID              reduce using rule 47 (valor -> triple .)
    ENTEROEXPRESION reduce using rule 47 (valor -> triple .)
    CADENAEXPRESION reduce using rule 47 (valor -> triple .)
    TRUE            reduce using rule 47 (valor -> triple .)
    FALSE           reduce using rule 47 (valor -> triple .)
    LISTOF          reduce using rule 47 (valor -> triple .)
    SETOF           reduce using rule 47 (valor -> triple .)
    PAIR            reduce using rule 47 (valor -> triple .)
    TRIPLE          reduce using rule 47 (valor -> triple .)
    IF              reduce using rule 47 (valor -> triple .)
    FOR             reduce using rule 47 (valor -> triple .)
    WHILE           reduce using rule 47 (valor -> triple .)
    PRINT           reduce using rule 47 (valor -> triple .)
    PRINTLN         reduce using rule 47 (valor -> triple .)
    APAR            reduce using rule 47 (valor -> triple .)
    $end            reduce using rule 47 (valor -> triple .)
    IGUALIGUAL      reduce using rule 47 (valor -> triple .)
    TRIPLEIGUAL     reduce using rule 47 (valor -> triple .)
    NOIGUAL         reduce using rule 47 (valor -> triple .)
    MAYOR           reduce using rule 47 (valor -> triple .)
    MENOR           reduce using rule 47 (valor -> triple .)
    MAYORIGUAL      reduce using rule 47 (valor -> triple .)
    MENORIGUAL      reduce using rule 47 (valor -> triple .)
    ELSE            reduce using rule 47 (valor -> triple .)
    AND             reduce using rule 47 (valor -> triple .)
    OR              reduce using rule 47 (valor -> triple .)
    CPAR            reduce using rule 47 (valor -> triple .)
    CLLAVE          reduce using rule 47 (valor -> triple .)


state 20

    (48) valor -> expresion .
    (61) expresion -> expresion . SUMA termino
    (62) expresion -> expresion . RESTA termino
    (63) expresion -> expresion . DIVISION termino
    (64) expresion -> expresion . MULT termino
    (65) expresion -> expresion . MODULO termino

    PUNTOCOMA       reduce using rule 48 (valor -> expresion .)
    VAL             reduce using rule 48 (valor -> expresion .)
    VAR             reduce using rule 48 (valor -> expresion .)
    ID              reduce using rule 48 (valor -> expresion .)
    ENTEROEXPRESION reduce using rule 48 (valor -> expresion .)
    CADENAEXPRESION reduce using rule 48 (valor -> expresion .)
    TRUE            reduce using rule 48 (valor -> expresion .)
    FALSE           reduce using rule 48 (valor -> expresion .)
    LISTOF          reduce using rule 48 (valor -> expresion .)
    SETOF           reduce using rule 48 (valor -> expresion .)
    PAIR            reduce using rule 48 (valor -> expresion .)
    TRIPLE          reduce using rule 48 (valor -> expresion .)
    IF              reduce using rule 48 (valor -> expresion .)
    FOR             reduce using rule 48 (valor -> expresion .)
    WHILE           reduce using rule 48 (valor -> expresion .)
    PRINT           reduce using rule 48 (valor -> expresion .)
    PRINTLN         reduce using rule 48 (valor -> expresion .)
    APAR            reduce using rule 48 (valor -> expresion .)
    $end            reduce using rule 48 (valor -> expresion .)
    IGUALIGUAL      reduce using rule 48 (valor -> expresion .)
    TRIPLEIGUAL     reduce using rule 48 (valor -> expresion .)
    NOIGUAL         reduce using rule 48 (valor -> expresion .)
    MAYOR           reduce using rule 48 (valor -> expresion .)
    MENOR           reduce using rule 48 (valor -> expresion .)
    MAYORIGUAL      reduce using rule 48 (valor -> expresion .)
    MENORIGUAL      reduce using rule 48 (valor -> expresion .)
    ELSE            reduce using rule 48 (valor -> expresion .)
    AND             reduce using rule 48 (valor -> expresion .)
    OR              reduce using rule 48 (valor -> expresion .)
    CPAR            reduce using rule 48 (valor -> expresion .)
    CLLAVE          reduce using rule 48 (valor -> expresion .)
    SUMA            shift and go to state 50
    RESTA           shift and go to state 51
    DIVISION        shift and go to state 52
    MULT            shift and go to state 53
    MODULO          shift and go to state 54


state 21

    (50) valor -> if .
    (102) control -> if .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for VAL resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for VAR resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for ID resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for TRUE resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for FALSE resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for LISTOF resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for SETOF resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for PAIR resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for IF resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for FOR resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for WHILE resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for PRINT resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for APAR resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for $end resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for MAYOR resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for MENOR resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for ELSE resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for AND resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for OR resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for CPAR resolved using rule 50 (valor -> if .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 50 (valor -> if .)
    PUNTOCOMA       reduce using rule 50 (valor -> if .)
    VAL             reduce using rule 50 (valor -> if .)
    VAR             reduce using rule 50 (valor -> if .)
    ID              reduce using rule 50 (valor -> if .)
    ENTEROEXPRESION reduce using rule 50 (valor -> if .)
    CADENAEXPRESION reduce using rule 50 (valor -> if .)
    TRUE            reduce using rule 50 (valor -> if .)
    FALSE           reduce using rule 50 (valor -> if .)
    LISTOF          reduce using rule 50 (valor -> if .)
    SETOF           reduce using rule 50 (valor -> if .)
    PAIR            reduce using rule 50 (valor -> if .)
    TRIPLE          reduce using rule 50 (valor -> if .)
    IF              reduce using rule 50 (valor -> if .)
    FOR             reduce using rule 50 (valor -> if .)
    WHILE           reduce using rule 50 (valor -> if .)
    PRINT           reduce using rule 50 (valor -> if .)
    PRINTLN         reduce using rule 50 (valor -> if .)
    APAR            reduce using rule 50 (valor -> if .)
    $end            reduce using rule 50 (valor -> if .)
    IGUALIGUAL      reduce using rule 50 (valor -> if .)
    TRIPLEIGUAL     reduce using rule 50 (valor -> if .)
    NOIGUAL         reduce using rule 50 (valor -> if .)
    MAYOR           reduce using rule 50 (valor -> if .)
    MENOR           reduce using rule 50 (valor -> if .)
    MAYORIGUAL      reduce using rule 50 (valor -> if .)
    MENORIGUAL      reduce using rule 50 (valor -> if .)
    ELSE            reduce using rule 50 (valor -> if .)
    AND             reduce using rule 50 (valor -> if .)
    OR              reduce using rule 50 (valor -> if .)
    CPAR            reduce using rule 50 (valor -> if .)
    CLLAVE          reduce using rule 50 (valor -> if .)

  ! PUNTOCOMA       [ reduce using rule 102 (control -> if .) ]
  ! VAL             [ reduce using rule 102 (control -> if .) ]
  ! VAR             [ reduce using rule 102 (control -> if .) ]
  ! ID              [ reduce using rule 102 (control -> if .) ]
  ! ENTEROEXPRESION [ reduce using rule 102 (control -> if .) ]
  ! CADENAEXPRESION [ reduce using rule 102 (control -> if .) ]
  ! TRUE            [ reduce using rule 102 (control -> if .) ]
  ! FALSE           [ reduce using rule 102 (control -> if .) ]
  ! LISTOF          [ reduce using rule 102 (control -> if .) ]
  ! SETOF           [ reduce using rule 102 (control -> if .) ]
  ! PAIR            [ reduce using rule 102 (control -> if .) ]
  ! TRIPLE          [ reduce using rule 102 (control -> if .) ]
  ! IF              [ reduce using rule 102 (control -> if .) ]
  ! FOR             [ reduce using rule 102 (control -> if .) ]
  ! WHILE           [ reduce using rule 102 (control -> if .) ]
  ! PRINT           [ reduce using rule 102 (control -> if .) ]
  ! PRINTLN         [ reduce using rule 102 (control -> if .) ]
  ! APAR            [ reduce using rule 102 (control -> if .) ]
  ! $end            [ reduce using rule 102 (control -> if .) ]
  ! IGUALIGUAL      [ reduce using rule 102 (control -> if .) ]
  ! TRIPLEIGUAL     [ reduce using rule 102 (control -> if .) ]
  ! NOIGUAL         [ reduce using rule 102 (control -> if .) ]
  ! MAYOR           [ reduce using rule 102 (control -> if .) ]
  ! MENOR           [ reduce using rule 102 (control -> if .) ]
  ! MAYORIGUAL      [ reduce using rule 102 (control -> if .) ]
  ! MENORIGUAL      [ reduce using rule 102 (control -> if .) ]
  ! ELSE            [ reduce using rule 102 (control -> if .) ]
  ! AND             [ reduce using rule 102 (control -> if .) ]
  ! OR              [ reduce using rule 102 (control -> if .) ]
  ! CPAR            [ reduce using rule 102 (control -> if .) ]
  ! CLLAVE          [ reduce using rule 102 (control -> if .) ]


state 22

    (86) factor -> APAR . expresion CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 56
    CADENAEXPRESION shift and go to state 58
    ID              shift and go to state 61
    APAR            shift and go to state 22
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    expresion                      shift and go to state 55
    termino                        shift and go to state 33
    factor                         shift and go to state 39
    flotante                       shift and go to state 57
    list                           shift and go to state 59
    set                            shift and go to state 60

state 23

    (103) control -> for .

    PUNTOCOMA       reduce using rule 103 (control -> for .)
    VAL             reduce using rule 103 (control -> for .)
    VAR             reduce using rule 103 (control -> for .)
    ID              reduce using rule 103 (control -> for .)
    ENTEROEXPRESION reduce using rule 103 (control -> for .)
    CADENAEXPRESION reduce using rule 103 (control -> for .)
    TRUE            reduce using rule 103 (control -> for .)
    FALSE           reduce using rule 103 (control -> for .)
    LISTOF          reduce using rule 103 (control -> for .)
    SETOF           reduce using rule 103 (control -> for .)
    PAIR            reduce using rule 103 (control -> for .)
    TRIPLE          reduce using rule 103 (control -> for .)
    IF              reduce using rule 103 (control -> for .)
    FOR             reduce using rule 103 (control -> for .)
    WHILE           reduce using rule 103 (control -> for .)
    PRINT           reduce using rule 103 (control -> for .)
    PRINTLN         reduce using rule 103 (control -> for .)
    APAR            reduce using rule 103 (control -> for .)
    $end            reduce using rule 103 (control -> for .)
    IGUALIGUAL      reduce using rule 103 (control -> for .)
    TRIPLEIGUAL     reduce using rule 103 (control -> for .)
    NOIGUAL         reduce using rule 103 (control -> for .)
    MAYOR           reduce using rule 103 (control -> for .)
    MENOR           reduce using rule 103 (control -> for .)
    MAYORIGUAL      reduce using rule 103 (control -> for .)
    MENORIGUAL      reduce using rule 103 (control -> for .)
    ELSE            reduce using rule 103 (control -> for .)
    AND             reduce using rule 103 (control -> for .)
    OR              reduce using rule 103 (control -> for .)
    CPAR            reduce using rule 103 (control -> for .)
    CLLAVE          reduce using rule 103 (control -> for .)


state 24

    (104) control -> while .

    PUNTOCOMA       reduce using rule 104 (control -> while .)
    VAL             reduce using rule 104 (control -> while .)
    VAR             reduce using rule 104 (control -> while .)
    ID              reduce using rule 104 (control -> while .)
    ENTEROEXPRESION reduce using rule 104 (control -> while .)
    CADENAEXPRESION reduce using rule 104 (control -> while .)
    TRUE            reduce using rule 104 (control -> while .)
    FALSE           reduce using rule 104 (control -> while .)
    LISTOF          reduce using rule 104 (control -> while .)
    SETOF           reduce using rule 104 (control -> while .)
    PAIR            reduce using rule 104 (control -> while .)
    TRIPLE          reduce using rule 104 (control -> while .)
    IF              reduce using rule 104 (control -> while .)
    FOR             reduce using rule 104 (control -> while .)
    WHILE           reduce using rule 104 (control -> while .)
    PRINT           reduce using rule 104 (control -> while .)
    PRINTLN         reduce using rule 104 (control -> while .)
    APAR            reduce using rule 104 (control -> while .)
    $end            reduce using rule 104 (control -> while .)
    IGUALIGUAL      reduce using rule 104 (control -> while .)
    TRIPLEIGUAL     reduce using rule 104 (control -> while .)
    NOIGUAL         reduce using rule 104 (control -> while .)
    MAYOR           reduce using rule 104 (control -> while .)
    MENOR           reduce using rule 104 (control -> while .)
    MAYORIGUAL      reduce using rule 104 (control -> while .)
    MENORIGUAL      reduce using rule 104 (control -> while .)
    ELSE            reduce using rule 104 (control -> while .)
    AND             reduce using rule 104 (control -> while .)
    OR              reduce using rule 104 (control -> while .)
    CPAR            reduce using rule 104 (control -> while .)
    CLLAVE          reduce using rule 104 (control -> while .)


state 25

    (100) condicion -> compmiembro . comparador compmiembro
    (101) condicion -> compmiembro . comparador compmiembro conector compmiembro comparador compmiembro
    (87) comparador -> . IGUALIGUAL
    (88) comparador -> . TRIPLEIGUAL
    (89) comparador -> . NOIGUAL
    (90) comparador -> . MAYOR
    (91) comparador -> . MENOR
    (92) comparador -> . MAYORIGUAL
    (93) comparador -> . MENORIGUAL

    IGUALIGUAL      shift and go to state 63
    TRIPLEIGUAL     shift and go to state 64
    NOIGUAL         shift and go to state 65
    MAYOR           shift and go to state 66
    MENOR           shift and go to state 67
    MAYORIGUAL      shift and go to state 68
    MENORIGUAL      shift and go to state 69

    comparador                     shift and go to state 62

state 26

    (11) print -> printType . APAR CADENAEXPRESION CPAR
    (12) print -> printType . APAR CPAR
    (13) print -> printType . APAR ID CPAR
    (14) print -> printType . APAR funcion CPAR
    (15) print -> printType . APAR error CPAR

    APAR            shift and go to state 70


state 27

    (51) expresionBooleano -> TRUE .

    PUNTOCOMA       reduce using rule 51 (expresionBooleano -> TRUE .)
    VAL             reduce using rule 51 (expresionBooleano -> TRUE .)
    VAR             reduce using rule 51 (expresionBooleano -> TRUE .)
    ID              reduce using rule 51 (expresionBooleano -> TRUE .)
    ENTEROEXPRESION reduce using rule 51 (expresionBooleano -> TRUE .)
    CADENAEXPRESION reduce using rule 51 (expresionBooleano -> TRUE .)
    TRUE            reduce using rule 51 (expresionBooleano -> TRUE .)
    FALSE           reduce using rule 51 (expresionBooleano -> TRUE .)
    LISTOF          reduce using rule 51 (expresionBooleano -> TRUE .)
    SETOF           reduce using rule 51 (expresionBooleano -> TRUE .)
    PAIR            reduce using rule 51 (expresionBooleano -> TRUE .)
    TRIPLE          reduce using rule 51 (expresionBooleano -> TRUE .)
    IF              reduce using rule 51 (expresionBooleano -> TRUE .)
    FOR             reduce using rule 51 (expresionBooleano -> TRUE .)
    WHILE           reduce using rule 51 (expresionBooleano -> TRUE .)
    PRINT           reduce using rule 51 (expresionBooleano -> TRUE .)
    PRINTLN         reduce using rule 51 (expresionBooleano -> TRUE .)
    APAR            reduce using rule 51 (expresionBooleano -> TRUE .)
    $end            reduce using rule 51 (expresionBooleano -> TRUE .)
    IGUALIGUAL      reduce using rule 51 (expresionBooleano -> TRUE .)
    TRIPLEIGUAL     reduce using rule 51 (expresionBooleano -> TRUE .)
    NOIGUAL         reduce using rule 51 (expresionBooleano -> TRUE .)
    MAYOR           reduce using rule 51 (expresionBooleano -> TRUE .)
    MENOR           reduce using rule 51 (expresionBooleano -> TRUE .)
    MAYORIGUAL      reduce using rule 51 (expresionBooleano -> TRUE .)
    MENORIGUAL      reduce using rule 51 (expresionBooleano -> TRUE .)
    ELSE            reduce using rule 51 (expresionBooleano -> TRUE .)
    AND             reduce using rule 51 (expresionBooleano -> TRUE .)
    OR              reduce using rule 51 (expresionBooleano -> TRUE .)
    CPAR            reduce using rule 51 (expresionBooleano -> TRUE .)
    CLLAVE          reduce using rule 51 (expresionBooleano -> TRUE .)


state 28

    (52) expresionBooleano -> FALSE .

    PUNTOCOMA       reduce using rule 52 (expresionBooleano -> FALSE .)
    VAL             reduce using rule 52 (expresionBooleano -> FALSE .)
    VAR             reduce using rule 52 (expresionBooleano -> FALSE .)
    ID              reduce using rule 52 (expresionBooleano -> FALSE .)
    ENTEROEXPRESION reduce using rule 52 (expresionBooleano -> FALSE .)
    CADENAEXPRESION reduce using rule 52 (expresionBooleano -> FALSE .)
    TRUE            reduce using rule 52 (expresionBooleano -> FALSE .)
    FALSE           reduce using rule 52 (expresionBooleano -> FALSE .)
    LISTOF          reduce using rule 52 (expresionBooleano -> FALSE .)
    SETOF           reduce using rule 52 (expresionBooleano -> FALSE .)
    PAIR            reduce using rule 52 (expresionBooleano -> FALSE .)
    TRIPLE          reduce using rule 52 (expresionBooleano -> FALSE .)
    IF              reduce using rule 52 (expresionBooleano -> FALSE .)
    FOR             reduce using rule 52 (expresionBooleano -> FALSE .)
    WHILE           reduce using rule 52 (expresionBooleano -> FALSE .)
    PRINT           reduce using rule 52 (expresionBooleano -> FALSE .)
    PRINTLN         reduce using rule 52 (expresionBooleano -> FALSE .)
    APAR            reduce using rule 52 (expresionBooleano -> FALSE .)
    $end            reduce using rule 52 (expresionBooleano -> FALSE .)
    IGUALIGUAL      reduce using rule 52 (expresionBooleano -> FALSE .)
    TRIPLEIGUAL     reduce using rule 52 (expresionBooleano -> FALSE .)
    NOIGUAL         reduce using rule 52 (expresionBooleano -> FALSE .)
    MAYOR           reduce using rule 52 (expresionBooleano -> FALSE .)
    MENOR           reduce using rule 52 (expresionBooleano -> FALSE .)
    MAYORIGUAL      reduce using rule 52 (expresionBooleano -> FALSE .)
    MENORIGUAL      reduce using rule 52 (expresionBooleano -> FALSE .)
    ELSE            reduce using rule 52 (expresionBooleano -> FALSE .)
    AND             reduce using rule 52 (expresionBooleano -> FALSE .)
    OR              reduce using rule 52 (expresionBooleano -> FALSE .)
    CPAR            reduce using rule 52 (expresionBooleano -> FALSE .)
    CLLAVE          reduce using rule 52 (expresionBooleano -> FALSE .)


state 29

    (55) list -> LISTOF . APAR contenido CPAR

    APAR            shift and go to state 71


state 30

    (56) set -> SETOF . APAR contenido CPAR

    APAR            shift and go to state 72


state 31

    (57) pair -> PAIR . APAR factorEspecial COMA factorEspecial CPAR

    APAR            shift and go to state 73


state 32

    (58) triple -> TRIPLE . APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR

    APAR            shift and go to state 74


state 33

    (66) expresion -> termino .
    (67) termino -> termino . SUMA factorEspecial
    (68) termino -> termino . RESTA factor
    (69) termino -> termino . MULT factor
    (70) termino -> termino . DIVISION factor
    (71) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    PUNTOCOMA       reduce using rule 66 (expresion -> termino .)
    VAL             reduce using rule 66 (expresion -> termino .)
    VAR             reduce using rule 66 (expresion -> termino .)
    ID              reduce using rule 66 (expresion -> termino .)
    ENTEROEXPRESION reduce using rule 66 (expresion -> termino .)
    CADENAEXPRESION reduce using rule 66 (expresion -> termino .)
    TRUE            reduce using rule 66 (expresion -> termino .)
    FALSE           reduce using rule 66 (expresion -> termino .)
    LISTOF          reduce using rule 66 (expresion -> termino .)
    SETOF           reduce using rule 66 (expresion -> termino .)
    PAIR            reduce using rule 66 (expresion -> termino .)
    TRIPLE          reduce using rule 66 (expresion -> termino .)
    IF              reduce using rule 66 (expresion -> termino .)
    FOR             reduce using rule 66 (expresion -> termino .)
    WHILE           reduce using rule 66 (expresion -> termino .)
    PRINT           reduce using rule 66 (expresion -> termino .)
    PRINTLN         reduce using rule 66 (expresion -> termino .)
    APAR            reduce using rule 66 (expresion -> termino .)
    $end            reduce using rule 66 (expresion -> termino .)
    CPAR            reduce using rule 66 (expresion -> termino .)
    IGUALIGUAL      reduce using rule 66 (expresion -> termino .)
    TRIPLEIGUAL     reduce using rule 66 (expresion -> termino .)
    NOIGUAL         reduce using rule 66 (expresion -> termino .)
    MAYOR           reduce using rule 66 (expresion -> termino .)
    MENOR           reduce using rule 66 (expresion -> termino .)
    MAYORIGUAL      reduce using rule 66 (expresion -> termino .)
    MENORIGUAL      reduce using rule 66 (expresion -> termino .)
    ELSE            reduce using rule 66 (expresion -> termino .)
    AND             reduce using rule 66 (expresion -> termino .)
    OR              reduce using rule 66 (expresion -> termino .)
    CLLAVE          reduce using rule 66 (expresion -> termino .)
    SUMA            shift and go to state 75
    RESTA           shift and go to state 76
    MULT            shift and go to state 77
    DIVISION        shift and go to state 78
    MODULO          shift and go to state 79

  ! SUMA            [ reduce using rule 66 (expresion -> termino .) ]
  ! RESTA           [ reduce using rule 66 (expresion -> termino .) ]
  ! DIVISION        [ reduce using rule 66 (expresion -> termino .) ]
  ! MULT            [ reduce using rule 66 (expresion -> termino .) ]
  ! MODULO          [ reduce using rule 66 (expresion -> termino .) ]


state 34

    (107) if -> IF . APAR condicion CPAR cuerpo
    (108) if -> IF . APAR condicion CPAR cuerpo ELSE cuerpo

    APAR            shift and go to state 80


state 35

    (109) for -> FOR . APAR ID IN ID CPAR cuerpo
    (110) for -> FOR . APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> FOR . APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> FOR . APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> FOR . APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> FOR . APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> FOR . APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> FOR . APAR ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> FOR . APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> FOR . APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo

    APAR            shift and go to state 81


state 36

    (119) while -> WHILE . APAR condicion CPAR cuerpo

    APAR            shift and go to state 82


state 37

    (16) printType -> PRINT .

    APAR            reduce using rule 16 (printType -> PRINT .)


state 38

    (17) printType -> PRINTLN .

    APAR            reduce using rule 17 (printType -> PRINTLN .)


state 39

    (72) termino -> factor .

    SUMA            reduce using rule 72 (termino -> factor .)
    RESTA           reduce using rule 72 (termino -> factor .)
    MULT            reduce using rule 72 (termino -> factor .)
    DIVISION        reduce using rule 72 (termino -> factor .)
    MODULO          reduce using rule 72 (termino -> factor .)
    PUNTOCOMA       reduce using rule 72 (termino -> factor .)
    VAL             reduce using rule 72 (termino -> factor .)
    VAR             reduce using rule 72 (termino -> factor .)
    ID              reduce using rule 72 (termino -> factor .)
    ENTEROEXPRESION reduce using rule 72 (termino -> factor .)
    CADENAEXPRESION reduce using rule 72 (termino -> factor .)
    TRUE            reduce using rule 72 (termino -> factor .)
    FALSE           reduce using rule 72 (termino -> factor .)
    LISTOF          reduce using rule 72 (termino -> factor .)
    SETOF           reduce using rule 72 (termino -> factor .)
    PAIR            reduce using rule 72 (termino -> factor .)
    TRIPLE          reduce using rule 72 (termino -> factor .)
    IF              reduce using rule 72 (termino -> factor .)
    FOR             reduce using rule 72 (termino -> factor .)
    WHILE           reduce using rule 72 (termino -> factor .)
    PRINT           reduce using rule 72 (termino -> factor .)
    PRINTLN         reduce using rule 72 (termino -> factor .)
    APAR            reduce using rule 72 (termino -> factor .)
    $end            reduce using rule 72 (termino -> factor .)
    CPAR            reduce using rule 72 (termino -> factor .)
    IGUALIGUAL      reduce using rule 72 (termino -> factor .)
    TRIPLEIGUAL     reduce using rule 72 (termino -> factor .)
    NOIGUAL         reduce using rule 72 (termino -> factor .)
    MAYOR           reduce using rule 72 (termino -> factor .)
    MENOR           reduce using rule 72 (termino -> factor .)
    MAYORIGUAL      reduce using rule 72 (termino -> factor .)
    MENORIGUAL      reduce using rule 72 (termino -> factor .)
    ELSE            reduce using rule 72 (termino -> factor .)
    AND             reduce using rule 72 (termino -> factor .)
    OR              reduce using rule 72 (termino -> factor .)
    CLLAVE          reduce using rule 72 (termino -> factor .)


state 40

    (3) todos -> todos sentencia .
    (4) todos -> todos sentencia . PUNTOCOMA

    VAL             reduce using rule 3 (todos -> todos sentencia .)
    VAR             reduce using rule 3 (todos -> todos sentencia .)
    ID              reduce using rule 3 (todos -> todos sentencia .)
    ENTEROEXPRESION reduce using rule 3 (todos -> todos sentencia .)
    CADENAEXPRESION reduce using rule 3 (todos -> todos sentencia .)
    TRUE            reduce using rule 3 (todos -> todos sentencia .)
    FALSE           reduce using rule 3 (todos -> todos sentencia .)
    LISTOF          reduce using rule 3 (todos -> todos sentencia .)
    SETOF           reduce using rule 3 (todos -> todos sentencia .)
    PAIR            reduce using rule 3 (todos -> todos sentencia .)
    TRIPLE          reduce using rule 3 (todos -> todos sentencia .)
    IF              reduce using rule 3 (todos -> todos sentencia .)
    FOR             reduce using rule 3 (todos -> todos sentencia .)
    WHILE           reduce using rule 3 (todos -> todos sentencia .)
    PRINT           reduce using rule 3 (todos -> todos sentencia .)
    PRINTLN         reduce using rule 3 (todos -> todos sentencia .)
    APAR            reduce using rule 3 (todos -> todos sentencia .)
    $end            reduce using rule 3 (todos -> todos sentencia .)
    PUNTOCOMA       shift and go to state 83


state 41

    (1) todos -> sentencia PUNTOCOMA .

    VAL             reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    VAR             reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    ID              reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    ENTEROEXPRESION reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    CADENAEXPRESION reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    TRUE            reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    FALSE           reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    LISTOF          reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    SETOF           reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    PAIR            reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    TRIPLE          reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    IF              reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    FOR             reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    WHILE           reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    PRINT           reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    PRINTLN         reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    APAR            reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    $end            reduce using rule 1 (todos -> sentencia PUNTOCOMA .)


state 42

    (24) asignacion -> VAL ID . tipoAsignacion
    (27) tipoAsignacion -> . declaracion
    (28) tipoAsignacion -> . inicializacion
    (29) tipoAsignacion -> . declaracion inicializacion
    (30) declaracion -> . DOSPUNTOS tipoDato
    (31) inicializacion -> . IGUAL valor

    DOSPUNTOS       shift and go to state 87
    IGUAL           shift and go to state 45

    tipoAsignacion                 shift and go to state 84
    declaracion                    shift and go to state 85
    inicializacion                 shift and go to state 86

state 43

    (26) asignacion -> ID inicializacion .

    PUNTOCOMA       reduce using rule 26 (asignacion -> ID inicializacion .)
    VAL             reduce using rule 26 (asignacion -> ID inicializacion .)
    VAR             reduce using rule 26 (asignacion -> ID inicializacion .)
    ID              reduce using rule 26 (asignacion -> ID inicializacion .)
    ENTEROEXPRESION reduce using rule 26 (asignacion -> ID inicializacion .)
    CADENAEXPRESION reduce using rule 26 (asignacion -> ID inicializacion .)
    TRUE            reduce using rule 26 (asignacion -> ID inicializacion .)
    FALSE           reduce using rule 26 (asignacion -> ID inicializacion .)
    LISTOF          reduce using rule 26 (asignacion -> ID inicializacion .)
    SETOF           reduce using rule 26 (asignacion -> ID inicializacion .)
    PAIR            reduce using rule 26 (asignacion -> ID inicializacion .)
    TRIPLE          reduce using rule 26 (asignacion -> ID inicializacion .)
    IF              reduce using rule 26 (asignacion -> ID inicializacion .)
    FOR             reduce using rule 26 (asignacion -> ID inicializacion .)
    WHILE           reduce using rule 26 (asignacion -> ID inicializacion .)
    PRINT           reduce using rule 26 (asignacion -> ID inicializacion .)
    PRINTLN         reduce using rule 26 (asignacion -> ID inicializacion .)
    APAR            reduce using rule 26 (asignacion -> ID inicializacion .)
    $end            reduce using rule 26 (asignacion -> ID inicializacion .)
    IGUALIGUAL      reduce using rule 26 (asignacion -> ID inicializacion .)
    TRIPLEIGUAL     reduce using rule 26 (asignacion -> ID inicializacion .)
    NOIGUAL         reduce using rule 26 (asignacion -> ID inicializacion .)
    MAYOR           reduce using rule 26 (asignacion -> ID inicializacion .)
    MENOR           reduce using rule 26 (asignacion -> ID inicializacion .)
    MAYORIGUAL      reduce using rule 26 (asignacion -> ID inicializacion .)
    MENORIGUAL      reduce using rule 26 (asignacion -> ID inicializacion .)
    ELSE            reduce using rule 26 (asignacion -> ID inicializacion .)
    AND             reduce using rule 26 (asignacion -> ID inicializacion .)
    OR              reduce using rule 26 (asignacion -> ID inicializacion .)
    CPAR            reduce using rule 26 (asignacion -> ID inicializacion .)
    CLLAVE          reduce using rule 26 (asignacion -> ID inicializacion .)


state 44

    (21) funcion -> ID PUNTO . CONTAINS APAR factorEspecial CPAR
    (22) funcion -> ID PUNTO . CONTAINS APAR ID CPAR
    (23) funcion -> ID PUNTO . GETINDEX APAR ENTEROEXPRESION CPAR

    CONTAINS        shift and go to state 88
    GETINDEX        shift and go to state 89


state 45

    (31) inicializacion -> IGUAL . valor
    (40) valor -> . ENTEROEXPRESION
    (41) valor -> . flotante
    (42) valor -> . expresionBooleano
    (43) valor -> . CADENAEXPRESION
    (44) valor -> . list
    (45) valor -> . set
    (46) valor -> . pair
    (47) valor -> . triple
    (48) valor -> . expresion
    (49) valor -> . ID
    (50) valor -> . if
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (51) expresionBooleano -> . TRUE
    (52) expresionBooleano -> . FALSE
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (57) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (58) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (107) if -> . IF APAR condicion CPAR cuerpo
    (108) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR

    ENTEROEXPRESION shift and go to state 91
    CADENAEXPRESION shift and go to state 92
    ID              shift and go to state 93
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30
    PAIR            shift and go to state 31
    TRIPLE          shift and go to state 32
    IF              shift and go to state 34
    APAR            shift and go to state 22

    valor                          shift and go to state 90
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 94
    termino                        shift and go to state 33
    factor                         shift and go to state 39

state 46

    (25) asignacion -> VAR ID . tipoAsignacion
    (27) tipoAsignacion -> . declaracion
    (28) tipoAsignacion -> . inicializacion
    (29) tipoAsignacion -> . declaracion inicializacion
    (30) declaracion -> . DOSPUNTOS tipoDato
    (31) inicializacion -> . IGUAL valor

    DOSPUNTOS       shift and go to state 87
    IGUAL           shift and go to state 45

    tipoAsignacion                 shift and go to state 95
    declaracion                    shift and go to state 85
    inicializacion                 shift and go to state 86

state 47

    (53) flotante -> ENTEROEXPRESION F .

    PUNTOCOMA       reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    VAL             reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    VAR             reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    ID              reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    ENTEROEXPRESION reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    CADENAEXPRESION reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    TRUE            reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    FALSE           reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    LISTOF          reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    SETOF           reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    PAIR            reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    TRIPLE          reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    IF              reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    FOR             reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    WHILE           reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    PRINT           reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    PRINTLN         reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    APAR            reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    $end            reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    SUMA            reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    RESTA           reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    MULT            reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    DIVISION        reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    MODULO          reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    CPAR            reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    IGUALIGUAL      reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    TRIPLEIGUAL     reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    NOIGUAL         reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    MAYOR           reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    MENOR           reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    MAYORIGUAL      reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    MENORIGUAL      reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    ELSE            reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    AND             reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    OR              reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    CLLAVE          reduce using rule 53 (flotante -> ENTEROEXPRESION F .)
    COMA            reduce using rule 53 (flotante -> ENTEROEXPRESION F .)


state 48

    (54) flotante -> ENTEROEXPRESION PUNTO . ENTEROEXPRESION F

    ENTEROEXPRESION shift and go to state 96


state 49

    (18) funcion -> CADENAEXPRESION PUNTO . COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> CADENAEXPRESION PUNTO . GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> CADENAEXPRESION PUNTO . HASHCODE APAR CPAR

    COMPARETO       shift and go to state 97
    GETINDEX        shift and go to state 98
    HASHCODE        shift and go to state 99


state 50

    (61) expresion -> expresion SUMA . termino
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 56
    CADENAEXPRESION shift and go to state 58
    ID              shift and go to state 61
    APAR            shift and go to state 22
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    termino                        shift and go to state 100
    factor                         shift and go to state 39
    flotante                       shift and go to state 57
    list                           shift and go to state 59
    set                            shift and go to state 60

state 51

    (62) expresion -> expresion RESTA . termino
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 56
    CADENAEXPRESION shift and go to state 58
    ID              shift and go to state 61
    APAR            shift and go to state 22
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    termino                        shift and go to state 101
    factor                         shift and go to state 39
    flotante                       shift and go to state 57
    list                           shift and go to state 59
    set                            shift and go to state 60

state 52

    (63) expresion -> expresion DIVISION . termino
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 56
    CADENAEXPRESION shift and go to state 58
    ID              shift and go to state 61
    APAR            shift and go to state 22
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    termino                        shift and go to state 102
    factor                         shift and go to state 39
    flotante                       shift and go to state 57
    list                           shift and go to state 59
    set                            shift and go to state 60

state 53

    (64) expresion -> expresion MULT . termino
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 56
    CADENAEXPRESION shift and go to state 58
    ID              shift and go to state 61
    APAR            shift and go to state 22
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    termino                        shift and go to state 103
    factor                         shift and go to state 39
    flotante                       shift and go to state 57
    list                           shift and go to state 59
    set                            shift and go to state 60

state 54

    (65) expresion -> expresion MODULO . termino
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 56
    CADENAEXPRESION shift and go to state 58
    ID              shift and go to state 61
    APAR            shift and go to state 22
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    termino                        shift and go to state 104
    factor                         shift and go to state 39
    flotante                       shift and go to state 57
    list                           shift and go to state 59
    set                            shift and go to state 60

state 55

    (86) factor -> APAR expresion . CPAR
    (61) expresion -> expresion . SUMA termino
    (62) expresion -> expresion . RESTA termino
    (63) expresion -> expresion . DIVISION termino
    (64) expresion -> expresion . MULT termino
    (65) expresion -> expresion . MODULO termino

    CPAR            shift and go to state 105
    SUMA            shift and go to state 50
    RESTA           shift and go to state 51
    DIVISION        shift and go to state 52
    MULT            shift and go to state 53
    MODULO          shift and go to state 54


state 56

    (73) termino -> ENTEROEXPRESION .
    (79) factor -> ENTEROEXPRESION .
    (53) flotante -> ENTEROEXPRESION . F
    (54) flotante -> ENTEROEXPRESION . PUNTO ENTEROEXPRESION F

  ! reduce/reduce conflict for SUMA resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for RESTA resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MULT resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for DIVISION resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MODULO resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAL resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAR resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ID resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRUE resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FALSE resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for LISTOF resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for SETOF resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PAIR resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IF resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FOR resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for WHILE resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINT resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYOR resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENOR resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for AND resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for OR resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 73 (termino -> ENTEROEXPRESION .)
    SUMA            reduce using rule 73 (termino -> ENTEROEXPRESION .)
    RESTA           reduce using rule 73 (termino -> ENTEROEXPRESION .)
    MULT            reduce using rule 73 (termino -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 73 (termino -> ENTEROEXPRESION .)
    MODULO          reduce using rule 73 (termino -> ENTEROEXPRESION .)
    CPAR            reduce using rule 73 (termino -> ENTEROEXPRESION .)
    PUNTOCOMA       reduce using rule 73 (termino -> ENTEROEXPRESION .)
    VAL             reduce using rule 73 (termino -> ENTEROEXPRESION .)
    VAR             reduce using rule 73 (termino -> ENTEROEXPRESION .)
    ID              reduce using rule 73 (termino -> ENTEROEXPRESION .)
    ENTEROEXPRESION reduce using rule 73 (termino -> ENTEROEXPRESION .)
    CADENAEXPRESION reduce using rule 73 (termino -> ENTEROEXPRESION .)
    TRUE            reduce using rule 73 (termino -> ENTEROEXPRESION .)
    FALSE           reduce using rule 73 (termino -> ENTEROEXPRESION .)
    LISTOF          reduce using rule 73 (termino -> ENTEROEXPRESION .)
    SETOF           reduce using rule 73 (termino -> ENTEROEXPRESION .)
    PAIR            reduce using rule 73 (termino -> ENTEROEXPRESION .)
    TRIPLE          reduce using rule 73 (termino -> ENTEROEXPRESION .)
    IF              reduce using rule 73 (termino -> ENTEROEXPRESION .)
    FOR             reduce using rule 73 (termino -> ENTEROEXPRESION .)
    WHILE           reduce using rule 73 (termino -> ENTEROEXPRESION .)
    PRINT           reduce using rule 73 (termino -> ENTEROEXPRESION .)
    PRINTLN         reduce using rule 73 (termino -> ENTEROEXPRESION .)
    APAR            reduce using rule 73 (termino -> ENTEROEXPRESION .)
    $end            reduce using rule 73 (termino -> ENTEROEXPRESION .)
    IGUALIGUAL      reduce using rule 73 (termino -> ENTEROEXPRESION .)
    TRIPLEIGUAL     reduce using rule 73 (termino -> ENTEROEXPRESION .)
    NOIGUAL         reduce using rule 73 (termino -> ENTEROEXPRESION .)
    MAYOR           reduce using rule 73 (termino -> ENTEROEXPRESION .)
    MENOR           reduce using rule 73 (termino -> ENTEROEXPRESION .)
    MAYORIGUAL      reduce using rule 73 (termino -> ENTEROEXPRESION .)
    MENORIGUAL      reduce using rule 73 (termino -> ENTEROEXPRESION .)
    ELSE            reduce using rule 73 (termino -> ENTEROEXPRESION .)
    AND             reduce using rule 73 (termino -> ENTEROEXPRESION .)
    OR              reduce using rule 73 (termino -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 73 (termino -> ENTEROEXPRESION .)
    F               shift and go to state 47
    PUNTO           shift and go to state 48

  ! SUMA            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! RESTA           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MULT            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! DIVISION        [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MODULO          [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! CPAR            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! PUNTOCOMA       [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! VAL             [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! VAR             [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! ID              [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! CADENAEXPRESION [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! TRUE            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! FALSE           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! LISTOF          [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! SETOF           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! PAIR            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! TRIPLE          [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! IF              [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! FOR             [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! WHILE           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! PRINT           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! PRINTLN         [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! APAR            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! $end            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! IGUALIGUAL      [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! TRIPLEIGUAL     [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! NOIGUAL         [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MAYOR           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MENOR           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MAYORIGUAL      [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MENORIGUAL      [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! ELSE            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! AND             [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! OR              [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]


state 57

    (74) termino -> flotante .
    (80) factor -> flotante .

  ! reduce/reduce conflict for SUMA resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for RESTA resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for MULT resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for DIVISION resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for MODULO resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for CPAR resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for VAL resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for VAR resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for ID resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for TRUE resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for FALSE resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for LISTOF resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for SETOF resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for PAIR resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for IF resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for FOR resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for WHILE resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for PRINT resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for APAR resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for $end resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for MAYOR resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for MENOR resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for ELSE resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for AND resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for OR resolved using rule 74 (termino -> flotante .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 74 (termino -> flotante .)
    SUMA            reduce using rule 74 (termino -> flotante .)
    RESTA           reduce using rule 74 (termino -> flotante .)
    MULT            reduce using rule 74 (termino -> flotante .)
    DIVISION        reduce using rule 74 (termino -> flotante .)
    MODULO          reduce using rule 74 (termino -> flotante .)
    CPAR            reduce using rule 74 (termino -> flotante .)
    PUNTOCOMA       reduce using rule 74 (termino -> flotante .)
    VAL             reduce using rule 74 (termino -> flotante .)
    VAR             reduce using rule 74 (termino -> flotante .)
    ID              reduce using rule 74 (termino -> flotante .)
    ENTEROEXPRESION reduce using rule 74 (termino -> flotante .)
    CADENAEXPRESION reduce using rule 74 (termino -> flotante .)
    TRUE            reduce using rule 74 (termino -> flotante .)
    FALSE           reduce using rule 74 (termino -> flotante .)
    LISTOF          reduce using rule 74 (termino -> flotante .)
    SETOF           reduce using rule 74 (termino -> flotante .)
    PAIR            reduce using rule 74 (termino -> flotante .)
    TRIPLE          reduce using rule 74 (termino -> flotante .)
    IF              reduce using rule 74 (termino -> flotante .)
    FOR             reduce using rule 74 (termino -> flotante .)
    WHILE           reduce using rule 74 (termino -> flotante .)
    PRINT           reduce using rule 74 (termino -> flotante .)
    PRINTLN         reduce using rule 74 (termino -> flotante .)
    APAR            reduce using rule 74 (termino -> flotante .)
    $end            reduce using rule 74 (termino -> flotante .)
    IGUALIGUAL      reduce using rule 74 (termino -> flotante .)
    TRIPLEIGUAL     reduce using rule 74 (termino -> flotante .)
    NOIGUAL         reduce using rule 74 (termino -> flotante .)
    MAYOR           reduce using rule 74 (termino -> flotante .)
    MENOR           reduce using rule 74 (termino -> flotante .)
    MAYORIGUAL      reduce using rule 74 (termino -> flotante .)
    MENORIGUAL      reduce using rule 74 (termino -> flotante .)
    ELSE            reduce using rule 74 (termino -> flotante .)
    AND             reduce using rule 74 (termino -> flotante .)
    OR              reduce using rule 74 (termino -> flotante .)
    CLLAVE          reduce using rule 74 (termino -> flotante .)

  ! SUMA            [ reduce using rule 80 (factor -> flotante .) ]
  ! RESTA           [ reduce using rule 80 (factor -> flotante .) ]
  ! MULT            [ reduce using rule 80 (factor -> flotante .) ]
  ! DIVISION        [ reduce using rule 80 (factor -> flotante .) ]
  ! MODULO          [ reduce using rule 80 (factor -> flotante .) ]
  ! CPAR            [ reduce using rule 80 (factor -> flotante .) ]
  ! PUNTOCOMA       [ reduce using rule 80 (factor -> flotante .) ]
  ! VAL             [ reduce using rule 80 (factor -> flotante .) ]
  ! VAR             [ reduce using rule 80 (factor -> flotante .) ]
  ! ID              [ reduce using rule 80 (factor -> flotante .) ]
  ! ENTEROEXPRESION [ reduce using rule 80 (factor -> flotante .) ]
  ! CADENAEXPRESION [ reduce using rule 80 (factor -> flotante .) ]
  ! TRUE            [ reduce using rule 80 (factor -> flotante .) ]
  ! FALSE           [ reduce using rule 80 (factor -> flotante .) ]
  ! LISTOF          [ reduce using rule 80 (factor -> flotante .) ]
  ! SETOF           [ reduce using rule 80 (factor -> flotante .) ]
  ! PAIR            [ reduce using rule 80 (factor -> flotante .) ]
  ! TRIPLE          [ reduce using rule 80 (factor -> flotante .) ]
  ! IF              [ reduce using rule 80 (factor -> flotante .) ]
  ! FOR             [ reduce using rule 80 (factor -> flotante .) ]
  ! WHILE           [ reduce using rule 80 (factor -> flotante .) ]
  ! PRINT           [ reduce using rule 80 (factor -> flotante .) ]
  ! PRINTLN         [ reduce using rule 80 (factor -> flotante .) ]
  ! APAR            [ reduce using rule 80 (factor -> flotante .) ]
  ! $end            [ reduce using rule 80 (factor -> flotante .) ]
  ! IGUALIGUAL      [ reduce using rule 80 (factor -> flotante .) ]
  ! TRIPLEIGUAL     [ reduce using rule 80 (factor -> flotante .) ]
  ! NOIGUAL         [ reduce using rule 80 (factor -> flotante .) ]
  ! MAYOR           [ reduce using rule 80 (factor -> flotante .) ]
  ! MENOR           [ reduce using rule 80 (factor -> flotante .) ]
  ! MAYORIGUAL      [ reduce using rule 80 (factor -> flotante .) ]
  ! MENORIGUAL      [ reduce using rule 80 (factor -> flotante .) ]
  ! ELSE            [ reduce using rule 80 (factor -> flotante .) ]
  ! AND             [ reduce using rule 80 (factor -> flotante .) ]
  ! OR              [ reduce using rule 80 (factor -> flotante .) ]
  ! CLLAVE          [ reduce using rule 80 (factor -> flotante .) ]


state 58

    (75) termino -> CADENAEXPRESION .

    SUMA            reduce using rule 75 (termino -> CADENAEXPRESION .)
    RESTA           reduce using rule 75 (termino -> CADENAEXPRESION .)
    MULT            reduce using rule 75 (termino -> CADENAEXPRESION .)
    DIVISION        reduce using rule 75 (termino -> CADENAEXPRESION .)
    MODULO          reduce using rule 75 (termino -> CADENAEXPRESION .)
    CPAR            reduce using rule 75 (termino -> CADENAEXPRESION .)
    PUNTOCOMA       reduce using rule 75 (termino -> CADENAEXPRESION .)
    VAL             reduce using rule 75 (termino -> CADENAEXPRESION .)
    VAR             reduce using rule 75 (termino -> CADENAEXPRESION .)
    ID              reduce using rule 75 (termino -> CADENAEXPRESION .)
    ENTEROEXPRESION reduce using rule 75 (termino -> CADENAEXPRESION .)
    CADENAEXPRESION reduce using rule 75 (termino -> CADENAEXPRESION .)
    TRUE            reduce using rule 75 (termino -> CADENAEXPRESION .)
    FALSE           reduce using rule 75 (termino -> CADENAEXPRESION .)
    LISTOF          reduce using rule 75 (termino -> CADENAEXPRESION .)
    SETOF           reduce using rule 75 (termino -> CADENAEXPRESION .)
    PAIR            reduce using rule 75 (termino -> CADENAEXPRESION .)
    TRIPLE          reduce using rule 75 (termino -> CADENAEXPRESION .)
    IF              reduce using rule 75 (termino -> CADENAEXPRESION .)
    FOR             reduce using rule 75 (termino -> CADENAEXPRESION .)
    WHILE           reduce using rule 75 (termino -> CADENAEXPRESION .)
    PRINT           reduce using rule 75 (termino -> CADENAEXPRESION .)
    PRINTLN         reduce using rule 75 (termino -> CADENAEXPRESION .)
    APAR            reduce using rule 75 (termino -> CADENAEXPRESION .)
    $end            reduce using rule 75 (termino -> CADENAEXPRESION .)
    IGUALIGUAL      reduce using rule 75 (termino -> CADENAEXPRESION .)
    TRIPLEIGUAL     reduce using rule 75 (termino -> CADENAEXPRESION .)
    NOIGUAL         reduce using rule 75 (termino -> CADENAEXPRESION .)
    MAYOR           reduce using rule 75 (termino -> CADENAEXPRESION .)
    MENOR           reduce using rule 75 (termino -> CADENAEXPRESION .)
    MAYORIGUAL      reduce using rule 75 (termino -> CADENAEXPRESION .)
    MENORIGUAL      reduce using rule 75 (termino -> CADENAEXPRESION .)
    ELSE            reduce using rule 75 (termino -> CADENAEXPRESION .)
    AND             reduce using rule 75 (termino -> CADENAEXPRESION .)
    OR              reduce using rule 75 (termino -> CADENAEXPRESION .)
    CLLAVE          reduce using rule 75 (termino -> CADENAEXPRESION .)


state 59

    (76) termino -> list .

    SUMA            reduce using rule 76 (termino -> list .)
    RESTA           reduce using rule 76 (termino -> list .)
    MULT            reduce using rule 76 (termino -> list .)
    DIVISION        reduce using rule 76 (termino -> list .)
    MODULO          reduce using rule 76 (termino -> list .)
    CPAR            reduce using rule 76 (termino -> list .)
    PUNTOCOMA       reduce using rule 76 (termino -> list .)
    VAL             reduce using rule 76 (termino -> list .)
    VAR             reduce using rule 76 (termino -> list .)
    ID              reduce using rule 76 (termino -> list .)
    ENTEROEXPRESION reduce using rule 76 (termino -> list .)
    CADENAEXPRESION reduce using rule 76 (termino -> list .)
    TRUE            reduce using rule 76 (termino -> list .)
    FALSE           reduce using rule 76 (termino -> list .)
    LISTOF          reduce using rule 76 (termino -> list .)
    SETOF           reduce using rule 76 (termino -> list .)
    PAIR            reduce using rule 76 (termino -> list .)
    TRIPLE          reduce using rule 76 (termino -> list .)
    IF              reduce using rule 76 (termino -> list .)
    FOR             reduce using rule 76 (termino -> list .)
    WHILE           reduce using rule 76 (termino -> list .)
    PRINT           reduce using rule 76 (termino -> list .)
    PRINTLN         reduce using rule 76 (termino -> list .)
    APAR            reduce using rule 76 (termino -> list .)
    $end            reduce using rule 76 (termino -> list .)
    IGUALIGUAL      reduce using rule 76 (termino -> list .)
    TRIPLEIGUAL     reduce using rule 76 (termino -> list .)
    NOIGUAL         reduce using rule 76 (termino -> list .)
    MAYOR           reduce using rule 76 (termino -> list .)
    MENOR           reduce using rule 76 (termino -> list .)
    MAYORIGUAL      reduce using rule 76 (termino -> list .)
    MENORIGUAL      reduce using rule 76 (termino -> list .)
    ELSE            reduce using rule 76 (termino -> list .)
    AND             reduce using rule 76 (termino -> list .)
    OR              reduce using rule 76 (termino -> list .)
    CLLAVE          reduce using rule 76 (termino -> list .)


state 60

    (77) termino -> set .

    SUMA            reduce using rule 77 (termino -> set .)
    RESTA           reduce using rule 77 (termino -> set .)
    MULT            reduce using rule 77 (termino -> set .)
    DIVISION        reduce using rule 77 (termino -> set .)
    MODULO          reduce using rule 77 (termino -> set .)
    CPAR            reduce using rule 77 (termino -> set .)
    PUNTOCOMA       reduce using rule 77 (termino -> set .)
    VAL             reduce using rule 77 (termino -> set .)
    VAR             reduce using rule 77 (termino -> set .)
    ID              reduce using rule 77 (termino -> set .)
    ENTEROEXPRESION reduce using rule 77 (termino -> set .)
    CADENAEXPRESION reduce using rule 77 (termino -> set .)
    TRUE            reduce using rule 77 (termino -> set .)
    FALSE           reduce using rule 77 (termino -> set .)
    LISTOF          reduce using rule 77 (termino -> set .)
    SETOF           reduce using rule 77 (termino -> set .)
    PAIR            reduce using rule 77 (termino -> set .)
    TRIPLE          reduce using rule 77 (termino -> set .)
    IF              reduce using rule 77 (termino -> set .)
    FOR             reduce using rule 77 (termino -> set .)
    WHILE           reduce using rule 77 (termino -> set .)
    PRINT           reduce using rule 77 (termino -> set .)
    PRINTLN         reduce using rule 77 (termino -> set .)
    APAR            reduce using rule 77 (termino -> set .)
    $end            reduce using rule 77 (termino -> set .)
    IGUALIGUAL      reduce using rule 77 (termino -> set .)
    TRIPLEIGUAL     reduce using rule 77 (termino -> set .)
    NOIGUAL         reduce using rule 77 (termino -> set .)
    MAYOR           reduce using rule 77 (termino -> set .)
    MENOR           reduce using rule 77 (termino -> set .)
    MAYORIGUAL      reduce using rule 77 (termino -> set .)
    MENORIGUAL      reduce using rule 77 (termino -> set .)
    ELSE            reduce using rule 77 (termino -> set .)
    AND             reduce using rule 77 (termino -> set .)
    OR              reduce using rule 77 (termino -> set .)
    CLLAVE          reduce using rule 77 (termino -> set .)


state 61

    (78) termino -> ID .
    (81) factor -> ID .

  ! reduce/reduce conflict for SUMA resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for RESTA resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for MULT resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for DIVISION resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for CPAR resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for VAL resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for VAR resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for LISTOF resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for SETOF resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for PAIR resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for APAR resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for MAYOR resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for MENOR resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for AND resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for OR resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 78 (termino -> ID .)
    SUMA            reduce using rule 78 (termino -> ID .)
    RESTA           reduce using rule 78 (termino -> ID .)
    MULT            reduce using rule 78 (termino -> ID .)
    DIVISION        reduce using rule 78 (termino -> ID .)
    MODULO          reduce using rule 78 (termino -> ID .)
    CPAR            reduce using rule 78 (termino -> ID .)
    PUNTOCOMA       reduce using rule 78 (termino -> ID .)
    VAL             reduce using rule 78 (termino -> ID .)
    VAR             reduce using rule 78 (termino -> ID .)
    ID              reduce using rule 78 (termino -> ID .)
    ENTEROEXPRESION reduce using rule 78 (termino -> ID .)
    CADENAEXPRESION reduce using rule 78 (termino -> ID .)
    TRUE            reduce using rule 78 (termino -> ID .)
    FALSE           reduce using rule 78 (termino -> ID .)
    LISTOF          reduce using rule 78 (termino -> ID .)
    SETOF           reduce using rule 78 (termino -> ID .)
    PAIR            reduce using rule 78 (termino -> ID .)
    TRIPLE          reduce using rule 78 (termino -> ID .)
    IF              reduce using rule 78 (termino -> ID .)
    FOR             reduce using rule 78 (termino -> ID .)
    WHILE           reduce using rule 78 (termino -> ID .)
    PRINT           reduce using rule 78 (termino -> ID .)
    PRINTLN         reduce using rule 78 (termino -> ID .)
    APAR            reduce using rule 78 (termino -> ID .)
    $end            reduce using rule 78 (termino -> ID .)
    IGUALIGUAL      reduce using rule 78 (termino -> ID .)
    TRIPLEIGUAL     reduce using rule 78 (termino -> ID .)
    NOIGUAL         reduce using rule 78 (termino -> ID .)
    MAYOR           reduce using rule 78 (termino -> ID .)
    MENOR           reduce using rule 78 (termino -> ID .)
    MAYORIGUAL      reduce using rule 78 (termino -> ID .)
    MENORIGUAL      reduce using rule 78 (termino -> ID .)
    ELSE            reduce using rule 78 (termino -> ID .)
    AND             reduce using rule 78 (termino -> ID .)
    OR              reduce using rule 78 (termino -> ID .)
    CLLAVE          reduce using rule 78 (termino -> ID .)

  ! SUMA            [ reduce using rule 81 (factor -> ID .) ]
  ! RESTA           [ reduce using rule 81 (factor -> ID .) ]
  ! MULT            [ reduce using rule 81 (factor -> ID .) ]
  ! DIVISION        [ reduce using rule 81 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 81 (factor -> ID .) ]
  ! CPAR            [ reduce using rule 81 (factor -> ID .) ]
  ! PUNTOCOMA       [ reduce using rule 81 (factor -> ID .) ]
  ! VAL             [ reduce using rule 81 (factor -> ID .) ]
  ! VAR             [ reduce using rule 81 (factor -> ID .) ]
  ! ID              [ reduce using rule 81 (factor -> ID .) ]
  ! ENTEROEXPRESION [ reduce using rule 81 (factor -> ID .) ]
  ! CADENAEXPRESION [ reduce using rule 81 (factor -> ID .) ]
  ! TRUE            [ reduce using rule 81 (factor -> ID .) ]
  ! FALSE           [ reduce using rule 81 (factor -> ID .) ]
  ! LISTOF          [ reduce using rule 81 (factor -> ID .) ]
  ! SETOF           [ reduce using rule 81 (factor -> ID .) ]
  ! PAIR            [ reduce using rule 81 (factor -> ID .) ]
  ! TRIPLE          [ reduce using rule 81 (factor -> ID .) ]
  ! IF              [ reduce using rule 81 (factor -> ID .) ]
  ! FOR             [ reduce using rule 81 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 81 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 81 (factor -> ID .) ]
  ! PRINTLN         [ reduce using rule 81 (factor -> ID .) ]
  ! APAR            [ reduce using rule 81 (factor -> ID .) ]
  ! $end            [ reduce using rule 81 (factor -> ID .) ]
  ! IGUALIGUAL      [ reduce using rule 81 (factor -> ID .) ]
  ! TRIPLEIGUAL     [ reduce using rule 81 (factor -> ID .) ]
  ! NOIGUAL         [ reduce using rule 81 (factor -> ID .) ]
  ! MAYOR           [ reduce using rule 81 (factor -> ID .) ]
  ! MENOR           [ reduce using rule 81 (factor -> ID .) ]
  ! MAYORIGUAL      [ reduce using rule 81 (factor -> ID .) ]
  ! MENORIGUAL      [ reduce using rule 81 (factor -> ID .) ]
  ! ELSE            [ reduce using rule 81 (factor -> ID .) ]
  ! AND             [ reduce using rule 81 (factor -> ID .) ]
  ! OR              [ reduce using rule 81 (factor -> ID .) ]
  ! CLLAVE          [ reduce using rule 81 (factor -> ID .) ]


state 62

    (100) condicion -> compmiembro comparador . compmiembro
    (101) condicion -> compmiembro comparador . compmiembro conector compmiembro comparador compmiembro
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion

    ID              shift and go to state 107
    ENTEROEXPRESION shift and go to state 108
    CADENAEXPRESION shift and go to state 111
    VAL             shift and go to state 9
    VAR             shift and go to state 11

    compmiembro                    shift and go to state 106
    funcion                        shift and go to state 109
    asignacion                     shift and go to state 110

state 63

    (87) comparador -> IGUALIGUAL .

    ID              reduce using rule 87 (comparador -> IGUALIGUAL .)
    ENTEROEXPRESION reduce using rule 87 (comparador -> IGUALIGUAL .)
    CADENAEXPRESION reduce using rule 87 (comparador -> IGUALIGUAL .)
    VAL             reduce using rule 87 (comparador -> IGUALIGUAL .)
    VAR             reduce using rule 87 (comparador -> IGUALIGUAL .)


state 64

    (88) comparador -> TRIPLEIGUAL .

    ID              reduce using rule 88 (comparador -> TRIPLEIGUAL .)
    ENTEROEXPRESION reduce using rule 88 (comparador -> TRIPLEIGUAL .)
    CADENAEXPRESION reduce using rule 88 (comparador -> TRIPLEIGUAL .)
    VAL             reduce using rule 88 (comparador -> TRIPLEIGUAL .)
    VAR             reduce using rule 88 (comparador -> TRIPLEIGUAL .)


state 65

    (89) comparador -> NOIGUAL .

    ID              reduce using rule 89 (comparador -> NOIGUAL .)
    ENTEROEXPRESION reduce using rule 89 (comparador -> NOIGUAL .)
    CADENAEXPRESION reduce using rule 89 (comparador -> NOIGUAL .)
    VAL             reduce using rule 89 (comparador -> NOIGUAL .)
    VAR             reduce using rule 89 (comparador -> NOIGUAL .)


state 66

    (90) comparador -> MAYOR .

    ID              reduce using rule 90 (comparador -> MAYOR .)
    ENTEROEXPRESION reduce using rule 90 (comparador -> MAYOR .)
    CADENAEXPRESION reduce using rule 90 (comparador -> MAYOR .)
    VAL             reduce using rule 90 (comparador -> MAYOR .)
    VAR             reduce using rule 90 (comparador -> MAYOR .)


state 67

    (91) comparador -> MENOR .

    ID              reduce using rule 91 (comparador -> MENOR .)
    ENTEROEXPRESION reduce using rule 91 (comparador -> MENOR .)
    CADENAEXPRESION reduce using rule 91 (comparador -> MENOR .)
    VAL             reduce using rule 91 (comparador -> MENOR .)
    VAR             reduce using rule 91 (comparador -> MENOR .)


state 68

    (92) comparador -> MAYORIGUAL .

    ID              reduce using rule 92 (comparador -> MAYORIGUAL .)
    ENTEROEXPRESION reduce using rule 92 (comparador -> MAYORIGUAL .)
    CADENAEXPRESION reduce using rule 92 (comparador -> MAYORIGUAL .)
    VAL             reduce using rule 92 (comparador -> MAYORIGUAL .)
    VAR             reduce using rule 92 (comparador -> MAYORIGUAL .)


state 69

    (93) comparador -> MENORIGUAL .

    ID              reduce using rule 93 (comparador -> MENORIGUAL .)
    ENTEROEXPRESION reduce using rule 93 (comparador -> MENORIGUAL .)
    CADENAEXPRESION reduce using rule 93 (comparador -> MENORIGUAL .)
    VAL             reduce using rule 93 (comparador -> MENORIGUAL .)
    VAR             reduce using rule 93 (comparador -> MENORIGUAL .)


state 70

    (11) print -> printType APAR . CADENAEXPRESION CPAR
    (12) print -> printType APAR . CPAR
    (13) print -> printType APAR . ID CPAR
    (14) print -> printType APAR . funcion CPAR
    (15) print -> printType APAR . error CPAR
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR

    CADENAEXPRESION shift and go to state 112
    CPAR            shift and go to state 113
    ID              shift and go to state 114
    error           shift and go to state 116

    funcion                        shift and go to state 115

state 71

    (55) list -> LISTOF APAR . contenido CPAR
    (59) contenido -> . factorEspecial
    (60) contenido -> . factorEspecial COMA contenido
    (82) factorEspecial -> . factor
    (83) factorEspecial -> . CADENAEXPRESION
    (84) factorEspecial -> . list
    (85) factorEspecial -> . set
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 120
    ENTEROEXPRESION shift and go to state 123
    ID              shift and go to state 125
    APAR            shift and go to state 22
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    contenido                      shift and go to state 117
    factorEspecial                 shift and go to state 118
    factor                         shift and go to state 119
    list                           shift and go to state 121
    set                            shift and go to state 122
    flotante                       shift and go to state 124

state 72

    (56) set -> SETOF APAR . contenido CPAR
    (59) contenido -> . factorEspecial
    (60) contenido -> . factorEspecial COMA contenido
    (82) factorEspecial -> . factor
    (83) factorEspecial -> . CADENAEXPRESION
    (84) factorEspecial -> . list
    (85) factorEspecial -> . set
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 120
    ENTEROEXPRESION shift and go to state 123
    ID              shift and go to state 125
    APAR            shift and go to state 22
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    contenido                      shift and go to state 126
    factorEspecial                 shift and go to state 118
    factor                         shift and go to state 119
    list                           shift and go to state 121
    set                            shift and go to state 122
    flotante                       shift and go to state 124

state 73

    (57) pair -> PAIR APAR . factorEspecial COMA factorEspecial CPAR
    (82) factorEspecial -> . factor
    (83) factorEspecial -> . CADENAEXPRESION
    (84) factorEspecial -> . list
    (85) factorEspecial -> . set
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 120
    ENTEROEXPRESION shift and go to state 123
    ID              shift and go to state 125
    APAR            shift and go to state 22
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    factorEspecial                 shift and go to state 127
    factor                         shift and go to state 119
    list                           shift and go to state 121
    set                            shift and go to state 122
    flotante                       shift and go to state 124

state 74

    (58) triple -> TRIPLE APAR . factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (82) factorEspecial -> . factor
    (83) factorEspecial -> . CADENAEXPRESION
    (84) factorEspecial -> . list
    (85) factorEspecial -> . set
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 120
    ENTEROEXPRESION shift and go to state 123
    ID              shift and go to state 125
    APAR            shift and go to state 22
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    factorEspecial                 shift and go to state 128
    factor                         shift and go to state 119
    list                           shift and go to state 121
    set                            shift and go to state 122
    flotante                       shift and go to state 124

state 75

    (67) termino -> termino SUMA . factorEspecial
    (82) factorEspecial -> . factor
    (83) factorEspecial -> . CADENAEXPRESION
    (84) factorEspecial -> . list
    (85) factorEspecial -> . set
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 120
    ENTEROEXPRESION shift and go to state 123
    ID              shift and go to state 125
    APAR            shift and go to state 22
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    factorEspecial                 shift and go to state 129
    factor                         shift and go to state 119
    list                           shift and go to state 121
    set                            shift and go to state 122
    flotante                       shift and go to state 124

state 76

    (68) termino -> termino RESTA . factor
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    ENTEROEXPRESION shift and go to state 123
    ID              shift and go to state 125
    APAR            shift and go to state 22

    factor                         shift and go to state 130
    flotante                       shift and go to state 124

state 77

    (69) termino -> termino MULT . factor
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    ENTEROEXPRESION shift and go to state 123
    ID              shift and go to state 125
    APAR            shift and go to state 22

    factor                         shift and go to state 131
    flotante                       shift and go to state 124

state 78

    (70) termino -> termino DIVISION . factor
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    ENTEROEXPRESION shift and go to state 123
    ID              shift and go to state 125
    APAR            shift and go to state 22

    factor                         shift and go to state 132
    flotante                       shift and go to state 124

state 79

    (71) termino -> termino MODULO . factor
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    ENTEROEXPRESION shift and go to state 123
    ID              shift and go to state 125
    APAR            shift and go to state 22

    factor                         shift and go to state 133
    flotante                       shift and go to state 124

state 80

    (107) if -> IF APAR . condicion CPAR cuerpo
    (108) if -> IF APAR . condicion CPAR cuerpo ELSE cuerpo
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion

    ID              shift and go to state 107
    ENTEROEXPRESION shift and go to state 108
    CADENAEXPRESION shift and go to state 111
    VAL             shift and go to state 9
    VAR             shift and go to state 11

    condicion                      shift and go to state 134
    compmiembro                    shift and go to state 25
    funcion                        shift and go to state 109
    asignacion                     shift and go to state 110

state 81

    (109) for -> FOR APAR . ID IN ID CPAR cuerpo
    (110) for -> FOR APAR . ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> FOR APAR . ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> FOR APAR . ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> FOR APAR . ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> FOR APAR . ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> FOR APAR . ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> FOR APAR . ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> FOR APAR . APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> FOR APAR . APAR ID COMA ID CPAR IN ID CPAR cuerpo

    ID              shift and go to state 136
    APAR            shift and go to state 135


state 82

    (119) while -> WHILE APAR . condicion CPAR cuerpo
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion

    ID              shift and go to state 107
    ENTEROEXPRESION shift and go to state 108
    CADENAEXPRESION shift and go to state 111
    VAL             shift and go to state 9
    VAR             shift and go to state 11

    condicion                      shift and go to state 137
    compmiembro                    shift and go to state 25
    funcion                        shift and go to state 109
    asignacion                     shift and go to state 110

state 83

    (4) todos -> todos sentencia PUNTOCOMA .

    VAL             reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    VAR             reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    ID              reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    ENTEROEXPRESION reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    CADENAEXPRESION reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    TRUE            reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    FALSE           reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    LISTOF          reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    SETOF           reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    PAIR            reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    TRIPLE          reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    IF              reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    FOR             reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    WHILE           reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    PRINT           reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    PRINTLN         reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    APAR            reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    $end            reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)


state 84

    (24) asignacion -> VAL ID tipoAsignacion .

    PUNTOCOMA       reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    VAL             reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    VAR             reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    ID              reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    ENTEROEXPRESION reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    CADENAEXPRESION reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    TRUE            reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    FALSE           reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    LISTOF          reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    SETOF           reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    PAIR            reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    TRIPLE          reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    IF              reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    FOR             reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    WHILE           reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    PRINT           reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    PRINTLN         reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    APAR            reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    $end            reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    IGUALIGUAL      reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    TRIPLEIGUAL     reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    NOIGUAL         reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    MAYOR           reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    MENOR           reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    MAYORIGUAL      reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    MENORIGUAL      reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    ELSE            reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    AND             reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    OR              reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    CPAR            reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)
    CLLAVE          reduce using rule 24 (asignacion -> VAL ID tipoAsignacion .)


state 85

    (27) tipoAsignacion -> declaracion .
    (29) tipoAsignacion -> declaracion . inicializacion
    (31) inicializacion -> . IGUAL valor

    PUNTOCOMA       reduce using rule 27 (tipoAsignacion -> declaracion .)
    VAL             reduce using rule 27 (tipoAsignacion -> declaracion .)
    VAR             reduce using rule 27 (tipoAsignacion -> declaracion .)
    ID              reduce using rule 27 (tipoAsignacion -> declaracion .)
    ENTEROEXPRESION reduce using rule 27 (tipoAsignacion -> declaracion .)
    CADENAEXPRESION reduce using rule 27 (tipoAsignacion -> declaracion .)
    TRUE            reduce using rule 27 (tipoAsignacion -> declaracion .)
    FALSE           reduce using rule 27 (tipoAsignacion -> declaracion .)
    LISTOF          reduce using rule 27 (tipoAsignacion -> declaracion .)
    SETOF           reduce using rule 27 (tipoAsignacion -> declaracion .)
    PAIR            reduce using rule 27 (tipoAsignacion -> declaracion .)
    TRIPLE          reduce using rule 27 (tipoAsignacion -> declaracion .)
    IF              reduce using rule 27 (tipoAsignacion -> declaracion .)
    FOR             reduce using rule 27 (tipoAsignacion -> declaracion .)
    WHILE           reduce using rule 27 (tipoAsignacion -> declaracion .)
    PRINT           reduce using rule 27 (tipoAsignacion -> declaracion .)
    PRINTLN         reduce using rule 27 (tipoAsignacion -> declaracion .)
    APAR            reduce using rule 27 (tipoAsignacion -> declaracion .)
    $end            reduce using rule 27 (tipoAsignacion -> declaracion .)
    IGUALIGUAL      reduce using rule 27 (tipoAsignacion -> declaracion .)
    TRIPLEIGUAL     reduce using rule 27 (tipoAsignacion -> declaracion .)
    NOIGUAL         reduce using rule 27 (tipoAsignacion -> declaracion .)
    MAYOR           reduce using rule 27 (tipoAsignacion -> declaracion .)
    MENOR           reduce using rule 27 (tipoAsignacion -> declaracion .)
    MAYORIGUAL      reduce using rule 27 (tipoAsignacion -> declaracion .)
    MENORIGUAL      reduce using rule 27 (tipoAsignacion -> declaracion .)
    ELSE            reduce using rule 27 (tipoAsignacion -> declaracion .)
    AND             reduce using rule 27 (tipoAsignacion -> declaracion .)
    OR              reduce using rule 27 (tipoAsignacion -> declaracion .)
    CPAR            reduce using rule 27 (tipoAsignacion -> declaracion .)
    CLLAVE          reduce using rule 27 (tipoAsignacion -> declaracion .)
    IGUAL           shift and go to state 45

    inicializacion                 shift and go to state 138

state 86

    (28) tipoAsignacion -> inicializacion .

    PUNTOCOMA       reduce using rule 28 (tipoAsignacion -> inicializacion .)
    VAL             reduce using rule 28 (tipoAsignacion -> inicializacion .)
    VAR             reduce using rule 28 (tipoAsignacion -> inicializacion .)
    ID              reduce using rule 28 (tipoAsignacion -> inicializacion .)
    ENTEROEXPRESION reduce using rule 28 (tipoAsignacion -> inicializacion .)
    CADENAEXPRESION reduce using rule 28 (tipoAsignacion -> inicializacion .)
    TRUE            reduce using rule 28 (tipoAsignacion -> inicializacion .)
    FALSE           reduce using rule 28 (tipoAsignacion -> inicializacion .)
    LISTOF          reduce using rule 28 (tipoAsignacion -> inicializacion .)
    SETOF           reduce using rule 28 (tipoAsignacion -> inicializacion .)
    PAIR            reduce using rule 28 (tipoAsignacion -> inicializacion .)
    TRIPLE          reduce using rule 28 (tipoAsignacion -> inicializacion .)
    IF              reduce using rule 28 (tipoAsignacion -> inicializacion .)
    FOR             reduce using rule 28 (tipoAsignacion -> inicializacion .)
    WHILE           reduce using rule 28 (tipoAsignacion -> inicializacion .)
    PRINT           reduce using rule 28 (tipoAsignacion -> inicializacion .)
    PRINTLN         reduce using rule 28 (tipoAsignacion -> inicializacion .)
    APAR            reduce using rule 28 (tipoAsignacion -> inicializacion .)
    $end            reduce using rule 28 (tipoAsignacion -> inicializacion .)
    IGUALIGUAL      reduce using rule 28 (tipoAsignacion -> inicializacion .)
    TRIPLEIGUAL     reduce using rule 28 (tipoAsignacion -> inicializacion .)
    NOIGUAL         reduce using rule 28 (tipoAsignacion -> inicializacion .)
    MAYOR           reduce using rule 28 (tipoAsignacion -> inicializacion .)
    MENOR           reduce using rule 28 (tipoAsignacion -> inicializacion .)
    MAYORIGUAL      reduce using rule 28 (tipoAsignacion -> inicializacion .)
    MENORIGUAL      reduce using rule 28 (tipoAsignacion -> inicializacion .)
    ELSE            reduce using rule 28 (tipoAsignacion -> inicializacion .)
    AND             reduce using rule 28 (tipoAsignacion -> inicializacion .)
    OR              reduce using rule 28 (tipoAsignacion -> inicializacion .)
    CPAR            reduce using rule 28 (tipoAsignacion -> inicializacion .)
    CLLAVE          reduce using rule 28 (tipoAsignacion -> inicializacion .)


state 87

    (30) declaracion -> DOSPUNTOS . tipoDato
    (32) tipoDato -> . INT
    (33) tipoDato -> . FLOAT
    (34) tipoDato -> . BOOLEAN
    (35) tipoDato -> . STRING
    (36) tipoDato -> . LIST MENOR tipoDato MAYOR
    (37) tipoDato -> . SET MENOR tipoDato MAYOR
    (38) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (39) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    BOOLEAN         shift and go to state 142
    STRING          shift and go to state 143
    LIST            shift and go to state 144
    SET             shift and go to state 145
    PAIR            shift and go to state 146
    TRIPLE          shift and go to state 147

    tipoDato                       shift and go to state 139

state 88

    (21) funcion -> ID PUNTO CONTAINS . APAR factorEspecial CPAR
    (22) funcion -> ID PUNTO CONTAINS . APAR ID CPAR

    APAR            shift and go to state 148


state 89

    (23) funcion -> ID PUNTO GETINDEX . APAR ENTEROEXPRESION CPAR

    APAR            shift and go to state 149


state 90

    (31) inicializacion -> IGUAL valor .

    PUNTOCOMA       reduce using rule 31 (inicializacion -> IGUAL valor .)
    VAL             reduce using rule 31 (inicializacion -> IGUAL valor .)
    VAR             reduce using rule 31 (inicializacion -> IGUAL valor .)
    ID              reduce using rule 31 (inicializacion -> IGUAL valor .)
    ENTEROEXPRESION reduce using rule 31 (inicializacion -> IGUAL valor .)
    CADENAEXPRESION reduce using rule 31 (inicializacion -> IGUAL valor .)
    TRUE            reduce using rule 31 (inicializacion -> IGUAL valor .)
    FALSE           reduce using rule 31 (inicializacion -> IGUAL valor .)
    LISTOF          reduce using rule 31 (inicializacion -> IGUAL valor .)
    SETOF           reduce using rule 31 (inicializacion -> IGUAL valor .)
    PAIR            reduce using rule 31 (inicializacion -> IGUAL valor .)
    TRIPLE          reduce using rule 31 (inicializacion -> IGUAL valor .)
    IF              reduce using rule 31 (inicializacion -> IGUAL valor .)
    FOR             reduce using rule 31 (inicializacion -> IGUAL valor .)
    WHILE           reduce using rule 31 (inicializacion -> IGUAL valor .)
    PRINT           reduce using rule 31 (inicializacion -> IGUAL valor .)
    PRINTLN         reduce using rule 31 (inicializacion -> IGUAL valor .)
    APAR            reduce using rule 31 (inicializacion -> IGUAL valor .)
    $end            reduce using rule 31 (inicializacion -> IGUAL valor .)
    IGUALIGUAL      reduce using rule 31 (inicializacion -> IGUAL valor .)
    TRIPLEIGUAL     reduce using rule 31 (inicializacion -> IGUAL valor .)
    NOIGUAL         reduce using rule 31 (inicializacion -> IGUAL valor .)
    MAYOR           reduce using rule 31 (inicializacion -> IGUAL valor .)
    MENOR           reduce using rule 31 (inicializacion -> IGUAL valor .)
    MAYORIGUAL      reduce using rule 31 (inicializacion -> IGUAL valor .)
    MENORIGUAL      reduce using rule 31 (inicializacion -> IGUAL valor .)
    ELSE            reduce using rule 31 (inicializacion -> IGUAL valor .)
    AND             reduce using rule 31 (inicializacion -> IGUAL valor .)
    OR              reduce using rule 31 (inicializacion -> IGUAL valor .)
    CPAR            reduce using rule 31 (inicializacion -> IGUAL valor .)
    CLLAVE          reduce using rule 31 (inicializacion -> IGUAL valor .)


state 91

    (40) valor -> ENTEROEXPRESION .
    (53) flotante -> ENTEROEXPRESION . F
    (54) flotante -> ENTEROEXPRESION . PUNTO ENTEROEXPRESION F
    (73) termino -> ENTEROEXPRESION .
    (79) factor -> ENTEROEXPRESION .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ID resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRUE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FALSE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for LISTOF resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for SETOF resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PAIR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IF resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FOR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for WHILE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINT resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYOR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENOR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for AND resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for OR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for SUMA resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for RESTA resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MULT resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for DIVISION resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MODULO resolved using rule 73 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ID resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRUE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FALSE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for LISTOF resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for SETOF resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PAIR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IF resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FOR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for WHILE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINT resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYOR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENOR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for AND resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for OR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 40 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 40 (valor -> ENTEROEXPRESION .)
    PUNTOCOMA       reduce using rule 40 (valor -> ENTEROEXPRESION .)
    VAL             reduce using rule 40 (valor -> ENTEROEXPRESION .)
    VAR             reduce using rule 40 (valor -> ENTEROEXPRESION .)
    ID              reduce using rule 40 (valor -> ENTEROEXPRESION .)
    ENTEROEXPRESION reduce using rule 40 (valor -> ENTEROEXPRESION .)
    CADENAEXPRESION reduce using rule 40 (valor -> ENTEROEXPRESION .)
    TRUE            reduce using rule 40 (valor -> ENTEROEXPRESION .)
    FALSE           reduce using rule 40 (valor -> ENTEROEXPRESION .)
    LISTOF          reduce using rule 40 (valor -> ENTEROEXPRESION .)
    SETOF           reduce using rule 40 (valor -> ENTEROEXPRESION .)
    PAIR            reduce using rule 40 (valor -> ENTEROEXPRESION .)
    TRIPLE          reduce using rule 40 (valor -> ENTEROEXPRESION .)
    IF              reduce using rule 40 (valor -> ENTEROEXPRESION .)
    FOR             reduce using rule 40 (valor -> ENTEROEXPRESION .)
    WHILE           reduce using rule 40 (valor -> ENTEROEXPRESION .)
    PRINT           reduce using rule 40 (valor -> ENTEROEXPRESION .)
    PRINTLN         reduce using rule 40 (valor -> ENTEROEXPRESION .)
    APAR            reduce using rule 40 (valor -> ENTEROEXPRESION .)
    $end            reduce using rule 40 (valor -> ENTEROEXPRESION .)
    IGUALIGUAL      reduce using rule 40 (valor -> ENTEROEXPRESION .)
    TRIPLEIGUAL     reduce using rule 40 (valor -> ENTEROEXPRESION .)
    NOIGUAL         reduce using rule 40 (valor -> ENTEROEXPRESION .)
    MAYOR           reduce using rule 40 (valor -> ENTEROEXPRESION .)
    MENOR           reduce using rule 40 (valor -> ENTEROEXPRESION .)
    MAYORIGUAL      reduce using rule 40 (valor -> ENTEROEXPRESION .)
    MENORIGUAL      reduce using rule 40 (valor -> ENTEROEXPRESION .)
    ELSE            reduce using rule 40 (valor -> ENTEROEXPRESION .)
    AND             reduce using rule 40 (valor -> ENTEROEXPRESION .)
    OR              reduce using rule 40 (valor -> ENTEROEXPRESION .)
    CPAR            reduce using rule 40 (valor -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 40 (valor -> ENTEROEXPRESION .)
    F               shift and go to state 47
    PUNTO           shift and go to state 48
    SUMA            reduce using rule 73 (termino -> ENTEROEXPRESION .)
    RESTA           reduce using rule 73 (termino -> ENTEROEXPRESION .)
    MULT            reduce using rule 73 (termino -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 73 (termino -> ENTEROEXPRESION .)
    MODULO          reduce using rule 73 (termino -> ENTEROEXPRESION .)

  ! PUNTOCOMA       [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! VAL             [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! VAR             [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! ID              [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! CADENAEXPRESION [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! TRUE            [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! FALSE           [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! LISTOF          [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! SETOF           [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! PAIR            [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! TRIPLE          [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! IF              [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! FOR             [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! WHILE           [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! PRINT           [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! PRINTLN         [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! APAR            [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! $end            [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! IGUALIGUAL      [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! TRIPLEIGUAL     [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! NOIGUAL         [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! MAYOR           [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! MENOR           [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! MAYORIGUAL      [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! MENORIGUAL      [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! ELSE            [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! AND             [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! OR              [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! CPAR            [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 73 (termino -> ENTEROEXPRESION .) ]
  ! SUMA            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! RESTA           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MULT            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! DIVISION        [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MODULO          [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! PUNTOCOMA       [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! VAL             [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! VAR             [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! ID              [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! CADENAEXPRESION [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! TRUE            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! FALSE           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! LISTOF          [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! SETOF           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! PAIR            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! TRIPLE          [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! IF              [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! FOR             [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! WHILE           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! PRINT           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! PRINTLN         [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! APAR            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! $end            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! IGUALIGUAL      [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! TRIPLEIGUAL     [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! NOIGUAL         [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MAYOR           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MENOR           [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MAYORIGUAL      [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! MENORIGUAL      [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! ELSE            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! AND             [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! OR              [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! CPAR            [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 79 (factor -> ENTEROEXPRESION .) ]


state 92

    (43) valor -> CADENAEXPRESION .
    (75) termino -> CADENAEXPRESION .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for VAL resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for VAR resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for ID resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for TRUE resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for FALSE resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for LISTOF resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for SETOF resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for PAIR resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for IF resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for FOR resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for WHILE resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for PRINT resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for MAYOR resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for MENOR resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for AND resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for OR resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 43 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 43 (valor -> CADENAEXPRESION .)
    PUNTOCOMA       reduce using rule 43 (valor -> CADENAEXPRESION .)
    VAL             reduce using rule 43 (valor -> CADENAEXPRESION .)
    VAR             reduce using rule 43 (valor -> CADENAEXPRESION .)
    ID              reduce using rule 43 (valor -> CADENAEXPRESION .)
    ENTEROEXPRESION reduce using rule 43 (valor -> CADENAEXPRESION .)
    CADENAEXPRESION reduce using rule 43 (valor -> CADENAEXPRESION .)
    TRUE            reduce using rule 43 (valor -> CADENAEXPRESION .)
    FALSE           reduce using rule 43 (valor -> CADENAEXPRESION .)
    LISTOF          reduce using rule 43 (valor -> CADENAEXPRESION .)
    SETOF           reduce using rule 43 (valor -> CADENAEXPRESION .)
    PAIR            reduce using rule 43 (valor -> CADENAEXPRESION .)
    TRIPLE          reduce using rule 43 (valor -> CADENAEXPRESION .)
    IF              reduce using rule 43 (valor -> CADENAEXPRESION .)
    FOR             reduce using rule 43 (valor -> CADENAEXPRESION .)
    WHILE           reduce using rule 43 (valor -> CADENAEXPRESION .)
    PRINT           reduce using rule 43 (valor -> CADENAEXPRESION .)
    PRINTLN         reduce using rule 43 (valor -> CADENAEXPRESION .)
    APAR            reduce using rule 43 (valor -> CADENAEXPRESION .)
    $end            reduce using rule 43 (valor -> CADENAEXPRESION .)
    IGUALIGUAL      reduce using rule 43 (valor -> CADENAEXPRESION .)
    TRIPLEIGUAL     reduce using rule 43 (valor -> CADENAEXPRESION .)
    NOIGUAL         reduce using rule 43 (valor -> CADENAEXPRESION .)
    MAYOR           reduce using rule 43 (valor -> CADENAEXPRESION .)
    MENOR           reduce using rule 43 (valor -> CADENAEXPRESION .)
    MAYORIGUAL      reduce using rule 43 (valor -> CADENAEXPRESION .)
    MENORIGUAL      reduce using rule 43 (valor -> CADENAEXPRESION .)
    ELSE            reduce using rule 43 (valor -> CADENAEXPRESION .)
    AND             reduce using rule 43 (valor -> CADENAEXPRESION .)
    OR              reduce using rule 43 (valor -> CADENAEXPRESION .)
    CPAR            reduce using rule 43 (valor -> CADENAEXPRESION .)
    CLLAVE          reduce using rule 43 (valor -> CADENAEXPRESION .)
    SUMA            reduce using rule 75 (termino -> CADENAEXPRESION .)
    RESTA           reduce using rule 75 (termino -> CADENAEXPRESION .)
    MULT            reduce using rule 75 (termino -> CADENAEXPRESION .)
    DIVISION        reduce using rule 75 (termino -> CADENAEXPRESION .)
    MODULO          reduce using rule 75 (termino -> CADENAEXPRESION .)

  ! PUNTOCOMA       [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! VAL             [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! VAR             [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! ID              [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! CADENAEXPRESION [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! TRUE            [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! FALSE           [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! LISTOF          [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! SETOF           [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! PAIR            [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! TRIPLE          [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! IF              [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! FOR             [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! WHILE           [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! PRINT           [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! PRINTLN         [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! APAR            [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! $end            [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! IGUALIGUAL      [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! TRIPLEIGUAL     [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! NOIGUAL         [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! MAYOR           [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! MENOR           [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! MAYORIGUAL      [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! MENORIGUAL      [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! ELSE            [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! AND             [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! OR              [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! CPAR            [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 75 (termino -> CADENAEXPRESION .) ]


state 93

    (49) valor -> ID .
    (78) termino -> ID .
    (81) factor -> ID .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for VAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for VAR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for LISTOF resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for SETOF resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for PAIR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for APAR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MAYOR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MENOR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for AND resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for OR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for CPAR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for SUMA resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for RESTA resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for MULT resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for DIVISION resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 78 (termino -> ID .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for VAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for VAR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for LISTOF resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for SETOF resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for PAIR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for APAR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MAYOR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MENOR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for AND resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for OR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for CPAR resolved using rule 49 (valor -> ID .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 49 (valor -> ID .)
    PUNTOCOMA       reduce using rule 49 (valor -> ID .)
    VAL             reduce using rule 49 (valor -> ID .)
    VAR             reduce using rule 49 (valor -> ID .)
    ID              reduce using rule 49 (valor -> ID .)
    ENTEROEXPRESION reduce using rule 49 (valor -> ID .)
    CADENAEXPRESION reduce using rule 49 (valor -> ID .)
    TRUE            reduce using rule 49 (valor -> ID .)
    FALSE           reduce using rule 49 (valor -> ID .)
    LISTOF          reduce using rule 49 (valor -> ID .)
    SETOF           reduce using rule 49 (valor -> ID .)
    PAIR            reduce using rule 49 (valor -> ID .)
    TRIPLE          reduce using rule 49 (valor -> ID .)
    IF              reduce using rule 49 (valor -> ID .)
    FOR             reduce using rule 49 (valor -> ID .)
    WHILE           reduce using rule 49 (valor -> ID .)
    PRINT           reduce using rule 49 (valor -> ID .)
    PRINTLN         reduce using rule 49 (valor -> ID .)
    APAR            reduce using rule 49 (valor -> ID .)
    $end            reduce using rule 49 (valor -> ID .)
    IGUALIGUAL      reduce using rule 49 (valor -> ID .)
    TRIPLEIGUAL     reduce using rule 49 (valor -> ID .)
    NOIGUAL         reduce using rule 49 (valor -> ID .)
    MAYOR           reduce using rule 49 (valor -> ID .)
    MENOR           reduce using rule 49 (valor -> ID .)
    MAYORIGUAL      reduce using rule 49 (valor -> ID .)
    MENORIGUAL      reduce using rule 49 (valor -> ID .)
    ELSE            reduce using rule 49 (valor -> ID .)
    AND             reduce using rule 49 (valor -> ID .)
    OR              reduce using rule 49 (valor -> ID .)
    CPAR            reduce using rule 49 (valor -> ID .)
    CLLAVE          reduce using rule 49 (valor -> ID .)
    SUMA            reduce using rule 78 (termino -> ID .)
    RESTA           reduce using rule 78 (termino -> ID .)
    MULT            reduce using rule 78 (termino -> ID .)
    DIVISION        reduce using rule 78 (termino -> ID .)
    MODULO          reduce using rule 78 (termino -> ID .)

  ! PUNTOCOMA       [ reduce using rule 78 (termino -> ID .) ]
  ! VAL             [ reduce using rule 78 (termino -> ID .) ]
  ! VAR             [ reduce using rule 78 (termino -> ID .) ]
  ! ID              [ reduce using rule 78 (termino -> ID .) ]
  ! ENTEROEXPRESION [ reduce using rule 78 (termino -> ID .) ]
  ! CADENAEXPRESION [ reduce using rule 78 (termino -> ID .) ]
  ! TRUE            [ reduce using rule 78 (termino -> ID .) ]
  ! FALSE           [ reduce using rule 78 (termino -> ID .) ]
  ! LISTOF          [ reduce using rule 78 (termino -> ID .) ]
  ! SETOF           [ reduce using rule 78 (termino -> ID .) ]
  ! PAIR            [ reduce using rule 78 (termino -> ID .) ]
  ! TRIPLE          [ reduce using rule 78 (termino -> ID .) ]
  ! IF              [ reduce using rule 78 (termino -> ID .) ]
  ! FOR             [ reduce using rule 78 (termino -> ID .) ]
  ! WHILE           [ reduce using rule 78 (termino -> ID .) ]
  ! PRINT           [ reduce using rule 78 (termino -> ID .) ]
  ! PRINTLN         [ reduce using rule 78 (termino -> ID .) ]
  ! APAR            [ reduce using rule 78 (termino -> ID .) ]
  ! $end            [ reduce using rule 78 (termino -> ID .) ]
  ! IGUALIGUAL      [ reduce using rule 78 (termino -> ID .) ]
  ! TRIPLEIGUAL     [ reduce using rule 78 (termino -> ID .) ]
  ! NOIGUAL         [ reduce using rule 78 (termino -> ID .) ]
  ! MAYOR           [ reduce using rule 78 (termino -> ID .) ]
  ! MENOR           [ reduce using rule 78 (termino -> ID .) ]
  ! MAYORIGUAL      [ reduce using rule 78 (termino -> ID .) ]
  ! MENORIGUAL      [ reduce using rule 78 (termino -> ID .) ]
  ! ELSE            [ reduce using rule 78 (termino -> ID .) ]
  ! AND             [ reduce using rule 78 (termino -> ID .) ]
  ! OR              [ reduce using rule 78 (termino -> ID .) ]
  ! CPAR            [ reduce using rule 78 (termino -> ID .) ]
  ! CLLAVE          [ reduce using rule 78 (termino -> ID .) ]
  ! SUMA            [ reduce using rule 81 (factor -> ID .) ]
  ! RESTA           [ reduce using rule 81 (factor -> ID .) ]
  ! MULT            [ reduce using rule 81 (factor -> ID .) ]
  ! DIVISION        [ reduce using rule 81 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 81 (factor -> ID .) ]
  ! PUNTOCOMA       [ reduce using rule 81 (factor -> ID .) ]
  ! VAL             [ reduce using rule 81 (factor -> ID .) ]
  ! VAR             [ reduce using rule 81 (factor -> ID .) ]
  ! ID              [ reduce using rule 81 (factor -> ID .) ]
  ! ENTEROEXPRESION [ reduce using rule 81 (factor -> ID .) ]
  ! CADENAEXPRESION [ reduce using rule 81 (factor -> ID .) ]
  ! TRUE            [ reduce using rule 81 (factor -> ID .) ]
  ! FALSE           [ reduce using rule 81 (factor -> ID .) ]
  ! LISTOF          [ reduce using rule 81 (factor -> ID .) ]
  ! SETOF           [ reduce using rule 81 (factor -> ID .) ]
  ! PAIR            [ reduce using rule 81 (factor -> ID .) ]
  ! TRIPLE          [ reduce using rule 81 (factor -> ID .) ]
  ! IF              [ reduce using rule 81 (factor -> ID .) ]
  ! FOR             [ reduce using rule 81 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 81 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 81 (factor -> ID .) ]
  ! PRINTLN         [ reduce using rule 81 (factor -> ID .) ]
  ! APAR            [ reduce using rule 81 (factor -> ID .) ]
  ! $end            [ reduce using rule 81 (factor -> ID .) ]
  ! IGUALIGUAL      [ reduce using rule 81 (factor -> ID .) ]
  ! TRIPLEIGUAL     [ reduce using rule 81 (factor -> ID .) ]
  ! NOIGUAL         [ reduce using rule 81 (factor -> ID .) ]
  ! MAYOR           [ reduce using rule 81 (factor -> ID .) ]
  ! MENOR           [ reduce using rule 81 (factor -> ID .) ]
  ! MAYORIGUAL      [ reduce using rule 81 (factor -> ID .) ]
  ! MENORIGUAL      [ reduce using rule 81 (factor -> ID .) ]
  ! ELSE            [ reduce using rule 81 (factor -> ID .) ]
  ! AND             [ reduce using rule 81 (factor -> ID .) ]
  ! OR              [ reduce using rule 81 (factor -> ID .) ]
  ! CPAR            [ reduce using rule 81 (factor -> ID .) ]
  ! CLLAVE          [ reduce using rule 81 (factor -> ID .) ]


state 94

    (50) valor -> if .

    PUNTOCOMA       reduce using rule 50 (valor -> if .)
    VAL             reduce using rule 50 (valor -> if .)
    VAR             reduce using rule 50 (valor -> if .)
    ID              reduce using rule 50 (valor -> if .)
    ENTEROEXPRESION reduce using rule 50 (valor -> if .)
    CADENAEXPRESION reduce using rule 50 (valor -> if .)
    TRUE            reduce using rule 50 (valor -> if .)
    FALSE           reduce using rule 50 (valor -> if .)
    LISTOF          reduce using rule 50 (valor -> if .)
    SETOF           reduce using rule 50 (valor -> if .)
    PAIR            reduce using rule 50 (valor -> if .)
    TRIPLE          reduce using rule 50 (valor -> if .)
    IF              reduce using rule 50 (valor -> if .)
    FOR             reduce using rule 50 (valor -> if .)
    WHILE           reduce using rule 50 (valor -> if .)
    PRINT           reduce using rule 50 (valor -> if .)
    PRINTLN         reduce using rule 50 (valor -> if .)
    APAR            reduce using rule 50 (valor -> if .)
    $end            reduce using rule 50 (valor -> if .)
    IGUALIGUAL      reduce using rule 50 (valor -> if .)
    TRIPLEIGUAL     reduce using rule 50 (valor -> if .)
    NOIGUAL         reduce using rule 50 (valor -> if .)
    MAYOR           reduce using rule 50 (valor -> if .)
    MENOR           reduce using rule 50 (valor -> if .)
    MAYORIGUAL      reduce using rule 50 (valor -> if .)
    MENORIGUAL      reduce using rule 50 (valor -> if .)
    ELSE            reduce using rule 50 (valor -> if .)
    AND             reduce using rule 50 (valor -> if .)
    OR              reduce using rule 50 (valor -> if .)
    CPAR            reduce using rule 50 (valor -> if .)
    CLLAVE          reduce using rule 50 (valor -> if .)


state 95

    (25) asignacion -> VAR ID tipoAsignacion .

    PUNTOCOMA       reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    VAL             reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    VAR             reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    ID              reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    ENTEROEXPRESION reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    CADENAEXPRESION reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    TRUE            reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    FALSE           reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    LISTOF          reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    SETOF           reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    PAIR            reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    TRIPLE          reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    IF              reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    FOR             reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    WHILE           reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    PRINT           reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    PRINTLN         reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    APAR            reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    $end            reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    IGUALIGUAL      reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    TRIPLEIGUAL     reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    NOIGUAL         reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    MAYOR           reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    MENOR           reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    MAYORIGUAL      reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    MENORIGUAL      reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    ELSE            reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    AND             reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    OR              reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    CPAR            reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)
    CLLAVE          reduce using rule 25 (asignacion -> VAR ID tipoAsignacion .)


state 96

    (54) flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION . F

    F               shift and go to state 150


state 97

    (18) funcion -> CADENAEXPRESION PUNTO COMPARETO . APAR CADENAEXPRESION CPAR

    APAR            shift and go to state 151


state 98

    (19) funcion -> CADENAEXPRESION PUNTO GETINDEX . APAR ENTEROEXPRESION CPAR

    APAR            shift and go to state 152


state 99

    (20) funcion -> CADENAEXPRESION PUNTO HASHCODE . APAR CPAR

    APAR            shift and go to state 153


state 100

    (61) expresion -> expresion SUMA termino .
    (67) termino -> termino . SUMA factorEspecial
    (68) termino -> termino . RESTA factor
    (69) termino -> termino . MULT factor
    (70) termino -> termino . DIVISION factor
    (71) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    PUNTOCOMA       reduce using rule 61 (expresion -> expresion SUMA termino .)
    VAL             reduce using rule 61 (expresion -> expresion SUMA termino .)
    VAR             reduce using rule 61 (expresion -> expresion SUMA termino .)
    ID              reduce using rule 61 (expresion -> expresion SUMA termino .)
    ENTEROEXPRESION reduce using rule 61 (expresion -> expresion SUMA termino .)
    CADENAEXPRESION reduce using rule 61 (expresion -> expresion SUMA termino .)
    TRUE            reduce using rule 61 (expresion -> expresion SUMA termino .)
    FALSE           reduce using rule 61 (expresion -> expresion SUMA termino .)
    LISTOF          reduce using rule 61 (expresion -> expresion SUMA termino .)
    SETOF           reduce using rule 61 (expresion -> expresion SUMA termino .)
    PAIR            reduce using rule 61 (expresion -> expresion SUMA termino .)
    TRIPLE          reduce using rule 61 (expresion -> expresion SUMA termino .)
    IF              reduce using rule 61 (expresion -> expresion SUMA termino .)
    FOR             reduce using rule 61 (expresion -> expresion SUMA termino .)
    WHILE           reduce using rule 61 (expresion -> expresion SUMA termino .)
    PRINT           reduce using rule 61 (expresion -> expresion SUMA termino .)
    PRINTLN         reduce using rule 61 (expresion -> expresion SUMA termino .)
    APAR            reduce using rule 61 (expresion -> expresion SUMA termino .)
    $end            reduce using rule 61 (expresion -> expresion SUMA termino .)
    CPAR            reduce using rule 61 (expresion -> expresion SUMA termino .)
    IGUALIGUAL      reduce using rule 61 (expresion -> expresion SUMA termino .)
    TRIPLEIGUAL     reduce using rule 61 (expresion -> expresion SUMA termino .)
    NOIGUAL         reduce using rule 61 (expresion -> expresion SUMA termino .)
    MAYOR           reduce using rule 61 (expresion -> expresion SUMA termino .)
    MENOR           reduce using rule 61 (expresion -> expresion SUMA termino .)
    MAYORIGUAL      reduce using rule 61 (expresion -> expresion SUMA termino .)
    MENORIGUAL      reduce using rule 61 (expresion -> expresion SUMA termino .)
    ELSE            reduce using rule 61 (expresion -> expresion SUMA termino .)
    AND             reduce using rule 61 (expresion -> expresion SUMA termino .)
    OR              reduce using rule 61 (expresion -> expresion SUMA termino .)
    CLLAVE          reduce using rule 61 (expresion -> expresion SUMA termino .)
    SUMA            shift and go to state 75
    RESTA           shift and go to state 76
    MULT            shift and go to state 77
    DIVISION        shift and go to state 78
    MODULO          shift and go to state 79

  ! SUMA            [ reduce using rule 61 (expresion -> expresion SUMA termino .) ]
  ! RESTA           [ reduce using rule 61 (expresion -> expresion SUMA termino .) ]
  ! DIVISION        [ reduce using rule 61 (expresion -> expresion SUMA termino .) ]
  ! MULT            [ reduce using rule 61 (expresion -> expresion SUMA termino .) ]
  ! MODULO          [ reduce using rule 61 (expresion -> expresion SUMA termino .) ]


state 101

    (62) expresion -> expresion RESTA termino .
    (67) termino -> termino . SUMA factorEspecial
    (68) termino -> termino . RESTA factor
    (69) termino -> termino . MULT factor
    (70) termino -> termino . DIVISION factor
    (71) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    PUNTOCOMA       reduce using rule 62 (expresion -> expresion RESTA termino .)
    VAL             reduce using rule 62 (expresion -> expresion RESTA termino .)
    VAR             reduce using rule 62 (expresion -> expresion RESTA termino .)
    ID              reduce using rule 62 (expresion -> expresion RESTA termino .)
    ENTEROEXPRESION reduce using rule 62 (expresion -> expresion RESTA termino .)
    CADENAEXPRESION reduce using rule 62 (expresion -> expresion RESTA termino .)
    TRUE            reduce using rule 62 (expresion -> expresion RESTA termino .)
    FALSE           reduce using rule 62 (expresion -> expresion RESTA termino .)
    LISTOF          reduce using rule 62 (expresion -> expresion RESTA termino .)
    SETOF           reduce using rule 62 (expresion -> expresion RESTA termino .)
    PAIR            reduce using rule 62 (expresion -> expresion RESTA termino .)
    TRIPLE          reduce using rule 62 (expresion -> expresion RESTA termino .)
    IF              reduce using rule 62 (expresion -> expresion RESTA termino .)
    FOR             reduce using rule 62 (expresion -> expresion RESTA termino .)
    WHILE           reduce using rule 62 (expresion -> expresion RESTA termino .)
    PRINT           reduce using rule 62 (expresion -> expresion RESTA termino .)
    PRINTLN         reduce using rule 62 (expresion -> expresion RESTA termino .)
    APAR            reduce using rule 62 (expresion -> expresion RESTA termino .)
    $end            reduce using rule 62 (expresion -> expresion RESTA termino .)
    CPAR            reduce using rule 62 (expresion -> expresion RESTA termino .)
    IGUALIGUAL      reduce using rule 62 (expresion -> expresion RESTA termino .)
    TRIPLEIGUAL     reduce using rule 62 (expresion -> expresion RESTA termino .)
    NOIGUAL         reduce using rule 62 (expresion -> expresion RESTA termino .)
    MAYOR           reduce using rule 62 (expresion -> expresion RESTA termino .)
    MENOR           reduce using rule 62 (expresion -> expresion RESTA termino .)
    MAYORIGUAL      reduce using rule 62 (expresion -> expresion RESTA termino .)
    MENORIGUAL      reduce using rule 62 (expresion -> expresion RESTA termino .)
    ELSE            reduce using rule 62 (expresion -> expresion RESTA termino .)
    AND             reduce using rule 62 (expresion -> expresion RESTA termino .)
    OR              reduce using rule 62 (expresion -> expresion RESTA termino .)
    CLLAVE          reduce using rule 62 (expresion -> expresion RESTA termino .)
    SUMA            shift and go to state 75
    RESTA           shift and go to state 76
    MULT            shift and go to state 77
    DIVISION        shift and go to state 78
    MODULO          shift and go to state 79

  ! SUMA            [ reduce using rule 62 (expresion -> expresion RESTA termino .) ]
  ! RESTA           [ reduce using rule 62 (expresion -> expresion RESTA termino .) ]
  ! DIVISION        [ reduce using rule 62 (expresion -> expresion RESTA termino .) ]
  ! MULT            [ reduce using rule 62 (expresion -> expresion RESTA termino .) ]
  ! MODULO          [ reduce using rule 62 (expresion -> expresion RESTA termino .) ]


state 102

    (63) expresion -> expresion DIVISION termino .
    (67) termino -> termino . SUMA factorEspecial
    (68) termino -> termino . RESTA factor
    (69) termino -> termino . MULT factor
    (70) termino -> termino . DIVISION factor
    (71) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    PUNTOCOMA       reduce using rule 63 (expresion -> expresion DIVISION termino .)
    VAL             reduce using rule 63 (expresion -> expresion DIVISION termino .)
    VAR             reduce using rule 63 (expresion -> expresion DIVISION termino .)
    ID              reduce using rule 63 (expresion -> expresion DIVISION termino .)
    ENTEROEXPRESION reduce using rule 63 (expresion -> expresion DIVISION termino .)
    CADENAEXPRESION reduce using rule 63 (expresion -> expresion DIVISION termino .)
    TRUE            reduce using rule 63 (expresion -> expresion DIVISION termino .)
    FALSE           reduce using rule 63 (expresion -> expresion DIVISION termino .)
    LISTOF          reduce using rule 63 (expresion -> expresion DIVISION termino .)
    SETOF           reduce using rule 63 (expresion -> expresion DIVISION termino .)
    PAIR            reduce using rule 63 (expresion -> expresion DIVISION termino .)
    TRIPLE          reduce using rule 63 (expresion -> expresion DIVISION termino .)
    IF              reduce using rule 63 (expresion -> expresion DIVISION termino .)
    FOR             reduce using rule 63 (expresion -> expresion DIVISION termino .)
    WHILE           reduce using rule 63 (expresion -> expresion DIVISION termino .)
    PRINT           reduce using rule 63 (expresion -> expresion DIVISION termino .)
    PRINTLN         reduce using rule 63 (expresion -> expresion DIVISION termino .)
    APAR            reduce using rule 63 (expresion -> expresion DIVISION termino .)
    $end            reduce using rule 63 (expresion -> expresion DIVISION termino .)
    CPAR            reduce using rule 63 (expresion -> expresion DIVISION termino .)
    IGUALIGUAL      reduce using rule 63 (expresion -> expresion DIVISION termino .)
    TRIPLEIGUAL     reduce using rule 63 (expresion -> expresion DIVISION termino .)
    NOIGUAL         reduce using rule 63 (expresion -> expresion DIVISION termino .)
    MAYOR           reduce using rule 63 (expresion -> expresion DIVISION termino .)
    MENOR           reduce using rule 63 (expresion -> expresion DIVISION termino .)
    MAYORIGUAL      reduce using rule 63 (expresion -> expresion DIVISION termino .)
    MENORIGUAL      reduce using rule 63 (expresion -> expresion DIVISION termino .)
    ELSE            reduce using rule 63 (expresion -> expresion DIVISION termino .)
    AND             reduce using rule 63 (expresion -> expresion DIVISION termino .)
    OR              reduce using rule 63 (expresion -> expresion DIVISION termino .)
    CLLAVE          reduce using rule 63 (expresion -> expresion DIVISION termino .)
    SUMA            shift and go to state 75
    RESTA           shift and go to state 76
    MULT            shift and go to state 77
    DIVISION        shift and go to state 78
    MODULO          shift and go to state 79

  ! SUMA            [ reduce using rule 63 (expresion -> expresion DIVISION termino .) ]
  ! RESTA           [ reduce using rule 63 (expresion -> expresion DIVISION termino .) ]
  ! DIVISION        [ reduce using rule 63 (expresion -> expresion DIVISION termino .) ]
  ! MULT            [ reduce using rule 63 (expresion -> expresion DIVISION termino .) ]
  ! MODULO          [ reduce using rule 63 (expresion -> expresion DIVISION termino .) ]


state 103

    (64) expresion -> expresion MULT termino .
    (67) termino -> termino . SUMA factorEspecial
    (68) termino -> termino . RESTA factor
    (69) termino -> termino . MULT factor
    (70) termino -> termino . DIVISION factor
    (71) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    PUNTOCOMA       reduce using rule 64 (expresion -> expresion MULT termino .)
    VAL             reduce using rule 64 (expresion -> expresion MULT termino .)
    VAR             reduce using rule 64 (expresion -> expresion MULT termino .)
    ID              reduce using rule 64 (expresion -> expresion MULT termino .)
    ENTEROEXPRESION reduce using rule 64 (expresion -> expresion MULT termino .)
    CADENAEXPRESION reduce using rule 64 (expresion -> expresion MULT termino .)
    TRUE            reduce using rule 64 (expresion -> expresion MULT termino .)
    FALSE           reduce using rule 64 (expresion -> expresion MULT termino .)
    LISTOF          reduce using rule 64 (expresion -> expresion MULT termino .)
    SETOF           reduce using rule 64 (expresion -> expresion MULT termino .)
    PAIR            reduce using rule 64 (expresion -> expresion MULT termino .)
    TRIPLE          reduce using rule 64 (expresion -> expresion MULT termino .)
    IF              reduce using rule 64 (expresion -> expresion MULT termino .)
    FOR             reduce using rule 64 (expresion -> expresion MULT termino .)
    WHILE           reduce using rule 64 (expresion -> expresion MULT termino .)
    PRINT           reduce using rule 64 (expresion -> expresion MULT termino .)
    PRINTLN         reduce using rule 64 (expresion -> expresion MULT termino .)
    APAR            reduce using rule 64 (expresion -> expresion MULT termino .)
    $end            reduce using rule 64 (expresion -> expresion MULT termino .)
    CPAR            reduce using rule 64 (expresion -> expresion MULT termino .)
    IGUALIGUAL      reduce using rule 64 (expresion -> expresion MULT termino .)
    TRIPLEIGUAL     reduce using rule 64 (expresion -> expresion MULT termino .)
    NOIGUAL         reduce using rule 64 (expresion -> expresion MULT termino .)
    MAYOR           reduce using rule 64 (expresion -> expresion MULT termino .)
    MENOR           reduce using rule 64 (expresion -> expresion MULT termino .)
    MAYORIGUAL      reduce using rule 64 (expresion -> expresion MULT termino .)
    MENORIGUAL      reduce using rule 64 (expresion -> expresion MULT termino .)
    ELSE            reduce using rule 64 (expresion -> expresion MULT termino .)
    AND             reduce using rule 64 (expresion -> expresion MULT termino .)
    OR              reduce using rule 64 (expresion -> expresion MULT termino .)
    CLLAVE          reduce using rule 64 (expresion -> expresion MULT termino .)
    SUMA            shift and go to state 75
    RESTA           shift and go to state 76
    MULT            shift and go to state 77
    DIVISION        shift and go to state 78
    MODULO          shift and go to state 79

  ! SUMA            [ reduce using rule 64 (expresion -> expresion MULT termino .) ]
  ! RESTA           [ reduce using rule 64 (expresion -> expresion MULT termino .) ]
  ! DIVISION        [ reduce using rule 64 (expresion -> expresion MULT termino .) ]
  ! MULT            [ reduce using rule 64 (expresion -> expresion MULT termino .) ]
  ! MODULO          [ reduce using rule 64 (expresion -> expresion MULT termino .) ]


state 104

    (65) expresion -> expresion MODULO termino .
    (67) termino -> termino . SUMA factorEspecial
    (68) termino -> termino . RESTA factor
    (69) termino -> termino . MULT factor
    (70) termino -> termino . DIVISION factor
    (71) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    PUNTOCOMA       reduce using rule 65 (expresion -> expresion MODULO termino .)
    VAL             reduce using rule 65 (expresion -> expresion MODULO termino .)
    VAR             reduce using rule 65 (expresion -> expresion MODULO termino .)
    ID              reduce using rule 65 (expresion -> expresion MODULO termino .)
    ENTEROEXPRESION reduce using rule 65 (expresion -> expresion MODULO termino .)
    CADENAEXPRESION reduce using rule 65 (expresion -> expresion MODULO termino .)
    TRUE            reduce using rule 65 (expresion -> expresion MODULO termino .)
    FALSE           reduce using rule 65 (expresion -> expresion MODULO termino .)
    LISTOF          reduce using rule 65 (expresion -> expresion MODULO termino .)
    SETOF           reduce using rule 65 (expresion -> expresion MODULO termino .)
    PAIR            reduce using rule 65 (expresion -> expresion MODULO termino .)
    TRIPLE          reduce using rule 65 (expresion -> expresion MODULO termino .)
    IF              reduce using rule 65 (expresion -> expresion MODULO termino .)
    FOR             reduce using rule 65 (expresion -> expresion MODULO termino .)
    WHILE           reduce using rule 65 (expresion -> expresion MODULO termino .)
    PRINT           reduce using rule 65 (expresion -> expresion MODULO termino .)
    PRINTLN         reduce using rule 65 (expresion -> expresion MODULO termino .)
    APAR            reduce using rule 65 (expresion -> expresion MODULO termino .)
    $end            reduce using rule 65 (expresion -> expresion MODULO termino .)
    CPAR            reduce using rule 65 (expresion -> expresion MODULO termino .)
    IGUALIGUAL      reduce using rule 65 (expresion -> expresion MODULO termino .)
    TRIPLEIGUAL     reduce using rule 65 (expresion -> expresion MODULO termino .)
    NOIGUAL         reduce using rule 65 (expresion -> expresion MODULO termino .)
    MAYOR           reduce using rule 65 (expresion -> expresion MODULO termino .)
    MENOR           reduce using rule 65 (expresion -> expresion MODULO termino .)
    MAYORIGUAL      reduce using rule 65 (expresion -> expresion MODULO termino .)
    MENORIGUAL      reduce using rule 65 (expresion -> expresion MODULO termino .)
    ELSE            reduce using rule 65 (expresion -> expresion MODULO termino .)
    AND             reduce using rule 65 (expresion -> expresion MODULO termino .)
    OR              reduce using rule 65 (expresion -> expresion MODULO termino .)
    CLLAVE          reduce using rule 65 (expresion -> expresion MODULO termino .)
    SUMA            shift and go to state 75
    RESTA           shift and go to state 76
    MULT            shift and go to state 77
    DIVISION        shift and go to state 78
    MODULO          shift and go to state 79

  ! SUMA            [ reduce using rule 65 (expresion -> expresion MODULO termino .) ]
  ! RESTA           [ reduce using rule 65 (expresion -> expresion MODULO termino .) ]
  ! DIVISION        [ reduce using rule 65 (expresion -> expresion MODULO termino .) ]
  ! MULT            [ reduce using rule 65 (expresion -> expresion MODULO termino .) ]
  ! MODULO          [ reduce using rule 65 (expresion -> expresion MODULO termino .) ]


state 105

    (86) factor -> APAR expresion CPAR .

    SUMA            reduce using rule 86 (factor -> APAR expresion CPAR .)
    RESTA           reduce using rule 86 (factor -> APAR expresion CPAR .)
    MULT            reduce using rule 86 (factor -> APAR expresion CPAR .)
    DIVISION        reduce using rule 86 (factor -> APAR expresion CPAR .)
    MODULO          reduce using rule 86 (factor -> APAR expresion CPAR .)
    PUNTOCOMA       reduce using rule 86 (factor -> APAR expresion CPAR .)
    VAL             reduce using rule 86 (factor -> APAR expresion CPAR .)
    VAR             reduce using rule 86 (factor -> APAR expresion CPAR .)
    ID              reduce using rule 86 (factor -> APAR expresion CPAR .)
    ENTEROEXPRESION reduce using rule 86 (factor -> APAR expresion CPAR .)
    CADENAEXPRESION reduce using rule 86 (factor -> APAR expresion CPAR .)
    TRUE            reduce using rule 86 (factor -> APAR expresion CPAR .)
    FALSE           reduce using rule 86 (factor -> APAR expresion CPAR .)
    LISTOF          reduce using rule 86 (factor -> APAR expresion CPAR .)
    SETOF           reduce using rule 86 (factor -> APAR expresion CPAR .)
    PAIR            reduce using rule 86 (factor -> APAR expresion CPAR .)
    TRIPLE          reduce using rule 86 (factor -> APAR expresion CPAR .)
    IF              reduce using rule 86 (factor -> APAR expresion CPAR .)
    FOR             reduce using rule 86 (factor -> APAR expresion CPAR .)
    WHILE           reduce using rule 86 (factor -> APAR expresion CPAR .)
    PRINT           reduce using rule 86 (factor -> APAR expresion CPAR .)
    PRINTLN         reduce using rule 86 (factor -> APAR expresion CPAR .)
    APAR            reduce using rule 86 (factor -> APAR expresion CPAR .)
    $end            reduce using rule 86 (factor -> APAR expresion CPAR .)
    CPAR            reduce using rule 86 (factor -> APAR expresion CPAR .)
    IGUALIGUAL      reduce using rule 86 (factor -> APAR expresion CPAR .)
    TRIPLEIGUAL     reduce using rule 86 (factor -> APAR expresion CPAR .)
    NOIGUAL         reduce using rule 86 (factor -> APAR expresion CPAR .)
    MAYOR           reduce using rule 86 (factor -> APAR expresion CPAR .)
    MENOR           reduce using rule 86 (factor -> APAR expresion CPAR .)
    MAYORIGUAL      reduce using rule 86 (factor -> APAR expresion CPAR .)
    MENORIGUAL      reduce using rule 86 (factor -> APAR expresion CPAR .)
    ELSE            reduce using rule 86 (factor -> APAR expresion CPAR .)
    AND             reduce using rule 86 (factor -> APAR expresion CPAR .)
    OR              reduce using rule 86 (factor -> APAR expresion CPAR .)
    CLLAVE          reduce using rule 86 (factor -> APAR expresion CPAR .)
    COMA            reduce using rule 86 (factor -> APAR expresion CPAR .)


state 106

    (100) condicion -> compmiembro comparador compmiembro .
    (101) condicion -> compmiembro comparador compmiembro . conector compmiembro comparador compmiembro
    (94) conector -> . AND
    (95) conector -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOCOMA       reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    VAL             reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    VAR             reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    ID              reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    ENTEROEXPRESION reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    CADENAEXPRESION reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    TRUE            reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    FALSE           reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    LISTOF          reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    SETOF           reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    PAIR            reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    TRIPLE          reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    IF              reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    FOR             reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    WHILE           reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    PRINT           reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    PRINTLN         reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    APAR            reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    $end            reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    CPAR            reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    IGUALIGUAL      reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    TRIPLEIGUAL     reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    NOIGUAL         reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    MAYOR           reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    MENOR           reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    MAYORIGUAL      reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    MENORIGUAL      reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    ELSE            reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    CLLAVE          reduce using rule 100 (condicion -> compmiembro comparador compmiembro .)
    AND             shift and go to state 155
    OR              shift and go to state 156

  ! AND             [ reduce using rule 100 (condicion -> compmiembro comparador compmiembro .) ]
  ! OR              [ reduce using rule 100 (condicion -> compmiembro comparador compmiembro .) ]

    conector                       shift and go to state 154

state 107

    (96) compmiembro -> ID .
    (21) funcion -> ID . PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> ID . PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> ID . PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (26) asignacion -> ID . inicializacion
    (31) inicializacion -> . IGUAL valor

    PUNTOCOMA       reduce using rule 96 (compmiembro -> ID .)
    VAL             reduce using rule 96 (compmiembro -> ID .)
    VAR             reduce using rule 96 (compmiembro -> ID .)
    ID              reduce using rule 96 (compmiembro -> ID .)
    ENTEROEXPRESION reduce using rule 96 (compmiembro -> ID .)
    CADENAEXPRESION reduce using rule 96 (compmiembro -> ID .)
    TRUE            reduce using rule 96 (compmiembro -> ID .)
    FALSE           reduce using rule 96 (compmiembro -> ID .)
    LISTOF          reduce using rule 96 (compmiembro -> ID .)
    SETOF           reduce using rule 96 (compmiembro -> ID .)
    PAIR            reduce using rule 96 (compmiembro -> ID .)
    TRIPLE          reduce using rule 96 (compmiembro -> ID .)
    IF              reduce using rule 96 (compmiembro -> ID .)
    FOR             reduce using rule 96 (compmiembro -> ID .)
    WHILE           reduce using rule 96 (compmiembro -> ID .)
    PRINT           reduce using rule 96 (compmiembro -> ID .)
    PRINTLN         reduce using rule 96 (compmiembro -> ID .)
    APAR            reduce using rule 96 (compmiembro -> ID .)
    $end            reduce using rule 96 (compmiembro -> ID .)
    IGUALIGUAL      reduce using rule 96 (compmiembro -> ID .)
    TRIPLEIGUAL     reduce using rule 96 (compmiembro -> ID .)
    NOIGUAL         reduce using rule 96 (compmiembro -> ID .)
    MAYOR           reduce using rule 96 (compmiembro -> ID .)
    MENOR           reduce using rule 96 (compmiembro -> ID .)
    MAYORIGUAL      reduce using rule 96 (compmiembro -> ID .)
    MENORIGUAL      reduce using rule 96 (compmiembro -> ID .)
    ELSE            reduce using rule 96 (compmiembro -> ID .)
    AND             reduce using rule 96 (compmiembro -> ID .)
    OR              reduce using rule 96 (compmiembro -> ID .)
    CPAR            reduce using rule 96 (compmiembro -> ID .)
    CLLAVE          reduce using rule 96 (compmiembro -> ID .)
    PUNTO           shift and go to state 44
    IGUAL           shift and go to state 45

    inicializacion                 shift and go to state 43

state 108

    (97) compmiembro -> ENTEROEXPRESION .

    PUNTOCOMA       reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    VAL             reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    VAR             reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    ID              reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    ENTEROEXPRESION reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    CADENAEXPRESION reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    TRUE            reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    FALSE           reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    LISTOF          reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    SETOF           reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    PAIR            reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    TRIPLE          reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    IF              reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    FOR             reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    WHILE           reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    PRINT           reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    PRINTLN         reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    APAR            reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    $end            reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    IGUALIGUAL      reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    TRIPLEIGUAL     reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    NOIGUAL         reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    MAYOR           reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    MENOR           reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    MAYORIGUAL      reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    MENORIGUAL      reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    ELSE            reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    AND             reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    OR              reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    CPAR            reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 97 (compmiembro -> ENTEROEXPRESION .)


state 109

    (98) compmiembro -> funcion .

    PUNTOCOMA       reduce using rule 98 (compmiembro -> funcion .)
    VAL             reduce using rule 98 (compmiembro -> funcion .)
    VAR             reduce using rule 98 (compmiembro -> funcion .)
    ID              reduce using rule 98 (compmiembro -> funcion .)
    ENTEROEXPRESION reduce using rule 98 (compmiembro -> funcion .)
    CADENAEXPRESION reduce using rule 98 (compmiembro -> funcion .)
    TRUE            reduce using rule 98 (compmiembro -> funcion .)
    FALSE           reduce using rule 98 (compmiembro -> funcion .)
    LISTOF          reduce using rule 98 (compmiembro -> funcion .)
    SETOF           reduce using rule 98 (compmiembro -> funcion .)
    PAIR            reduce using rule 98 (compmiembro -> funcion .)
    TRIPLE          reduce using rule 98 (compmiembro -> funcion .)
    IF              reduce using rule 98 (compmiembro -> funcion .)
    FOR             reduce using rule 98 (compmiembro -> funcion .)
    WHILE           reduce using rule 98 (compmiembro -> funcion .)
    PRINT           reduce using rule 98 (compmiembro -> funcion .)
    PRINTLN         reduce using rule 98 (compmiembro -> funcion .)
    APAR            reduce using rule 98 (compmiembro -> funcion .)
    $end            reduce using rule 98 (compmiembro -> funcion .)
    IGUALIGUAL      reduce using rule 98 (compmiembro -> funcion .)
    TRIPLEIGUAL     reduce using rule 98 (compmiembro -> funcion .)
    NOIGUAL         reduce using rule 98 (compmiembro -> funcion .)
    MAYOR           reduce using rule 98 (compmiembro -> funcion .)
    MENOR           reduce using rule 98 (compmiembro -> funcion .)
    MAYORIGUAL      reduce using rule 98 (compmiembro -> funcion .)
    MENORIGUAL      reduce using rule 98 (compmiembro -> funcion .)
    ELSE            reduce using rule 98 (compmiembro -> funcion .)
    AND             reduce using rule 98 (compmiembro -> funcion .)
    OR              reduce using rule 98 (compmiembro -> funcion .)
    CPAR            reduce using rule 98 (compmiembro -> funcion .)
    CLLAVE          reduce using rule 98 (compmiembro -> funcion .)


state 110

    (99) compmiembro -> asignacion .

    PUNTOCOMA       reduce using rule 99 (compmiembro -> asignacion .)
    VAL             reduce using rule 99 (compmiembro -> asignacion .)
    VAR             reduce using rule 99 (compmiembro -> asignacion .)
    ID              reduce using rule 99 (compmiembro -> asignacion .)
    ENTEROEXPRESION reduce using rule 99 (compmiembro -> asignacion .)
    CADENAEXPRESION reduce using rule 99 (compmiembro -> asignacion .)
    TRUE            reduce using rule 99 (compmiembro -> asignacion .)
    FALSE           reduce using rule 99 (compmiembro -> asignacion .)
    LISTOF          reduce using rule 99 (compmiembro -> asignacion .)
    SETOF           reduce using rule 99 (compmiembro -> asignacion .)
    PAIR            reduce using rule 99 (compmiembro -> asignacion .)
    TRIPLE          reduce using rule 99 (compmiembro -> asignacion .)
    IF              reduce using rule 99 (compmiembro -> asignacion .)
    FOR             reduce using rule 99 (compmiembro -> asignacion .)
    WHILE           reduce using rule 99 (compmiembro -> asignacion .)
    PRINT           reduce using rule 99 (compmiembro -> asignacion .)
    PRINTLN         reduce using rule 99 (compmiembro -> asignacion .)
    APAR            reduce using rule 99 (compmiembro -> asignacion .)
    $end            reduce using rule 99 (compmiembro -> asignacion .)
    IGUALIGUAL      reduce using rule 99 (compmiembro -> asignacion .)
    TRIPLEIGUAL     reduce using rule 99 (compmiembro -> asignacion .)
    NOIGUAL         reduce using rule 99 (compmiembro -> asignacion .)
    MAYOR           reduce using rule 99 (compmiembro -> asignacion .)
    MENOR           reduce using rule 99 (compmiembro -> asignacion .)
    MAYORIGUAL      reduce using rule 99 (compmiembro -> asignacion .)
    MENORIGUAL      reduce using rule 99 (compmiembro -> asignacion .)
    ELSE            reduce using rule 99 (compmiembro -> asignacion .)
    AND             reduce using rule 99 (compmiembro -> asignacion .)
    OR              reduce using rule 99 (compmiembro -> asignacion .)
    CPAR            reduce using rule 99 (compmiembro -> asignacion .)
    CLLAVE          reduce using rule 99 (compmiembro -> asignacion .)


state 111

    (18) funcion -> CADENAEXPRESION . PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> CADENAEXPRESION . PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> CADENAEXPRESION . PUNTO HASHCODE APAR CPAR

    PUNTO           shift and go to state 49


state 112

    (11) print -> printType APAR CADENAEXPRESION . CPAR
    (18) funcion -> CADENAEXPRESION . PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> CADENAEXPRESION . PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> CADENAEXPRESION . PUNTO HASHCODE APAR CPAR

    CPAR            shift and go to state 157
    PUNTO           shift and go to state 49


state 113

    (12) print -> printType APAR CPAR .

    PUNTOCOMA       reduce using rule 12 (print -> printType APAR CPAR .)
    VAL             reduce using rule 12 (print -> printType APAR CPAR .)
    VAR             reduce using rule 12 (print -> printType APAR CPAR .)
    ID              reduce using rule 12 (print -> printType APAR CPAR .)
    ENTEROEXPRESION reduce using rule 12 (print -> printType APAR CPAR .)
    CADENAEXPRESION reduce using rule 12 (print -> printType APAR CPAR .)
    TRUE            reduce using rule 12 (print -> printType APAR CPAR .)
    FALSE           reduce using rule 12 (print -> printType APAR CPAR .)
    LISTOF          reduce using rule 12 (print -> printType APAR CPAR .)
    SETOF           reduce using rule 12 (print -> printType APAR CPAR .)
    PAIR            reduce using rule 12 (print -> printType APAR CPAR .)
    TRIPLE          reduce using rule 12 (print -> printType APAR CPAR .)
    IF              reduce using rule 12 (print -> printType APAR CPAR .)
    FOR             reduce using rule 12 (print -> printType APAR CPAR .)
    WHILE           reduce using rule 12 (print -> printType APAR CPAR .)
    PRINT           reduce using rule 12 (print -> printType APAR CPAR .)
    PRINTLN         reduce using rule 12 (print -> printType APAR CPAR .)
    APAR            reduce using rule 12 (print -> printType APAR CPAR .)
    $end            reduce using rule 12 (print -> printType APAR CPAR .)
    IGUALIGUAL      reduce using rule 12 (print -> printType APAR CPAR .)
    TRIPLEIGUAL     reduce using rule 12 (print -> printType APAR CPAR .)
    NOIGUAL         reduce using rule 12 (print -> printType APAR CPAR .)
    MAYOR           reduce using rule 12 (print -> printType APAR CPAR .)
    MENOR           reduce using rule 12 (print -> printType APAR CPAR .)
    MAYORIGUAL      reduce using rule 12 (print -> printType APAR CPAR .)
    MENORIGUAL      reduce using rule 12 (print -> printType APAR CPAR .)
    ELSE            reduce using rule 12 (print -> printType APAR CPAR .)
    AND             reduce using rule 12 (print -> printType APAR CPAR .)
    OR              reduce using rule 12 (print -> printType APAR CPAR .)
    CPAR            reduce using rule 12 (print -> printType APAR CPAR .)
    CLLAVE          reduce using rule 12 (print -> printType APAR CPAR .)


state 114

    (13) print -> printType APAR ID . CPAR
    (21) funcion -> ID . PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> ID . PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> ID . PUNTO GETINDEX APAR ENTEROEXPRESION CPAR

    CPAR            shift and go to state 158
    PUNTO           shift and go to state 44


state 115

    (14) print -> printType APAR funcion . CPAR

    CPAR            shift and go to state 159


state 116

    (15) print -> printType APAR error . CPAR

    CPAR            shift and go to state 160


state 117

    (55) list -> LISTOF APAR contenido . CPAR

    CPAR            shift and go to state 161


state 118

    (59) contenido -> factorEspecial .
    (60) contenido -> factorEspecial . COMA contenido

    CPAR            reduce using rule 59 (contenido -> factorEspecial .)
    COMA            shift and go to state 162


state 119

    (82) factorEspecial -> factor .

    COMA            reduce using rule 82 (factorEspecial -> factor .)
    CPAR            reduce using rule 82 (factorEspecial -> factor .)
    SUMA            reduce using rule 82 (factorEspecial -> factor .)
    RESTA           reduce using rule 82 (factorEspecial -> factor .)
    MULT            reduce using rule 82 (factorEspecial -> factor .)
    DIVISION        reduce using rule 82 (factorEspecial -> factor .)
    MODULO          reduce using rule 82 (factorEspecial -> factor .)
    PUNTOCOMA       reduce using rule 82 (factorEspecial -> factor .)
    VAL             reduce using rule 82 (factorEspecial -> factor .)
    VAR             reduce using rule 82 (factorEspecial -> factor .)
    ID              reduce using rule 82 (factorEspecial -> factor .)
    ENTEROEXPRESION reduce using rule 82 (factorEspecial -> factor .)
    CADENAEXPRESION reduce using rule 82 (factorEspecial -> factor .)
    TRUE            reduce using rule 82 (factorEspecial -> factor .)
    FALSE           reduce using rule 82 (factorEspecial -> factor .)
    LISTOF          reduce using rule 82 (factorEspecial -> factor .)
    SETOF           reduce using rule 82 (factorEspecial -> factor .)
    PAIR            reduce using rule 82 (factorEspecial -> factor .)
    TRIPLE          reduce using rule 82 (factorEspecial -> factor .)
    IF              reduce using rule 82 (factorEspecial -> factor .)
    FOR             reduce using rule 82 (factorEspecial -> factor .)
    WHILE           reduce using rule 82 (factorEspecial -> factor .)
    PRINT           reduce using rule 82 (factorEspecial -> factor .)
    PRINTLN         reduce using rule 82 (factorEspecial -> factor .)
    APAR            reduce using rule 82 (factorEspecial -> factor .)
    $end            reduce using rule 82 (factorEspecial -> factor .)
    IGUALIGUAL      reduce using rule 82 (factorEspecial -> factor .)
    TRIPLEIGUAL     reduce using rule 82 (factorEspecial -> factor .)
    NOIGUAL         reduce using rule 82 (factorEspecial -> factor .)
    MAYOR           reduce using rule 82 (factorEspecial -> factor .)
    MENOR           reduce using rule 82 (factorEspecial -> factor .)
    MAYORIGUAL      reduce using rule 82 (factorEspecial -> factor .)
    MENORIGUAL      reduce using rule 82 (factorEspecial -> factor .)
    ELSE            reduce using rule 82 (factorEspecial -> factor .)
    AND             reduce using rule 82 (factorEspecial -> factor .)
    OR              reduce using rule 82 (factorEspecial -> factor .)
    CLLAVE          reduce using rule 82 (factorEspecial -> factor .)


state 120

    (83) factorEspecial -> CADENAEXPRESION .

    COMA            reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    CPAR            reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    SUMA            reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    RESTA           reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    MULT            reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    DIVISION        reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    MODULO          reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    PUNTOCOMA       reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    VAL             reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    VAR             reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    ID              reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    ENTEROEXPRESION reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    CADENAEXPRESION reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    TRUE            reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    FALSE           reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    LISTOF          reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    SETOF           reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    PAIR            reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    TRIPLE          reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    IF              reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    FOR             reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    WHILE           reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    PRINT           reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    PRINTLN         reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    APAR            reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    $end            reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    IGUALIGUAL      reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    TRIPLEIGUAL     reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    NOIGUAL         reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    MAYOR           reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    MENOR           reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    MAYORIGUAL      reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    MENORIGUAL      reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    ELSE            reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    AND             reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    OR              reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)
    CLLAVE          reduce using rule 83 (factorEspecial -> CADENAEXPRESION .)


state 121

    (84) factorEspecial -> list .

    COMA            reduce using rule 84 (factorEspecial -> list .)
    CPAR            reduce using rule 84 (factorEspecial -> list .)
    SUMA            reduce using rule 84 (factorEspecial -> list .)
    RESTA           reduce using rule 84 (factorEspecial -> list .)
    MULT            reduce using rule 84 (factorEspecial -> list .)
    DIVISION        reduce using rule 84 (factorEspecial -> list .)
    MODULO          reduce using rule 84 (factorEspecial -> list .)
    PUNTOCOMA       reduce using rule 84 (factorEspecial -> list .)
    VAL             reduce using rule 84 (factorEspecial -> list .)
    VAR             reduce using rule 84 (factorEspecial -> list .)
    ID              reduce using rule 84 (factorEspecial -> list .)
    ENTEROEXPRESION reduce using rule 84 (factorEspecial -> list .)
    CADENAEXPRESION reduce using rule 84 (factorEspecial -> list .)
    TRUE            reduce using rule 84 (factorEspecial -> list .)
    FALSE           reduce using rule 84 (factorEspecial -> list .)
    LISTOF          reduce using rule 84 (factorEspecial -> list .)
    SETOF           reduce using rule 84 (factorEspecial -> list .)
    PAIR            reduce using rule 84 (factorEspecial -> list .)
    TRIPLE          reduce using rule 84 (factorEspecial -> list .)
    IF              reduce using rule 84 (factorEspecial -> list .)
    FOR             reduce using rule 84 (factorEspecial -> list .)
    WHILE           reduce using rule 84 (factorEspecial -> list .)
    PRINT           reduce using rule 84 (factorEspecial -> list .)
    PRINTLN         reduce using rule 84 (factorEspecial -> list .)
    APAR            reduce using rule 84 (factorEspecial -> list .)
    $end            reduce using rule 84 (factorEspecial -> list .)
    IGUALIGUAL      reduce using rule 84 (factorEspecial -> list .)
    TRIPLEIGUAL     reduce using rule 84 (factorEspecial -> list .)
    NOIGUAL         reduce using rule 84 (factorEspecial -> list .)
    MAYOR           reduce using rule 84 (factorEspecial -> list .)
    MENOR           reduce using rule 84 (factorEspecial -> list .)
    MAYORIGUAL      reduce using rule 84 (factorEspecial -> list .)
    MENORIGUAL      reduce using rule 84 (factorEspecial -> list .)
    ELSE            reduce using rule 84 (factorEspecial -> list .)
    AND             reduce using rule 84 (factorEspecial -> list .)
    OR              reduce using rule 84 (factorEspecial -> list .)
    CLLAVE          reduce using rule 84 (factorEspecial -> list .)


state 122

    (85) factorEspecial -> set .

    COMA            reduce using rule 85 (factorEspecial -> set .)
    CPAR            reduce using rule 85 (factorEspecial -> set .)
    SUMA            reduce using rule 85 (factorEspecial -> set .)
    RESTA           reduce using rule 85 (factorEspecial -> set .)
    MULT            reduce using rule 85 (factorEspecial -> set .)
    DIVISION        reduce using rule 85 (factorEspecial -> set .)
    MODULO          reduce using rule 85 (factorEspecial -> set .)
    PUNTOCOMA       reduce using rule 85 (factorEspecial -> set .)
    VAL             reduce using rule 85 (factorEspecial -> set .)
    VAR             reduce using rule 85 (factorEspecial -> set .)
    ID              reduce using rule 85 (factorEspecial -> set .)
    ENTEROEXPRESION reduce using rule 85 (factorEspecial -> set .)
    CADENAEXPRESION reduce using rule 85 (factorEspecial -> set .)
    TRUE            reduce using rule 85 (factorEspecial -> set .)
    FALSE           reduce using rule 85 (factorEspecial -> set .)
    LISTOF          reduce using rule 85 (factorEspecial -> set .)
    SETOF           reduce using rule 85 (factorEspecial -> set .)
    PAIR            reduce using rule 85 (factorEspecial -> set .)
    TRIPLE          reduce using rule 85 (factorEspecial -> set .)
    IF              reduce using rule 85 (factorEspecial -> set .)
    FOR             reduce using rule 85 (factorEspecial -> set .)
    WHILE           reduce using rule 85 (factorEspecial -> set .)
    PRINT           reduce using rule 85 (factorEspecial -> set .)
    PRINTLN         reduce using rule 85 (factorEspecial -> set .)
    APAR            reduce using rule 85 (factorEspecial -> set .)
    $end            reduce using rule 85 (factorEspecial -> set .)
    IGUALIGUAL      reduce using rule 85 (factorEspecial -> set .)
    TRIPLEIGUAL     reduce using rule 85 (factorEspecial -> set .)
    NOIGUAL         reduce using rule 85 (factorEspecial -> set .)
    MAYOR           reduce using rule 85 (factorEspecial -> set .)
    MENOR           reduce using rule 85 (factorEspecial -> set .)
    MAYORIGUAL      reduce using rule 85 (factorEspecial -> set .)
    MENORIGUAL      reduce using rule 85 (factorEspecial -> set .)
    ELSE            reduce using rule 85 (factorEspecial -> set .)
    AND             reduce using rule 85 (factorEspecial -> set .)
    OR              reduce using rule 85 (factorEspecial -> set .)
    CLLAVE          reduce using rule 85 (factorEspecial -> set .)


state 123

    (79) factor -> ENTEROEXPRESION .
    (53) flotante -> ENTEROEXPRESION . F
    (54) flotante -> ENTEROEXPRESION . PUNTO ENTEROEXPRESION F

    COMA            reduce using rule 79 (factor -> ENTEROEXPRESION .)
    CPAR            reduce using rule 79 (factor -> ENTEROEXPRESION .)
    SUMA            reduce using rule 79 (factor -> ENTEROEXPRESION .)
    RESTA           reduce using rule 79 (factor -> ENTEROEXPRESION .)
    MULT            reduce using rule 79 (factor -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 79 (factor -> ENTEROEXPRESION .)
    MODULO          reduce using rule 79 (factor -> ENTEROEXPRESION .)
    PUNTOCOMA       reduce using rule 79 (factor -> ENTEROEXPRESION .)
    VAL             reduce using rule 79 (factor -> ENTEROEXPRESION .)
    VAR             reduce using rule 79 (factor -> ENTEROEXPRESION .)
    ID              reduce using rule 79 (factor -> ENTEROEXPRESION .)
    ENTEROEXPRESION reduce using rule 79 (factor -> ENTEROEXPRESION .)
    CADENAEXPRESION reduce using rule 79 (factor -> ENTEROEXPRESION .)
    TRUE            reduce using rule 79 (factor -> ENTEROEXPRESION .)
    FALSE           reduce using rule 79 (factor -> ENTEROEXPRESION .)
    LISTOF          reduce using rule 79 (factor -> ENTEROEXPRESION .)
    SETOF           reduce using rule 79 (factor -> ENTEROEXPRESION .)
    PAIR            reduce using rule 79 (factor -> ENTEROEXPRESION .)
    TRIPLE          reduce using rule 79 (factor -> ENTEROEXPRESION .)
    IF              reduce using rule 79 (factor -> ENTEROEXPRESION .)
    FOR             reduce using rule 79 (factor -> ENTEROEXPRESION .)
    WHILE           reduce using rule 79 (factor -> ENTEROEXPRESION .)
    PRINT           reduce using rule 79 (factor -> ENTEROEXPRESION .)
    PRINTLN         reduce using rule 79 (factor -> ENTEROEXPRESION .)
    APAR            reduce using rule 79 (factor -> ENTEROEXPRESION .)
    $end            reduce using rule 79 (factor -> ENTEROEXPRESION .)
    IGUALIGUAL      reduce using rule 79 (factor -> ENTEROEXPRESION .)
    TRIPLEIGUAL     reduce using rule 79 (factor -> ENTEROEXPRESION .)
    NOIGUAL         reduce using rule 79 (factor -> ENTEROEXPRESION .)
    MAYOR           reduce using rule 79 (factor -> ENTEROEXPRESION .)
    MENOR           reduce using rule 79 (factor -> ENTEROEXPRESION .)
    MAYORIGUAL      reduce using rule 79 (factor -> ENTEROEXPRESION .)
    MENORIGUAL      reduce using rule 79 (factor -> ENTEROEXPRESION .)
    ELSE            reduce using rule 79 (factor -> ENTEROEXPRESION .)
    AND             reduce using rule 79 (factor -> ENTEROEXPRESION .)
    OR              reduce using rule 79 (factor -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 79 (factor -> ENTEROEXPRESION .)
    F               shift and go to state 47
    PUNTO           shift and go to state 48


state 124

    (80) factor -> flotante .

    COMA            reduce using rule 80 (factor -> flotante .)
    CPAR            reduce using rule 80 (factor -> flotante .)
    SUMA            reduce using rule 80 (factor -> flotante .)
    RESTA           reduce using rule 80 (factor -> flotante .)
    MULT            reduce using rule 80 (factor -> flotante .)
    DIVISION        reduce using rule 80 (factor -> flotante .)
    MODULO          reduce using rule 80 (factor -> flotante .)
    PUNTOCOMA       reduce using rule 80 (factor -> flotante .)
    VAL             reduce using rule 80 (factor -> flotante .)
    VAR             reduce using rule 80 (factor -> flotante .)
    ID              reduce using rule 80 (factor -> flotante .)
    ENTEROEXPRESION reduce using rule 80 (factor -> flotante .)
    CADENAEXPRESION reduce using rule 80 (factor -> flotante .)
    TRUE            reduce using rule 80 (factor -> flotante .)
    FALSE           reduce using rule 80 (factor -> flotante .)
    LISTOF          reduce using rule 80 (factor -> flotante .)
    SETOF           reduce using rule 80 (factor -> flotante .)
    PAIR            reduce using rule 80 (factor -> flotante .)
    TRIPLE          reduce using rule 80 (factor -> flotante .)
    IF              reduce using rule 80 (factor -> flotante .)
    FOR             reduce using rule 80 (factor -> flotante .)
    WHILE           reduce using rule 80 (factor -> flotante .)
    PRINT           reduce using rule 80 (factor -> flotante .)
    PRINTLN         reduce using rule 80 (factor -> flotante .)
    APAR            reduce using rule 80 (factor -> flotante .)
    $end            reduce using rule 80 (factor -> flotante .)
    IGUALIGUAL      reduce using rule 80 (factor -> flotante .)
    TRIPLEIGUAL     reduce using rule 80 (factor -> flotante .)
    NOIGUAL         reduce using rule 80 (factor -> flotante .)
    MAYOR           reduce using rule 80 (factor -> flotante .)
    MENOR           reduce using rule 80 (factor -> flotante .)
    MAYORIGUAL      reduce using rule 80 (factor -> flotante .)
    MENORIGUAL      reduce using rule 80 (factor -> flotante .)
    ELSE            reduce using rule 80 (factor -> flotante .)
    AND             reduce using rule 80 (factor -> flotante .)
    OR              reduce using rule 80 (factor -> flotante .)
    CLLAVE          reduce using rule 80 (factor -> flotante .)


state 125

    (81) factor -> ID .

    COMA            reduce using rule 81 (factor -> ID .)
    CPAR            reduce using rule 81 (factor -> ID .)
    SUMA            reduce using rule 81 (factor -> ID .)
    RESTA           reduce using rule 81 (factor -> ID .)
    MULT            reduce using rule 81 (factor -> ID .)
    DIVISION        reduce using rule 81 (factor -> ID .)
    MODULO          reduce using rule 81 (factor -> ID .)
    PUNTOCOMA       reduce using rule 81 (factor -> ID .)
    VAL             reduce using rule 81 (factor -> ID .)
    VAR             reduce using rule 81 (factor -> ID .)
    ID              reduce using rule 81 (factor -> ID .)
    ENTEROEXPRESION reduce using rule 81 (factor -> ID .)
    CADENAEXPRESION reduce using rule 81 (factor -> ID .)
    TRUE            reduce using rule 81 (factor -> ID .)
    FALSE           reduce using rule 81 (factor -> ID .)
    LISTOF          reduce using rule 81 (factor -> ID .)
    SETOF           reduce using rule 81 (factor -> ID .)
    PAIR            reduce using rule 81 (factor -> ID .)
    TRIPLE          reduce using rule 81 (factor -> ID .)
    IF              reduce using rule 81 (factor -> ID .)
    FOR             reduce using rule 81 (factor -> ID .)
    WHILE           reduce using rule 81 (factor -> ID .)
    PRINT           reduce using rule 81 (factor -> ID .)
    PRINTLN         reduce using rule 81 (factor -> ID .)
    APAR            reduce using rule 81 (factor -> ID .)
    $end            reduce using rule 81 (factor -> ID .)
    IGUALIGUAL      reduce using rule 81 (factor -> ID .)
    TRIPLEIGUAL     reduce using rule 81 (factor -> ID .)
    NOIGUAL         reduce using rule 81 (factor -> ID .)
    MAYOR           reduce using rule 81 (factor -> ID .)
    MENOR           reduce using rule 81 (factor -> ID .)
    MAYORIGUAL      reduce using rule 81 (factor -> ID .)
    MENORIGUAL      reduce using rule 81 (factor -> ID .)
    ELSE            reduce using rule 81 (factor -> ID .)
    AND             reduce using rule 81 (factor -> ID .)
    OR              reduce using rule 81 (factor -> ID .)
    CLLAVE          reduce using rule 81 (factor -> ID .)


state 126

    (56) set -> SETOF APAR contenido . CPAR

    CPAR            shift and go to state 163


state 127

    (57) pair -> PAIR APAR factorEspecial . COMA factorEspecial CPAR

    COMA            shift and go to state 164


state 128

    (58) triple -> TRIPLE APAR factorEspecial . COMA factorEspecial COMA factorEspecial CPAR

    COMA            shift and go to state 165


state 129

    (67) termino -> termino SUMA factorEspecial .

    SUMA            reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    RESTA           reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    MULT            reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    DIVISION        reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    MODULO          reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    PUNTOCOMA       reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    VAL             reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    VAR             reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    ID              reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    ENTEROEXPRESION reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    CADENAEXPRESION reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    TRUE            reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    FALSE           reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    LISTOF          reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    SETOF           reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    PAIR            reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    TRIPLE          reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    IF              reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    FOR             reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    WHILE           reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    PRINT           reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    PRINTLN         reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    APAR            reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    $end            reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    CPAR            reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    IGUALIGUAL      reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    TRIPLEIGUAL     reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    NOIGUAL         reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    MAYOR           reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    MENOR           reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    MAYORIGUAL      reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    MENORIGUAL      reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    ELSE            reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    AND             reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    OR              reduce using rule 67 (termino -> termino SUMA factorEspecial .)
    CLLAVE          reduce using rule 67 (termino -> termino SUMA factorEspecial .)


state 130

    (68) termino -> termino RESTA factor .

    SUMA            reduce using rule 68 (termino -> termino RESTA factor .)
    RESTA           reduce using rule 68 (termino -> termino RESTA factor .)
    MULT            reduce using rule 68 (termino -> termino RESTA factor .)
    DIVISION        reduce using rule 68 (termino -> termino RESTA factor .)
    MODULO          reduce using rule 68 (termino -> termino RESTA factor .)
    PUNTOCOMA       reduce using rule 68 (termino -> termino RESTA factor .)
    VAL             reduce using rule 68 (termino -> termino RESTA factor .)
    VAR             reduce using rule 68 (termino -> termino RESTA factor .)
    ID              reduce using rule 68 (termino -> termino RESTA factor .)
    ENTEROEXPRESION reduce using rule 68 (termino -> termino RESTA factor .)
    CADENAEXPRESION reduce using rule 68 (termino -> termino RESTA factor .)
    TRUE            reduce using rule 68 (termino -> termino RESTA factor .)
    FALSE           reduce using rule 68 (termino -> termino RESTA factor .)
    LISTOF          reduce using rule 68 (termino -> termino RESTA factor .)
    SETOF           reduce using rule 68 (termino -> termino RESTA factor .)
    PAIR            reduce using rule 68 (termino -> termino RESTA factor .)
    TRIPLE          reduce using rule 68 (termino -> termino RESTA factor .)
    IF              reduce using rule 68 (termino -> termino RESTA factor .)
    FOR             reduce using rule 68 (termino -> termino RESTA factor .)
    WHILE           reduce using rule 68 (termino -> termino RESTA factor .)
    PRINT           reduce using rule 68 (termino -> termino RESTA factor .)
    PRINTLN         reduce using rule 68 (termino -> termino RESTA factor .)
    APAR            reduce using rule 68 (termino -> termino RESTA factor .)
    $end            reduce using rule 68 (termino -> termino RESTA factor .)
    CPAR            reduce using rule 68 (termino -> termino RESTA factor .)
    IGUALIGUAL      reduce using rule 68 (termino -> termino RESTA factor .)
    TRIPLEIGUAL     reduce using rule 68 (termino -> termino RESTA factor .)
    NOIGUAL         reduce using rule 68 (termino -> termino RESTA factor .)
    MAYOR           reduce using rule 68 (termino -> termino RESTA factor .)
    MENOR           reduce using rule 68 (termino -> termino RESTA factor .)
    MAYORIGUAL      reduce using rule 68 (termino -> termino RESTA factor .)
    MENORIGUAL      reduce using rule 68 (termino -> termino RESTA factor .)
    ELSE            reduce using rule 68 (termino -> termino RESTA factor .)
    AND             reduce using rule 68 (termino -> termino RESTA factor .)
    OR              reduce using rule 68 (termino -> termino RESTA factor .)
    CLLAVE          reduce using rule 68 (termino -> termino RESTA factor .)


state 131

    (69) termino -> termino MULT factor .

    SUMA            reduce using rule 69 (termino -> termino MULT factor .)
    RESTA           reduce using rule 69 (termino -> termino MULT factor .)
    MULT            reduce using rule 69 (termino -> termino MULT factor .)
    DIVISION        reduce using rule 69 (termino -> termino MULT factor .)
    MODULO          reduce using rule 69 (termino -> termino MULT factor .)
    PUNTOCOMA       reduce using rule 69 (termino -> termino MULT factor .)
    VAL             reduce using rule 69 (termino -> termino MULT factor .)
    VAR             reduce using rule 69 (termino -> termino MULT factor .)
    ID              reduce using rule 69 (termino -> termino MULT factor .)
    ENTEROEXPRESION reduce using rule 69 (termino -> termino MULT factor .)
    CADENAEXPRESION reduce using rule 69 (termino -> termino MULT factor .)
    TRUE            reduce using rule 69 (termino -> termino MULT factor .)
    FALSE           reduce using rule 69 (termino -> termino MULT factor .)
    LISTOF          reduce using rule 69 (termino -> termino MULT factor .)
    SETOF           reduce using rule 69 (termino -> termino MULT factor .)
    PAIR            reduce using rule 69 (termino -> termino MULT factor .)
    TRIPLE          reduce using rule 69 (termino -> termino MULT factor .)
    IF              reduce using rule 69 (termino -> termino MULT factor .)
    FOR             reduce using rule 69 (termino -> termino MULT factor .)
    WHILE           reduce using rule 69 (termino -> termino MULT factor .)
    PRINT           reduce using rule 69 (termino -> termino MULT factor .)
    PRINTLN         reduce using rule 69 (termino -> termino MULT factor .)
    APAR            reduce using rule 69 (termino -> termino MULT factor .)
    $end            reduce using rule 69 (termino -> termino MULT factor .)
    CPAR            reduce using rule 69 (termino -> termino MULT factor .)
    IGUALIGUAL      reduce using rule 69 (termino -> termino MULT factor .)
    TRIPLEIGUAL     reduce using rule 69 (termino -> termino MULT factor .)
    NOIGUAL         reduce using rule 69 (termino -> termino MULT factor .)
    MAYOR           reduce using rule 69 (termino -> termino MULT factor .)
    MENOR           reduce using rule 69 (termino -> termino MULT factor .)
    MAYORIGUAL      reduce using rule 69 (termino -> termino MULT factor .)
    MENORIGUAL      reduce using rule 69 (termino -> termino MULT factor .)
    ELSE            reduce using rule 69 (termino -> termino MULT factor .)
    AND             reduce using rule 69 (termino -> termino MULT factor .)
    OR              reduce using rule 69 (termino -> termino MULT factor .)
    CLLAVE          reduce using rule 69 (termino -> termino MULT factor .)


state 132

    (70) termino -> termino DIVISION factor .

    SUMA            reduce using rule 70 (termino -> termino DIVISION factor .)
    RESTA           reduce using rule 70 (termino -> termino DIVISION factor .)
    MULT            reduce using rule 70 (termino -> termino DIVISION factor .)
    DIVISION        reduce using rule 70 (termino -> termino DIVISION factor .)
    MODULO          reduce using rule 70 (termino -> termino DIVISION factor .)
    PUNTOCOMA       reduce using rule 70 (termino -> termino DIVISION factor .)
    VAL             reduce using rule 70 (termino -> termino DIVISION factor .)
    VAR             reduce using rule 70 (termino -> termino DIVISION factor .)
    ID              reduce using rule 70 (termino -> termino DIVISION factor .)
    ENTEROEXPRESION reduce using rule 70 (termino -> termino DIVISION factor .)
    CADENAEXPRESION reduce using rule 70 (termino -> termino DIVISION factor .)
    TRUE            reduce using rule 70 (termino -> termino DIVISION factor .)
    FALSE           reduce using rule 70 (termino -> termino DIVISION factor .)
    LISTOF          reduce using rule 70 (termino -> termino DIVISION factor .)
    SETOF           reduce using rule 70 (termino -> termino DIVISION factor .)
    PAIR            reduce using rule 70 (termino -> termino DIVISION factor .)
    TRIPLE          reduce using rule 70 (termino -> termino DIVISION factor .)
    IF              reduce using rule 70 (termino -> termino DIVISION factor .)
    FOR             reduce using rule 70 (termino -> termino DIVISION factor .)
    WHILE           reduce using rule 70 (termino -> termino DIVISION factor .)
    PRINT           reduce using rule 70 (termino -> termino DIVISION factor .)
    PRINTLN         reduce using rule 70 (termino -> termino DIVISION factor .)
    APAR            reduce using rule 70 (termino -> termino DIVISION factor .)
    $end            reduce using rule 70 (termino -> termino DIVISION factor .)
    CPAR            reduce using rule 70 (termino -> termino DIVISION factor .)
    IGUALIGUAL      reduce using rule 70 (termino -> termino DIVISION factor .)
    TRIPLEIGUAL     reduce using rule 70 (termino -> termino DIVISION factor .)
    NOIGUAL         reduce using rule 70 (termino -> termino DIVISION factor .)
    MAYOR           reduce using rule 70 (termino -> termino DIVISION factor .)
    MENOR           reduce using rule 70 (termino -> termino DIVISION factor .)
    MAYORIGUAL      reduce using rule 70 (termino -> termino DIVISION factor .)
    MENORIGUAL      reduce using rule 70 (termino -> termino DIVISION factor .)
    ELSE            reduce using rule 70 (termino -> termino DIVISION factor .)
    AND             reduce using rule 70 (termino -> termino DIVISION factor .)
    OR              reduce using rule 70 (termino -> termino DIVISION factor .)
    CLLAVE          reduce using rule 70 (termino -> termino DIVISION factor .)


state 133

    (71) termino -> termino MODULO factor .

    SUMA            reduce using rule 71 (termino -> termino MODULO factor .)
    RESTA           reduce using rule 71 (termino -> termino MODULO factor .)
    MULT            reduce using rule 71 (termino -> termino MODULO factor .)
    DIVISION        reduce using rule 71 (termino -> termino MODULO factor .)
    MODULO          reduce using rule 71 (termino -> termino MODULO factor .)
    PUNTOCOMA       reduce using rule 71 (termino -> termino MODULO factor .)
    VAL             reduce using rule 71 (termino -> termino MODULO factor .)
    VAR             reduce using rule 71 (termino -> termino MODULO factor .)
    ID              reduce using rule 71 (termino -> termino MODULO factor .)
    ENTEROEXPRESION reduce using rule 71 (termino -> termino MODULO factor .)
    CADENAEXPRESION reduce using rule 71 (termino -> termino MODULO factor .)
    TRUE            reduce using rule 71 (termino -> termino MODULO factor .)
    FALSE           reduce using rule 71 (termino -> termino MODULO factor .)
    LISTOF          reduce using rule 71 (termino -> termino MODULO factor .)
    SETOF           reduce using rule 71 (termino -> termino MODULO factor .)
    PAIR            reduce using rule 71 (termino -> termino MODULO factor .)
    TRIPLE          reduce using rule 71 (termino -> termino MODULO factor .)
    IF              reduce using rule 71 (termino -> termino MODULO factor .)
    FOR             reduce using rule 71 (termino -> termino MODULO factor .)
    WHILE           reduce using rule 71 (termino -> termino MODULO factor .)
    PRINT           reduce using rule 71 (termino -> termino MODULO factor .)
    PRINTLN         reduce using rule 71 (termino -> termino MODULO factor .)
    APAR            reduce using rule 71 (termino -> termino MODULO factor .)
    $end            reduce using rule 71 (termino -> termino MODULO factor .)
    CPAR            reduce using rule 71 (termino -> termino MODULO factor .)
    IGUALIGUAL      reduce using rule 71 (termino -> termino MODULO factor .)
    TRIPLEIGUAL     reduce using rule 71 (termino -> termino MODULO factor .)
    NOIGUAL         reduce using rule 71 (termino -> termino MODULO factor .)
    MAYOR           reduce using rule 71 (termino -> termino MODULO factor .)
    MENOR           reduce using rule 71 (termino -> termino MODULO factor .)
    MAYORIGUAL      reduce using rule 71 (termino -> termino MODULO factor .)
    MENORIGUAL      reduce using rule 71 (termino -> termino MODULO factor .)
    ELSE            reduce using rule 71 (termino -> termino MODULO factor .)
    AND             reduce using rule 71 (termino -> termino MODULO factor .)
    OR              reduce using rule 71 (termino -> termino MODULO factor .)
    CLLAVE          reduce using rule 71 (termino -> termino MODULO factor .)


state 134

    (107) if -> IF APAR condicion . CPAR cuerpo
    (108) if -> IF APAR condicion . CPAR cuerpo ELSE cuerpo

    CPAR            shift and go to state 166


state 135

    (117) for -> FOR APAR APAR . ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> FOR APAR APAR . ID COMA ID CPAR IN ID CPAR cuerpo

    ID              shift and go to state 167


state 136

    (109) for -> FOR APAR ID . IN ID CPAR cuerpo
    (110) for -> FOR APAR ID . DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> FOR APAR ID . IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> FOR APAR ID . IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> FOR APAR ID . IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> FOR APAR ID . IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> FOR APAR ID . IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> FOR APAR ID . IN ID PUNTO ID CPAR cuerpo

    IN              shift and go to state 168
    DOSPUNTOS       shift and go to state 169


state 137

    (119) while -> WHILE APAR condicion . CPAR cuerpo

    CPAR            shift and go to state 170


state 138

    (29) tipoAsignacion -> declaracion inicializacion .

    PUNTOCOMA       reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    VAL             reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    VAR             reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    ID              reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    ENTEROEXPRESION reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    CADENAEXPRESION reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    TRUE            reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    FALSE           reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    LISTOF          reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    SETOF           reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    PAIR            reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    TRIPLE          reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    IF              reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    FOR             reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    WHILE           reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    PRINT           reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    PRINTLN         reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    APAR            reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    $end            reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    IGUALIGUAL      reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    TRIPLEIGUAL     reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    NOIGUAL         reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    MAYOR           reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    MENOR           reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    MAYORIGUAL      reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    MENORIGUAL      reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    ELSE            reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    AND             reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    OR              reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    CPAR            reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)
    CLLAVE          reduce using rule 29 (tipoAsignacion -> declaracion inicializacion .)


state 139

    (30) declaracion -> DOSPUNTOS tipoDato .

    IGUAL           reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    PUNTOCOMA       reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    VAL             reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    VAR             reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    ID              reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    ENTEROEXPRESION reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    CADENAEXPRESION reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    TRUE            reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    FALSE           reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    LISTOF          reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    SETOF           reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    PAIR            reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    TRIPLE          reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    IF              reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    FOR             reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    WHILE           reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    PRINT           reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    PRINTLN         reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    APAR            reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    $end            reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    IGUALIGUAL      reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    TRIPLEIGUAL     reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    NOIGUAL         reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    MAYOR           reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    MENOR           reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    MAYORIGUAL      reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    MENORIGUAL      reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    ELSE            reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    AND             reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    OR              reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    CPAR            reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)
    CLLAVE          reduce using rule 30 (declaracion -> DOSPUNTOS tipoDato .)


state 140

    (32) tipoDato -> INT .

    IGUAL           reduce using rule 32 (tipoDato -> INT .)
    PUNTOCOMA       reduce using rule 32 (tipoDato -> INT .)
    VAL             reduce using rule 32 (tipoDato -> INT .)
    VAR             reduce using rule 32 (tipoDato -> INT .)
    ID              reduce using rule 32 (tipoDato -> INT .)
    ENTEROEXPRESION reduce using rule 32 (tipoDato -> INT .)
    CADENAEXPRESION reduce using rule 32 (tipoDato -> INT .)
    TRUE            reduce using rule 32 (tipoDato -> INT .)
    FALSE           reduce using rule 32 (tipoDato -> INT .)
    LISTOF          reduce using rule 32 (tipoDato -> INT .)
    SETOF           reduce using rule 32 (tipoDato -> INT .)
    PAIR            reduce using rule 32 (tipoDato -> INT .)
    TRIPLE          reduce using rule 32 (tipoDato -> INT .)
    IF              reduce using rule 32 (tipoDato -> INT .)
    FOR             reduce using rule 32 (tipoDato -> INT .)
    WHILE           reduce using rule 32 (tipoDato -> INT .)
    PRINT           reduce using rule 32 (tipoDato -> INT .)
    PRINTLN         reduce using rule 32 (tipoDato -> INT .)
    APAR            reduce using rule 32 (tipoDato -> INT .)
    $end            reduce using rule 32 (tipoDato -> INT .)
    IGUALIGUAL      reduce using rule 32 (tipoDato -> INT .)
    TRIPLEIGUAL     reduce using rule 32 (tipoDato -> INT .)
    NOIGUAL         reduce using rule 32 (tipoDato -> INT .)
    MAYOR           reduce using rule 32 (tipoDato -> INT .)
    MENOR           reduce using rule 32 (tipoDato -> INT .)
    MAYORIGUAL      reduce using rule 32 (tipoDato -> INT .)
    MENORIGUAL      reduce using rule 32 (tipoDato -> INT .)
    ELSE            reduce using rule 32 (tipoDato -> INT .)
    AND             reduce using rule 32 (tipoDato -> INT .)
    OR              reduce using rule 32 (tipoDato -> INT .)
    CPAR            reduce using rule 32 (tipoDato -> INT .)
    CLLAVE          reduce using rule 32 (tipoDato -> INT .)
    COMA            reduce using rule 32 (tipoDato -> INT .)


state 141

    (33) tipoDato -> FLOAT .

    IGUAL           reduce using rule 33 (tipoDato -> FLOAT .)
    PUNTOCOMA       reduce using rule 33 (tipoDato -> FLOAT .)
    VAL             reduce using rule 33 (tipoDato -> FLOAT .)
    VAR             reduce using rule 33 (tipoDato -> FLOAT .)
    ID              reduce using rule 33 (tipoDato -> FLOAT .)
    ENTEROEXPRESION reduce using rule 33 (tipoDato -> FLOAT .)
    CADENAEXPRESION reduce using rule 33 (tipoDato -> FLOAT .)
    TRUE            reduce using rule 33 (tipoDato -> FLOAT .)
    FALSE           reduce using rule 33 (tipoDato -> FLOAT .)
    LISTOF          reduce using rule 33 (tipoDato -> FLOAT .)
    SETOF           reduce using rule 33 (tipoDato -> FLOAT .)
    PAIR            reduce using rule 33 (tipoDato -> FLOAT .)
    TRIPLE          reduce using rule 33 (tipoDato -> FLOAT .)
    IF              reduce using rule 33 (tipoDato -> FLOAT .)
    FOR             reduce using rule 33 (tipoDato -> FLOAT .)
    WHILE           reduce using rule 33 (tipoDato -> FLOAT .)
    PRINT           reduce using rule 33 (tipoDato -> FLOAT .)
    PRINTLN         reduce using rule 33 (tipoDato -> FLOAT .)
    APAR            reduce using rule 33 (tipoDato -> FLOAT .)
    $end            reduce using rule 33 (tipoDato -> FLOAT .)
    IGUALIGUAL      reduce using rule 33 (tipoDato -> FLOAT .)
    TRIPLEIGUAL     reduce using rule 33 (tipoDato -> FLOAT .)
    NOIGUAL         reduce using rule 33 (tipoDato -> FLOAT .)
    MAYOR           reduce using rule 33 (tipoDato -> FLOAT .)
    MENOR           reduce using rule 33 (tipoDato -> FLOAT .)
    MAYORIGUAL      reduce using rule 33 (tipoDato -> FLOAT .)
    MENORIGUAL      reduce using rule 33 (tipoDato -> FLOAT .)
    ELSE            reduce using rule 33 (tipoDato -> FLOAT .)
    AND             reduce using rule 33 (tipoDato -> FLOAT .)
    OR              reduce using rule 33 (tipoDato -> FLOAT .)
    CPAR            reduce using rule 33 (tipoDato -> FLOAT .)
    CLLAVE          reduce using rule 33 (tipoDato -> FLOAT .)
    COMA            reduce using rule 33 (tipoDato -> FLOAT .)


state 142

    (34) tipoDato -> BOOLEAN .

    IGUAL           reduce using rule 34 (tipoDato -> BOOLEAN .)
    PUNTOCOMA       reduce using rule 34 (tipoDato -> BOOLEAN .)
    VAL             reduce using rule 34 (tipoDato -> BOOLEAN .)
    VAR             reduce using rule 34 (tipoDato -> BOOLEAN .)
    ID              reduce using rule 34 (tipoDato -> BOOLEAN .)
    ENTEROEXPRESION reduce using rule 34 (tipoDato -> BOOLEAN .)
    CADENAEXPRESION reduce using rule 34 (tipoDato -> BOOLEAN .)
    TRUE            reduce using rule 34 (tipoDato -> BOOLEAN .)
    FALSE           reduce using rule 34 (tipoDato -> BOOLEAN .)
    LISTOF          reduce using rule 34 (tipoDato -> BOOLEAN .)
    SETOF           reduce using rule 34 (tipoDato -> BOOLEAN .)
    PAIR            reduce using rule 34 (tipoDato -> BOOLEAN .)
    TRIPLE          reduce using rule 34 (tipoDato -> BOOLEAN .)
    IF              reduce using rule 34 (tipoDato -> BOOLEAN .)
    FOR             reduce using rule 34 (tipoDato -> BOOLEAN .)
    WHILE           reduce using rule 34 (tipoDato -> BOOLEAN .)
    PRINT           reduce using rule 34 (tipoDato -> BOOLEAN .)
    PRINTLN         reduce using rule 34 (tipoDato -> BOOLEAN .)
    APAR            reduce using rule 34 (tipoDato -> BOOLEAN .)
    $end            reduce using rule 34 (tipoDato -> BOOLEAN .)
    IGUALIGUAL      reduce using rule 34 (tipoDato -> BOOLEAN .)
    TRIPLEIGUAL     reduce using rule 34 (tipoDato -> BOOLEAN .)
    NOIGUAL         reduce using rule 34 (tipoDato -> BOOLEAN .)
    MAYOR           reduce using rule 34 (tipoDato -> BOOLEAN .)
    MENOR           reduce using rule 34 (tipoDato -> BOOLEAN .)
    MAYORIGUAL      reduce using rule 34 (tipoDato -> BOOLEAN .)
    MENORIGUAL      reduce using rule 34 (tipoDato -> BOOLEAN .)
    ELSE            reduce using rule 34 (tipoDato -> BOOLEAN .)
    AND             reduce using rule 34 (tipoDato -> BOOLEAN .)
    OR              reduce using rule 34 (tipoDato -> BOOLEAN .)
    CPAR            reduce using rule 34 (tipoDato -> BOOLEAN .)
    CLLAVE          reduce using rule 34 (tipoDato -> BOOLEAN .)
    COMA            reduce using rule 34 (tipoDato -> BOOLEAN .)


state 143

    (35) tipoDato -> STRING .

    IGUAL           reduce using rule 35 (tipoDato -> STRING .)
    PUNTOCOMA       reduce using rule 35 (tipoDato -> STRING .)
    VAL             reduce using rule 35 (tipoDato -> STRING .)
    VAR             reduce using rule 35 (tipoDato -> STRING .)
    ID              reduce using rule 35 (tipoDato -> STRING .)
    ENTEROEXPRESION reduce using rule 35 (tipoDato -> STRING .)
    CADENAEXPRESION reduce using rule 35 (tipoDato -> STRING .)
    TRUE            reduce using rule 35 (tipoDato -> STRING .)
    FALSE           reduce using rule 35 (tipoDato -> STRING .)
    LISTOF          reduce using rule 35 (tipoDato -> STRING .)
    SETOF           reduce using rule 35 (tipoDato -> STRING .)
    PAIR            reduce using rule 35 (tipoDato -> STRING .)
    TRIPLE          reduce using rule 35 (tipoDato -> STRING .)
    IF              reduce using rule 35 (tipoDato -> STRING .)
    FOR             reduce using rule 35 (tipoDato -> STRING .)
    WHILE           reduce using rule 35 (tipoDato -> STRING .)
    PRINT           reduce using rule 35 (tipoDato -> STRING .)
    PRINTLN         reduce using rule 35 (tipoDato -> STRING .)
    APAR            reduce using rule 35 (tipoDato -> STRING .)
    $end            reduce using rule 35 (tipoDato -> STRING .)
    IGUALIGUAL      reduce using rule 35 (tipoDato -> STRING .)
    TRIPLEIGUAL     reduce using rule 35 (tipoDato -> STRING .)
    NOIGUAL         reduce using rule 35 (tipoDato -> STRING .)
    MAYOR           reduce using rule 35 (tipoDato -> STRING .)
    MENOR           reduce using rule 35 (tipoDato -> STRING .)
    MAYORIGUAL      reduce using rule 35 (tipoDato -> STRING .)
    MENORIGUAL      reduce using rule 35 (tipoDato -> STRING .)
    ELSE            reduce using rule 35 (tipoDato -> STRING .)
    AND             reduce using rule 35 (tipoDato -> STRING .)
    OR              reduce using rule 35 (tipoDato -> STRING .)
    CPAR            reduce using rule 35 (tipoDato -> STRING .)
    CLLAVE          reduce using rule 35 (tipoDato -> STRING .)
    COMA            reduce using rule 35 (tipoDato -> STRING .)


state 144

    (36) tipoDato -> LIST . MENOR tipoDato MAYOR

    MENOR           shift and go to state 171


state 145

    (37) tipoDato -> SET . MENOR tipoDato MAYOR

    MENOR           shift and go to state 172


state 146

    (38) tipoDato -> PAIR . MENOR tipoDato COMA tipoDato MAYOR

    MENOR           shift and go to state 173


state 147

    (39) tipoDato -> TRIPLE . MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    MENOR           shift and go to state 174


state 148

    (21) funcion -> ID PUNTO CONTAINS APAR . factorEspecial CPAR
    (22) funcion -> ID PUNTO CONTAINS APAR . ID CPAR
    (82) factorEspecial -> . factor
    (83) factorEspecial -> . CADENAEXPRESION
    (84) factorEspecial -> . list
    (85) factorEspecial -> . set
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    ID              shift and go to state 175
    CADENAEXPRESION shift and go to state 120
    ENTEROEXPRESION shift and go to state 123
    APAR            shift and go to state 22
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    factorEspecial                 shift and go to state 176
    factor                         shift and go to state 119
    list                           shift and go to state 121
    set                            shift and go to state 122
    flotante                       shift and go to state 124

state 149

    (23) funcion -> ID PUNTO GETINDEX APAR . ENTEROEXPRESION CPAR

    ENTEROEXPRESION shift and go to state 177


state 150

    (54) flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .

    PUNTOCOMA       reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    VAL             reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    VAR             reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    ID              reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    ENTEROEXPRESION reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    CADENAEXPRESION reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    TRUE            reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    FALSE           reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    LISTOF          reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    SETOF           reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    PAIR            reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    TRIPLE          reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    IF              reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    FOR             reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    WHILE           reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    PRINT           reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    PRINTLN         reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    APAR            reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    $end            reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    SUMA            reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    RESTA           reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    MULT            reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    DIVISION        reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    MODULO          reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    CPAR            reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    IGUALIGUAL      reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    TRIPLEIGUAL     reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    NOIGUAL         reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    MAYOR           reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    MENOR           reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    MAYORIGUAL      reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    MENORIGUAL      reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    ELSE            reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    AND             reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    OR              reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    CLLAVE          reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    COMA            reduce using rule 54 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)


state 151

    (18) funcion -> CADENAEXPRESION PUNTO COMPARETO APAR . CADENAEXPRESION CPAR

    CADENAEXPRESION shift and go to state 178


state 152

    (19) funcion -> CADENAEXPRESION PUNTO GETINDEX APAR . ENTEROEXPRESION CPAR

    ENTEROEXPRESION shift and go to state 179


state 153

    (20) funcion -> CADENAEXPRESION PUNTO HASHCODE APAR . CPAR

    CPAR            shift and go to state 180


state 154

    (101) condicion -> compmiembro comparador compmiembro conector . compmiembro comparador compmiembro
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion

    ID              shift and go to state 107
    ENTEROEXPRESION shift and go to state 108
    CADENAEXPRESION shift and go to state 111
    VAL             shift and go to state 9
    VAR             shift and go to state 11

    compmiembro                    shift and go to state 181
    funcion                        shift and go to state 109
    asignacion                     shift and go to state 110

state 155

    (94) conector -> AND .

    ID              reduce using rule 94 (conector -> AND .)
    ENTEROEXPRESION reduce using rule 94 (conector -> AND .)
    CADENAEXPRESION reduce using rule 94 (conector -> AND .)
    VAL             reduce using rule 94 (conector -> AND .)
    VAR             reduce using rule 94 (conector -> AND .)


state 156

    (95) conector -> OR .

    ID              reduce using rule 95 (conector -> OR .)
    ENTEROEXPRESION reduce using rule 95 (conector -> OR .)
    CADENAEXPRESION reduce using rule 95 (conector -> OR .)
    VAL             reduce using rule 95 (conector -> OR .)
    VAR             reduce using rule 95 (conector -> OR .)


state 157

    (11) print -> printType APAR CADENAEXPRESION CPAR .

    PUNTOCOMA       reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    VAL             reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    VAR             reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    ID              reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    ENTEROEXPRESION reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    CADENAEXPRESION reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    TRUE            reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    FALSE           reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    LISTOF          reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    SETOF           reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    PAIR            reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    TRIPLE          reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    IF              reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    FOR             reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    WHILE           reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    PRINT           reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    PRINTLN         reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    APAR            reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    $end            reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    IGUALIGUAL      reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    TRIPLEIGUAL     reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    NOIGUAL         reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    MAYOR           reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    MENOR           reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    MAYORIGUAL      reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    MENORIGUAL      reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    ELSE            reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    AND             reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    OR              reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    CPAR            reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    CLLAVE          reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)


state 158

    (13) print -> printType APAR ID CPAR .

    PUNTOCOMA       reduce using rule 13 (print -> printType APAR ID CPAR .)
    VAL             reduce using rule 13 (print -> printType APAR ID CPAR .)
    VAR             reduce using rule 13 (print -> printType APAR ID CPAR .)
    ID              reduce using rule 13 (print -> printType APAR ID CPAR .)
    ENTEROEXPRESION reduce using rule 13 (print -> printType APAR ID CPAR .)
    CADENAEXPRESION reduce using rule 13 (print -> printType APAR ID CPAR .)
    TRUE            reduce using rule 13 (print -> printType APAR ID CPAR .)
    FALSE           reduce using rule 13 (print -> printType APAR ID CPAR .)
    LISTOF          reduce using rule 13 (print -> printType APAR ID CPAR .)
    SETOF           reduce using rule 13 (print -> printType APAR ID CPAR .)
    PAIR            reduce using rule 13 (print -> printType APAR ID CPAR .)
    TRIPLE          reduce using rule 13 (print -> printType APAR ID CPAR .)
    IF              reduce using rule 13 (print -> printType APAR ID CPAR .)
    FOR             reduce using rule 13 (print -> printType APAR ID CPAR .)
    WHILE           reduce using rule 13 (print -> printType APAR ID CPAR .)
    PRINT           reduce using rule 13 (print -> printType APAR ID CPAR .)
    PRINTLN         reduce using rule 13 (print -> printType APAR ID CPAR .)
    APAR            reduce using rule 13 (print -> printType APAR ID CPAR .)
    $end            reduce using rule 13 (print -> printType APAR ID CPAR .)
    IGUALIGUAL      reduce using rule 13 (print -> printType APAR ID CPAR .)
    TRIPLEIGUAL     reduce using rule 13 (print -> printType APAR ID CPAR .)
    NOIGUAL         reduce using rule 13 (print -> printType APAR ID CPAR .)
    MAYOR           reduce using rule 13 (print -> printType APAR ID CPAR .)
    MENOR           reduce using rule 13 (print -> printType APAR ID CPAR .)
    MAYORIGUAL      reduce using rule 13 (print -> printType APAR ID CPAR .)
    MENORIGUAL      reduce using rule 13 (print -> printType APAR ID CPAR .)
    ELSE            reduce using rule 13 (print -> printType APAR ID CPAR .)
    AND             reduce using rule 13 (print -> printType APAR ID CPAR .)
    OR              reduce using rule 13 (print -> printType APAR ID CPAR .)
    CPAR            reduce using rule 13 (print -> printType APAR ID CPAR .)
    CLLAVE          reduce using rule 13 (print -> printType APAR ID CPAR .)


state 159

    (14) print -> printType APAR funcion CPAR .

    PUNTOCOMA       reduce using rule 14 (print -> printType APAR funcion CPAR .)
    VAL             reduce using rule 14 (print -> printType APAR funcion CPAR .)
    VAR             reduce using rule 14 (print -> printType APAR funcion CPAR .)
    ID              reduce using rule 14 (print -> printType APAR funcion CPAR .)
    ENTEROEXPRESION reduce using rule 14 (print -> printType APAR funcion CPAR .)
    CADENAEXPRESION reduce using rule 14 (print -> printType APAR funcion CPAR .)
    TRUE            reduce using rule 14 (print -> printType APAR funcion CPAR .)
    FALSE           reduce using rule 14 (print -> printType APAR funcion CPAR .)
    LISTOF          reduce using rule 14 (print -> printType APAR funcion CPAR .)
    SETOF           reduce using rule 14 (print -> printType APAR funcion CPAR .)
    PAIR            reduce using rule 14 (print -> printType APAR funcion CPAR .)
    TRIPLE          reduce using rule 14 (print -> printType APAR funcion CPAR .)
    IF              reduce using rule 14 (print -> printType APAR funcion CPAR .)
    FOR             reduce using rule 14 (print -> printType APAR funcion CPAR .)
    WHILE           reduce using rule 14 (print -> printType APAR funcion CPAR .)
    PRINT           reduce using rule 14 (print -> printType APAR funcion CPAR .)
    PRINTLN         reduce using rule 14 (print -> printType APAR funcion CPAR .)
    APAR            reduce using rule 14 (print -> printType APAR funcion CPAR .)
    $end            reduce using rule 14 (print -> printType APAR funcion CPAR .)
    IGUALIGUAL      reduce using rule 14 (print -> printType APAR funcion CPAR .)
    TRIPLEIGUAL     reduce using rule 14 (print -> printType APAR funcion CPAR .)
    NOIGUAL         reduce using rule 14 (print -> printType APAR funcion CPAR .)
    MAYOR           reduce using rule 14 (print -> printType APAR funcion CPAR .)
    MENOR           reduce using rule 14 (print -> printType APAR funcion CPAR .)
    MAYORIGUAL      reduce using rule 14 (print -> printType APAR funcion CPAR .)
    MENORIGUAL      reduce using rule 14 (print -> printType APAR funcion CPAR .)
    ELSE            reduce using rule 14 (print -> printType APAR funcion CPAR .)
    AND             reduce using rule 14 (print -> printType APAR funcion CPAR .)
    OR              reduce using rule 14 (print -> printType APAR funcion CPAR .)
    CPAR            reduce using rule 14 (print -> printType APAR funcion CPAR .)
    CLLAVE          reduce using rule 14 (print -> printType APAR funcion CPAR .)


state 160

    (15) print -> printType APAR error CPAR .

    PUNTOCOMA       reduce using rule 15 (print -> printType APAR error CPAR .)
    VAL             reduce using rule 15 (print -> printType APAR error CPAR .)
    VAR             reduce using rule 15 (print -> printType APAR error CPAR .)
    ID              reduce using rule 15 (print -> printType APAR error CPAR .)
    ENTEROEXPRESION reduce using rule 15 (print -> printType APAR error CPAR .)
    CADENAEXPRESION reduce using rule 15 (print -> printType APAR error CPAR .)
    TRUE            reduce using rule 15 (print -> printType APAR error CPAR .)
    FALSE           reduce using rule 15 (print -> printType APAR error CPAR .)
    LISTOF          reduce using rule 15 (print -> printType APAR error CPAR .)
    SETOF           reduce using rule 15 (print -> printType APAR error CPAR .)
    PAIR            reduce using rule 15 (print -> printType APAR error CPAR .)
    TRIPLE          reduce using rule 15 (print -> printType APAR error CPAR .)
    IF              reduce using rule 15 (print -> printType APAR error CPAR .)
    FOR             reduce using rule 15 (print -> printType APAR error CPAR .)
    WHILE           reduce using rule 15 (print -> printType APAR error CPAR .)
    PRINT           reduce using rule 15 (print -> printType APAR error CPAR .)
    PRINTLN         reduce using rule 15 (print -> printType APAR error CPAR .)
    APAR            reduce using rule 15 (print -> printType APAR error CPAR .)
    $end            reduce using rule 15 (print -> printType APAR error CPAR .)
    IGUALIGUAL      reduce using rule 15 (print -> printType APAR error CPAR .)
    TRIPLEIGUAL     reduce using rule 15 (print -> printType APAR error CPAR .)
    NOIGUAL         reduce using rule 15 (print -> printType APAR error CPAR .)
    MAYOR           reduce using rule 15 (print -> printType APAR error CPAR .)
    MENOR           reduce using rule 15 (print -> printType APAR error CPAR .)
    MAYORIGUAL      reduce using rule 15 (print -> printType APAR error CPAR .)
    MENORIGUAL      reduce using rule 15 (print -> printType APAR error CPAR .)
    ELSE            reduce using rule 15 (print -> printType APAR error CPAR .)
    AND             reduce using rule 15 (print -> printType APAR error CPAR .)
    OR              reduce using rule 15 (print -> printType APAR error CPAR .)
    CPAR            reduce using rule 15 (print -> printType APAR error CPAR .)
    CLLAVE          reduce using rule 15 (print -> printType APAR error CPAR .)


state 161

    (55) list -> LISTOF APAR contenido CPAR .

    PUNTOCOMA       reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    VAL             reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    VAR             reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    ID              reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    ENTEROEXPRESION reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    CADENAEXPRESION reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    TRUE            reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    FALSE           reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    LISTOF          reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    SETOF           reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    PAIR            reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    TRIPLE          reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    IF              reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    FOR             reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    WHILE           reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    PRINT           reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    PRINTLN         reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    APAR            reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    $end            reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    SUMA            reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    RESTA           reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    MULT            reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    DIVISION        reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    MODULO          reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    CPAR            reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    IGUALIGUAL      reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    TRIPLEIGUAL     reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    NOIGUAL         reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    MAYOR           reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    MENOR           reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    MAYORIGUAL      reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    MENORIGUAL      reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    ELSE            reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    AND             reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    OR              reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    CLLAVE          reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)
    COMA            reduce using rule 55 (list -> LISTOF APAR contenido CPAR .)


state 162

    (60) contenido -> factorEspecial COMA . contenido
    (59) contenido -> . factorEspecial
    (60) contenido -> . factorEspecial COMA contenido
    (82) factorEspecial -> . factor
    (83) factorEspecial -> . CADENAEXPRESION
    (84) factorEspecial -> . list
    (85) factorEspecial -> . set
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 120
    ENTEROEXPRESION shift and go to state 123
    ID              shift and go to state 125
    APAR            shift and go to state 22
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    factorEspecial                 shift and go to state 118
    contenido                      shift and go to state 182
    factor                         shift and go to state 119
    list                           shift and go to state 121
    set                            shift and go to state 122
    flotante                       shift and go to state 124

state 163

    (56) set -> SETOF APAR contenido CPAR .

    PUNTOCOMA       reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    VAL             reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    VAR             reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    ID              reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    ENTEROEXPRESION reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    CADENAEXPRESION reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    TRUE            reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    FALSE           reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    LISTOF          reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    SETOF           reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    PAIR            reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    TRIPLE          reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    IF              reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    FOR             reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    WHILE           reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    PRINT           reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    PRINTLN         reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    APAR            reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    $end            reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    SUMA            reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    RESTA           reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    MULT            reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    DIVISION        reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    MODULO          reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    CPAR            reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    IGUALIGUAL      reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    TRIPLEIGUAL     reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    NOIGUAL         reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    MAYOR           reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    MENOR           reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    MAYORIGUAL      reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    MENORIGUAL      reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    ELSE            reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    AND             reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    OR              reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    CLLAVE          reduce using rule 56 (set -> SETOF APAR contenido CPAR .)
    COMA            reduce using rule 56 (set -> SETOF APAR contenido CPAR .)


state 164

    (57) pair -> PAIR APAR factorEspecial COMA . factorEspecial CPAR
    (82) factorEspecial -> . factor
    (83) factorEspecial -> . CADENAEXPRESION
    (84) factorEspecial -> . list
    (85) factorEspecial -> . set
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 120
    ENTEROEXPRESION shift and go to state 123
    ID              shift and go to state 125
    APAR            shift and go to state 22
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    factorEspecial                 shift and go to state 183
    factor                         shift and go to state 119
    list                           shift and go to state 121
    set                            shift and go to state 122
    flotante                       shift and go to state 124

state 165

    (58) triple -> TRIPLE APAR factorEspecial COMA . factorEspecial COMA factorEspecial CPAR
    (82) factorEspecial -> . factor
    (83) factorEspecial -> . CADENAEXPRESION
    (84) factorEspecial -> . list
    (85) factorEspecial -> . set
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 120
    ENTEROEXPRESION shift and go to state 123
    ID              shift and go to state 125
    APAR            shift and go to state 22
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    factorEspecial                 shift and go to state 184
    factor                         shift and go to state 119
    list                           shift and go to state 121
    set                            shift and go to state 122
    flotante                       shift and go to state 124

state 166

    (107) if -> IF APAR condicion CPAR . cuerpo
    (108) if -> IF APAR condicion CPAR . cuerpo ELSE cuerpo
    (105) cuerpo -> . sentencia
    (106) cuerpo -> . ALLAVE sentencia CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion
    (40) valor -> . ENTEROEXPRESION
    (41) valor -> . flotante
    (42) valor -> . expresionBooleano
    (43) valor -> . CADENAEXPRESION
    (44) valor -> . list
    (45) valor -> . set
    (46) valor -> . pair
    (47) valor -> . triple
    (48) valor -> . expresion
    (49) valor -> . ID
    (50) valor -> . if
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (102) control -> . if
    (103) control -> . for
    (104) control -> . while
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR error CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (51) expresionBooleano -> . TRUE
    (52) expresionBooleano -> . FALSE
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (57) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (58) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (107) if -> . IF APAR condicion CPAR cuerpo
    (108) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (109) for -> . FOR APAR ID IN ID CPAR cuerpo
    (110) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (119) while -> . WHILE APAR condicion CPAR cuerpo
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (16) printType -> . PRINT
    (17) printType -> . PRINTLN
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 187
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    CADENAEXPRESION shift and go to state 15
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30
    PAIR            shift and go to state 31
    TRIPLE          shift and go to state 32
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    APAR            shift and go to state 22

    condicion                      shift and go to state 7
    cuerpo                         shift and go to state 185
    sentencia                      shift and go to state 186
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    compmiembro                    shift and go to state 25
    printType                      shift and go to state 26
    termino                        shift and go to state 33
    factor                         shift and go to state 39

state 167

    (117) for -> FOR APAR APAR ID . COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> FOR APAR APAR ID . COMA ID CPAR IN ID CPAR cuerpo

    COMA            shift and go to state 188


state 168

    (109) for -> FOR APAR ID IN . ID CPAR cuerpo
    (111) for -> FOR APAR ID IN . ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> FOR APAR ID IN . ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> FOR APAR ID IN . ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> FOR APAR ID IN . ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> FOR APAR ID IN . ID PUNTO INDICES CPAR cuerpo
    (116) for -> FOR APAR ID IN . ID PUNTO ID CPAR cuerpo

    ID              shift and go to state 189
    ENTEROEXPRESION shift and go to state 190


state 169

    (110) for -> FOR APAR ID DOSPUNTOS . INT IN ID CPAR cuerpo

    INT             shift and go to state 191


state 170

    (119) while -> WHILE APAR condicion CPAR . cuerpo
    (105) cuerpo -> . sentencia
    (106) cuerpo -> . ALLAVE sentencia CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion
    (40) valor -> . ENTEROEXPRESION
    (41) valor -> . flotante
    (42) valor -> . expresionBooleano
    (43) valor -> . CADENAEXPRESION
    (44) valor -> . list
    (45) valor -> . set
    (46) valor -> . pair
    (47) valor -> . triple
    (48) valor -> . expresion
    (49) valor -> . ID
    (50) valor -> . if
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (102) control -> . if
    (103) control -> . for
    (104) control -> . while
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR error CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (51) expresionBooleano -> . TRUE
    (52) expresionBooleano -> . FALSE
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (57) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (58) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (107) if -> . IF APAR condicion CPAR cuerpo
    (108) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (109) for -> . FOR APAR ID IN ID CPAR cuerpo
    (110) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (119) while -> . WHILE APAR condicion CPAR cuerpo
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (16) printType -> . PRINT
    (17) printType -> . PRINTLN
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 187
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    CADENAEXPRESION shift and go to state 15
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30
    PAIR            shift and go to state 31
    TRIPLE          shift and go to state 32
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    APAR            shift and go to state 22

    condicion                      shift and go to state 7
    cuerpo                         shift and go to state 192
    sentencia                      shift and go to state 186
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    compmiembro                    shift and go to state 25
    printType                      shift and go to state 26
    termino                        shift and go to state 33
    factor                         shift and go to state 39

state 171

    (36) tipoDato -> LIST MENOR . tipoDato MAYOR
    (32) tipoDato -> . INT
    (33) tipoDato -> . FLOAT
    (34) tipoDato -> . BOOLEAN
    (35) tipoDato -> . STRING
    (36) tipoDato -> . LIST MENOR tipoDato MAYOR
    (37) tipoDato -> . SET MENOR tipoDato MAYOR
    (38) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (39) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    BOOLEAN         shift and go to state 142
    STRING          shift and go to state 143
    LIST            shift and go to state 144
    SET             shift and go to state 145
    PAIR            shift and go to state 146
    TRIPLE          shift and go to state 147

    tipoDato                       shift and go to state 193

state 172

    (37) tipoDato -> SET MENOR . tipoDato MAYOR
    (32) tipoDato -> . INT
    (33) tipoDato -> . FLOAT
    (34) tipoDato -> . BOOLEAN
    (35) tipoDato -> . STRING
    (36) tipoDato -> . LIST MENOR tipoDato MAYOR
    (37) tipoDato -> . SET MENOR tipoDato MAYOR
    (38) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (39) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    BOOLEAN         shift and go to state 142
    STRING          shift and go to state 143
    LIST            shift and go to state 144
    SET             shift and go to state 145
    PAIR            shift and go to state 146
    TRIPLE          shift and go to state 147

    tipoDato                       shift and go to state 194

state 173

    (38) tipoDato -> PAIR MENOR . tipoDato COMA tipoDato MAYOR
    (32) tipoDato -> . INT
    (33) tipoDato -> . FLOAT
    (34) tipoDato -> . BOOLEAN
    (35) tipoDato -> . STRING
    (36) tipoDato -> . LIST MENOR tipoDato MAYOR
    (37) tipoDato -> . SET MENOR tipoDato MAYOR
    (38) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (39) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    BOOLEAN         shift and go to state 142
    STRING          shift and go to state 143
    LIST            shift and go to state 144
    SET             shift and go to state 145
    PAIR            shift and go to state 146
    TRIPLE          shift and go to state 147

    tipoDato                       shift and go to state 195

state 174

    (39) tipoDato -> TRIPLE MENOR . tipoDato COMA tipoDato COMA tipoDato MAYOR
    (32) tipoDato -> . INT
    (33) tipoDato -> . FLOAT
    (34) tipoDato -> . BOOLEAN
    (35) tipoDato -> . STRING
    (36) tipoDato -> . LIST MENOR tipoDato MAYOR
    (37) tipoDato -> . SET MENOR tipoDato MAYOR
    (38) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (39) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    BOOLEAN         shift and go to state 142
    STRING          shift and go to state 143
    LIST            shift and go to state 144
    SET             shift and go to state 145
    PAIR            shift and go to state 146
    TRIPLE          shift and go to state 147

    tipoDato                       shift and go to state 196

state 175

    (22) funcion -> ID PUNTO CONTAINS APAR ID . CPAR
    (81) factor -> ID .

  ! shift/reduce conflict for CPAR resolved as shift
    CPAR            shift and go to state 197

  ! CPAR            [ reduce using rule 81 (factor -> ID .) ]


state 176

    (21) funcion -> ID PUNTO CONTAINS APAR factorEspecial . CPAR

    CPAR            shift and go to state 198


state 177

    (23) funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION . CPAR

    CPAR            shift and go to state 199


state 178

    (18) funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION . CPAR

    CPAR            shift and go to state 200


state 179

    (19) funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION . CPAR

    CPAR            shift and go to state 201


state 180

    (20) funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .

    PUNTOCOMA       reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    VAL             reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    VAR             reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    ID              reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    ENTEROEXPRESION reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    CADENAEXPRESION reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    TRUE            reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    FALSE           reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    LISTOF          reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    SETOF           reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    PAIR            reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    TRIPLE          reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    IF              reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    FOR             reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    WHILE           reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    PRINT           reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    PRINTLN         reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    APAR            reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    $end            reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    IGUALIGUAL      reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    TRIPLEIGUAL     reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    NOIGUAL         reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    MAYOR           reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    MENOR           reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    MAYORIGUAL      reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    MENORIGUAL      reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    ELSE            reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    AND             reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    OR              reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    CPAR            reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    CLLAVE          reduce using rule 20 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)


state 181

    (101) condicion -> compmiembro comparador compmiembro conector compmiembro . comparador compmiembro
    (87) comparador -> . IGUALIGUAL
    (88) comparador -> . TRIPLEIGUAL
    (89) comparador -> . NOIGUAL
    (90) comparador -> . MAYOR
    (91) comparador -> . MENOR
    (92) comparador -> . MAYORIGUAL
    (93) comparador -> . MENORIGUAL

    IGUALIGUAL      shift and go to state 63
    TRIPLEIGUAL     shift and go to state 64
    NOIGUAL         shift and go to state 65
    MAYOR           shift and go to state 66
    MENOR           shift and go to state 67
    MAYORIGUAL      shift and go to state 68
    MENORIGUAL      shift and go to state 69

    comparador                     shift and go to state 202

state 182

    (60) contenido -> factorEspecial COMA contenido .

    CPAR            reduce using rule 60 (contenido -> factorEspecial COMA contenido .)


state 183

    (57) pair -> PAIR APAR factorEspecial COMA factorEspecial . CPAR

    CPAR            shift and go to state 203


state 184

    (58) triple -> TRIPLE APAR factorEspecial COMA factorEspecial . COMA factorEspecial CPAR

    COMA            shift and go to state 204


state 185

    (107) if -> IF APAR condicion CPAR cuerpo .
    (108) if -> IF APAR condicion CPAR cuerpo . ELSE cuerpo

  ! shift/reduce conflict for ELSE resolved as shift
    PUNTOCOMA       reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    VAL             reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    VAR             reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    ID              reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    CADENAEXPRESION reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    TRUE            reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    FALSE           reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    LISTOF          reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    SETOF           reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    PAIR            reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    TRIPLE          reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    IF              reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    FOR             reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    WHILE           reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    PRINT           reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    PRINTLN         reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    APAR            reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    $end            reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    IGUALIGUAL      reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    TRIPLEIGUAL     reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    NOIGUAL         reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    MAYOR           reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    MENOR           reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    MAYORIGUAL      reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    MENORIGUAL      reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    AND             reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    OR              reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    CPAR            reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    CLLAVE          reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .)
    ELSE            shift and go to state 205

  ! ELSE            [ reduce using rule 107 (if -> IF APAR condicion CPAR cuerpo .) ]


state 186

    (105) cuerpo -> sentencia .

    PUNTOCOMA       reduce using rule 105 (cuerpo -> sentencia .)
    VAL             reduce using rule 105 (cuerpo -> sentencia .)
    VAR             reduce using rule 105 (cuerpo -> sentencia .)
    ID              reduce using rule 105 (cuerpo -> sentencia .)
    ENTEROEXPRESION reduce using rule 105 (cuerpo -> sentencia .)
    CADENAEXPRESION reduce using rule 105 (cuerpo -> sentencia .)
    TRUE            reduce using rule 105 (cuerpo -> sentencia .)
    FALSE           reduce using rule 105 (cuerpo -> sentencia .)
    LISTOF          reduce using rule 105 (cuerpo -> sentencia .)
    SETOF           reduce using rule 105 (cuerpo -> sentencia .)
    PAIR            reduce using rule 105 (cuerpo -> sentencia .)
    TRIPLE          reduce using rule 105 (cuerpo -> sentencia .)
    IF              reduce using rule 105 (cuerpo -> sentencia .)
    FOR             reduce using rule 105 (cuerpo -> sentencia .)
    WHILE           reduce using rule 105 (cuerpo -> sentencia .)
    PRINT           reduce using rule 105 (cuerpo -> sentencia .)
    PRINTLN         reduce using rule 105 (cuerpo -> sentencia .)
    APAR            reduce using rule 105 (cuerpo -> sentencia .)
    $end            reduce using rule 105 (cuerpo -> sentencia .)
    IGUALIGUAL      reduce using rule 105 (cuerpo -> sentencia .)
    TRIPLEIGUAL     reduce using rule 105 (cuerpo -> sentencia .)
    NOIGUAL         reduce using rule 105 (cuerpo -> sentencia .)
    MAYOR           reduce using rule 105 (cuerpo -> sentencia .)
    MENOR           reduce using rule 105 (cuerpo -> sentencia .)
    MAYORIGUAL      reduce using rule 105 (cuerpo -> sentencia .)
    MENORIGUAL      reduce using rule 105 (cuerpo -> sentencia .)
    ELSE            reduce using rule 105 (cuerpo -> sentencia .)
    AND             reduce using rule 105 (cuerpo -> sentencia .)
    OR              reduce using rule 105 (cuerpo -> sentencia .)
    CPAR            reduce using rule 105 (cuerpo -> sentencia .)
    CLLAVE          reduce using rule 105 (cuerpo -> sentencia .)


state 187

    (106) cuerpo -> ALLAVE . sentencia CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion
    (40) valor -> . ENTEROEXPRESION
    (41) valor -> . flotante
    (42) valor -> . expresionBooleano
    (43) valor -> . CADENAEXPRESION
    (44) valor -> . list
    (45) valor -> . set
    (46) valor -> . pair
    (47) valor -> . triple
    (48) valor -> . expresion
    (49) valor -> . ID
    (50) valor -> . if
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (102) control -> . if
    (103) control -> . for
    (104) control -> . while
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR error CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (51) expresionBooleano -> . TRUE
    (52) expresionBooleano -> . FALSE
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (57) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (58) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (107) if -> . IF APAR condicion CPAR cuerpo
    (108) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (109) for -> . FOR APAR ID IN ID CPAR cuerpo
    (110) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (119) while -> . WHILE APAR condicion CPAR cuerpo
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (16) printType -> . PRINT
    (17) printType -> . PRINTLN
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR

    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    CADENAEXPRESION shift and go to state 15
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30
    PAIR            shift and go to state 31
    TRIPLE          shift and go to state 32
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    APAR            shift and go to state 22

    sentencia                      shift and go to state 206
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    compmiembro                    shift and go to state 25
    printType                      shift and go to state 26
    termino                        shift and go to state 33
    factor                         shift and go to state 39

state 188

    (117) for -> FOR APAR APAR ID COMA . ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> FOR APAR APAR ID COMA . ID CPAR IN ID CPAR cuerpo

    ID              shift and go to state 207


state 189

    (109) for -> FOR APAR ID IN ID . CPAR cuerpo
    (115) for -> FOR APAR ID IN ID . PUNTO INDICES CPAR cuerpo
    (116) for -> FOR APAR ID IN ID . PUNTO ID CPAR cuerpo

    CPAR            shift and go to state 208
    PUNTO           shift and go to state 209


state 190

    (111) for -> FOR APAR ID IN ENTEROEXPRESION . PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> FOR APAR ID IN ENTEROEXPRESION . UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> FOR APAR ID IN ENTEROEXPRESION . UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> FOR APAR ID IN ENTEROEXPRESION . DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo

    PUNTOPUNTO      shift and go to state 210
    UNTIL           shift and go to state 211
    DOWNTO          shift and go to state 212


state 191

    (110) for -> FOR APAR ID DOSPUNTOS INT . IN ID CPAR cuerpo

    IN              shift and go to state 213


state 192

    (119) while -> WHILE APAR condicion CPAR cuerpo .

    PUNTOCOMA       reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    VAL             reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    VAR             reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    ID              reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    CADENAEXPRESION reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    TRUE            reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    FALSE           reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    LISTOF          reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    SETOF           reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    PAIR            reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    TRIPLE          reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    IF              reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    FOR             reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    WHILE           reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    PRINT           reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    PRINTLN         reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    APAR            reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    $end            reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    IGUALIGUAL      reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    TRIPLEIGUAL     reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    NOIGUAL         reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    MAYOR           reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    MENOR           reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    MAYORIGUAL      reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    MENORIGUAL      reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    ELSE            reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    AND             reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    OR              reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    CPAR            reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)
    CLLAVE          reduce using rule 119 (while -> WHILE APAR condicion CPAR cuerpo .)


state 193

    (36) tipoDato -> LIST MENOR tipoDato . MAYOR

    MAYOR           shift and go to state 214


state 194

    (37) tipoDato -> SET MENOR tipoDato . MAYOR

    MAYOR           shift and go to state 215


state 195

    (38) tipoDato -> PAIR MENOR tipoDato . COMA tipoDato MAYOR

    COMA            shift and go to state 216


state 196

    (39) tipoDato -> TRIPLE MENOR tipoDato . COMA tipoDato COMA tipoDato MAYOR

    COMA            shift and go to state 217


state 197

    (22) funcion -> ID PUNTO CONTAINS APAR ID CPAR .

    PUNTOCOMA       reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    VAL             reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    VAR             reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    ID              reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    ENTEROEXPRESION reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    CADENAEXPRESION reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    TRUE            reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    FALSE           reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    LISTOF          reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    SETOF           reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    PAIR            reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    TRIPLE          reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    IF              reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    FOR             reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    WHILE           reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    PRINT           reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    PRINTLN         reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    APAR            reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    $end            reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    IGUALIGUAL      reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    TRIPLEIGUAL     reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    NOIGUAL         reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    MAYOR           reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    MENOR           reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    MAYORIGUAL      reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    MENORIGUAL      reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    ELSE            reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    AND             reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    OR              reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    CPAR            reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    CLLAVE          reduce using rule 22 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)


state 198

    (21) funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .

    PUNTOCOMA       reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    VAL             reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    VAR             reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    ID              reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    ENTEROEXPRESION reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    CADENAEXPRESION reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    TRUE            reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    FALSE           reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    LISTOF          reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    SETOF           reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    PAIR            reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    TRIPLE          reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    IF              reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    FOR             reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    WHILE           reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    PRINT           reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    PRINTLN         reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    APAR            reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    $end            reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    IGUALIGUAL      reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    TRIPLEIGUAL     reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    NOIGUAL         reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    MAYOR           reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    MENOR           reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    MAYORIGUAL      reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    MENORIGUAL      reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    ELSE            reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    AND             reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    OR              reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    CPAR            reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    CLLAVE          reduce using rule 21 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)


state 199

    (23) funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .

    PUNTOCOMA       reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    VAL             reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    VAR             reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    ID              reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    ENTEROEXPRESION reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    CADENAEXPRESION reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    TRUE            reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    FALSE           reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    LISTOF          reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    SETOF           reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    PAIR            reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    TRIPLE          reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    IF              reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    FOR             reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    WHILE           reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    PRINT           reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    PRINTLN         reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    APAR            reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    $end            reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    IGUALIGUAL      reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    TRIPLEIGUAL     reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    NOIGUAL         reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    MAYOR           reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    MENOR           reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    MAYORIGUAL      reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    MENORIGUAL      reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    ELSE            reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    AND             reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    OR              reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    CPAR            reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    CLLAVE          reduce using rule 23 (funcion -> ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)


state 200

    (18) funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .

    PUNTOCOMA       reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    VAL             reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    VAR             reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    ID              reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    ENTEROEXPRESION reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    CADENAEXPRESION reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    TRUE            reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    FALSE           reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    LISTOF          reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    SETOF           reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    PAIR            reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    TRIPLE          reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    IF              reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    FOR             reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    WHILE           reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    PRINT           reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    PRINTLN         reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    APAR            reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    $end            reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    IGUALIGUAL      reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    TRIPLEIGUAL     reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    NOIGUAL         reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    MAYOR           reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    MENOR           reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    MAYORIGUAL      reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    MENORIGUAL      reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    ELSE            reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    AND             reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    OR              reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    CPAR            reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    CLLAVE          reduce using rule 18 (funcion -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)


state 201

    (19) funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .

    PUNTOCOMA       reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    VAL             reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    VAR             reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    ID              reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    ENTEROEXPRESION reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    CADENAEXPRESION reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    TRUE            reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    FALSE           reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    LISTOF          reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    SETOF           reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    PAIR            reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    TRIPLE          reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    IF              reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    FOR             reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    WHILE           reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    PRINT           reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    PRINTLN         reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    APAR            reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    $end            reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    IGUALIGUAL      reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    TRIPLEIGUAL     reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    NOIGUAL         reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    MAYOR           reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    MENOR           reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    MAYORIGUAL      reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    MENORIGUAL      reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    ELSE            reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    AND             reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    OR              reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    CPAR            reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)
    CLLAVE          reduce using rule 19 (funcion -> CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR .)


state 202

    (101) condicion -> compmiembro comparador compmiembro conector compmiembro comparador . compmiembro
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion

    ID              shift and go to state 107
    ENTEROEXPRESION shift and go to state 108
    CADENAEXPRESION shift and go to state 111
    VAL             shift and go to state 9
    VAR             shift and go to state 11

    compmiembro                    shift and go to state 218
    funcion                        shift and go to state 109
    asignacion                     shift and go to state 110

state 203

    (57) pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .

    PUNTOCOMA       reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    VAL             reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    VAR             reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    ID              reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    ENTEROEXPRESION reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    CADENAEXPRESION reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    TRUE            reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    FALSE           reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    LISTOF          reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    SETOF           reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    PAIR            reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    TRIPLE          reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    IF              reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    FOR             reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    WHILE           reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    PRINT           reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    PRINTLN         reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    APAR            reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    $end            reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    IGUALIGUAL      reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    TRIPLEIGUAL     reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    NOIGUAL         reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    MAYOR           reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    MENOR           reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    MAYORIGUAL      reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    MENORIGUAL      reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    ELSE            reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    AND             reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    OR              reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    CPAR            reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    CLLAVE          reduce using rule 57 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)


state 204

    (58) triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA . factorEspecial CPAR
    (82) factorEspecial -> . factor
    (83) factorEspecial -> . CADENAEXPRESION
    (84) factorEspecial -> . list
    (85) factorEspecial -> . set
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 120
    ENTEROEXPRESION shift and go to state 123
    ID              shift and go to state 125
    APAR            shift and go to state 22
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    factorEspecial                 shift and go to state 219
    factor                         shift and go to state 119
    list                           shift and go to state 121
    set                            shift and go to state 122
    flotante                       shift and go to state 124

state 205

    (108) if -> IF APAR condicion CPAR cuerpo ELSE . cuerpo
    (105) cuerpo -> . sentencia
    (106) cuerpo -> . ALLAVE sentencia CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion
    (40) valor -> . ENTEROEXPRESION
    (41) valor -> . flotante
    (42) valor -> . expresionBooleano
    (43) valor -> . CADENAEXPRESION
    (44) valor -> . list
    (45) valor -> . set
    (46) valor -> . pair
    (47) valor -> . triple
    (48) valor -> . expresion
    (49) valor -> . ID
    (50) valor -> . if
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (102) control -> . if
    (103) control -> . for
    (104) control -> . while
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR error CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (51) expresionBooleano -> . TRUE
    (52) expresionBooleano -> . FALSE
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (57) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (58) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (107) if -> . IF APAR condicion CPAR cuerpo
    (108) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (109) for -> . FOR APAR ID IN ID CPAR cuerpo
    (110) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (119) while -> . WHILE APAR condicion CPAR cuerpo
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (16) printType -> . PRINT
    (17) printType -> . PRINTLN
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 187
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    CADENAEXPRESION shift and go to state 15
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30
    PAIR            shift and go to state 31
    TRIPLE          shift and go to state 32
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    APAR            shift and go to state 22

    condicion                      shift and go to state 7
    cuerpo                         shift and go to state 220
    sentencia                      shift and go to state 186
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    compmiembro                    shift and go to state 25
    printType                      shift and go to state 26
    termino                        shift and go to state 33
    factor                         shift and go to state 39

state 206

    (106) cuerpo -> ALLAVE sentencia . CLLAVE

    CLLAVE          shift and go to state 221


state 207

    (117) for -> FOR APAR APAR ID COMA ID . CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> FOR APAR APAR ID COMA ID . CPAR IN ID CPAR cuerpo

    CPAR            shift and go to state 222


state 208

    (109) for -> FOR APAR ID IN ID CPAR . cuerpo
    (105) cuerpo -> . sentencia
    (106) cuerpo -> . ALLAVE sentencia CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion
    (40) valor -> . ENTEROEXPRESION
    (41) valor -> . flotante
    (42) valor -> . expresionBooleano
    (43) valor -> . CADENAEXPRESION
    (44) valor -> . list
    (45) valor -> . set
    (46) valor -> . pair
    (47) valor -> . triple
    (48) valor -> . expresion
    (49) valor -> . ID
    (50) valor -> . if
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (102) control -> . if
    (103) control -> . for
    (104) control -> . while
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR error CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (51) expresionBooleano -> . TRUE
    (52) expresionBooleano -> . FALSE
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (57) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (58) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (107) if -> . IF APAR condicion CPAR cuerpo
    (108) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (109) for -> . FOR APAR ID IN ID CPAR cuerpo
    (110) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (119) while -> . WHILE APAR condicion CPAR cuerpo
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (16) printType -> . PRINT
    (17) printType -> . PRINTLN
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 187
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    CADENAEXPRESION shift and go to state 15
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30
    PAIR            shift and go to state 31
    TRIPLE          shift and go to state 32
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    APAR            shift and go to state 22

    cuerpo                         shift and go to state 223
    sentencia                      shift and go to state 186
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    compmiembro                    shift and go to state 25
    printType                      shift and go to state 26
    termino                        shift and go to state 33
    factor                         shift and go to state 39

state 209

    (115) for -> FOR APAR ID IN ID PUNTO . INDICES CPAR cuerpo
    (116) for -> FOR APAR ID IN ID PUNTO . ID CPAR cuerpo

    INDICES         shift and go to state 225
    ID              shift and go to state 224


state 210

    (111) for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO . ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 226


state 211

    (112) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL . ENTEROEXPRESION CPAR cuerpo
    (113) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL . ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 227


state 212

    (114) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO . ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 228


state 213

    (110) for -> FOR APAR ID DOSPUNTOS INT IN . ID CPAR cuerpo

    ID              shift and go to state 229


state 214

    (36) tipoDato -> LIST MENOR tipoDato MAYOR .

    IGUAL           reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    PUNTOCOMA       reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    VAL             reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    VAR             reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    ID              reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    ENTEROEXPRESION reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    CADENAEXPRESION reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    TRUE            reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    FALSE           reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    LISTOF          reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    SETOF           reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    PAIR            reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    TRIPLE          reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    IF              reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    FOR             reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    WHILE           reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    PRINT           reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    PRINTLN         reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    APAR            reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    $end            reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    IGUALIGUAL      reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    TRIPLEIGUAL     reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    NOIGUAL         reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    MAYOR           reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    MENOR           reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    MAYORIGUAL      reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    MENORIGUAL      reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    ELSE            reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    AND             reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    OR              reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    CPAR            reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    CLLAVE          reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    COMA            reduce using rule 36 (tipoDato -> LIST MENOR tipoDato MAYOR .)


state 215

    (37) tipoDato -> SET MENOR tipoDato MAYOR .

    IGUAL           reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    PUNTOCOMA       reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    VAL             reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    VAR             reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    ID              reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    ENTEROEXPRESION reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    CADENAEXPRESION reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    TRUE            reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    FALSE           reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    LISTOF          reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    SETOF           reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    PAIR            reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    TRIPLE          reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    IF              reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    FOR             reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    WHILE           reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    PRINT           reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    PRINTLN         reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    APAR            reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    $end            reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    IGUALIGUAL      reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    TRIPLEIGUAL     reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    NOIGUAL         reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    MAYOR           reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    MENOR           reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    MAYORIGUAL      reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    MENORIGUAL      reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    ELSE            reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    AND             reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    OR              reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    CPAR            reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    CLLAVE          reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)
    COMA            reduce using rule 37 (tipoDato -> SET MENOR tipoDato MAYOR .)


state 216

    (38) tipoDato -> PAIR MENOR tipoDato COMA . tipoDato MAYOR
    (32) tipoDato -> . INT
    (33) tipoDato -> . FLOAT
    (34) tipoDato -> . BOOLEAN
    (35) tipoDato -> . STRING
    (36) tipoDato -> . LIST MENOR tipoDato MAYOR
    (37) tipoDato -> . SET MENOR tipoDato MAYOR
    (38) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (39) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    BOOLEAN         shift and go to state 142
    STRING          shift and go to state 143
    LIST            shift and go to state 144
    SET             shift and go to state 145
    PAIR            shift and go to state 146
    TRIPLE          shift and go to state 147

    tipoDato                       shift and go to state 230

state 217

    (39) tipoDato -> TRIPLE MENOR tipoDato COMA . tipoDato COMA tipoDato MAYOR
    (32) tipoDato -> . INT
    (33) tipoDato -> . FLOAT
    (34) tipoDato -> . BOOLEAN
    (35) tipoDato -> . STRING
    (36) tipoDato -> . LIST MENOR tipoDato MAYOR
    (37) tipoDato -> . SET MENOR tipoDato MAYOR
    (38) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (39) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    BOOLEAN         shift and go to state 142
    STRING          shift and go to state 143
    LIST            shift and go to state 144
    SET             shift and go to state 145
    PAIR            shift and go to state 146
    TRIPLE          shift and go to state 147

    tipoDato                       shift and go to state 231

state 218

    (101) condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .

    PUNTOCOMA       reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    VAL             reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    VAR             reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    ID              reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    ENTEROEXPRESION reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    CADENAEXPRESION reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    TRUE            reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    FALSE           reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    LISTOF          reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    SETOF           reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    PAIR            reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    TRIPLE          reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    IF              reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    FOR             reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    WHILE           reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    PRINT           reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    PRINTLN         reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    APAR            reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    $end            reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    CPAR            reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    IGUALIGUAL      reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    TRIPLEIGUAL     reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    NOIGUAL         reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    MAYOR           reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    MENOR           reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    MAYORIGUAL      reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    MENORIGUAL      reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    ELSE            reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    AND             reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    OR              reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    CLLAVE          reduce using rule 101 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)


state 219

    (58) triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial . CPAR

    CPAR            shift and go to state 232


state 220

    (108) if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .

    PUNTOCOMA       reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    VAL             reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    VAR             reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    ID              reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    ENTEROEXPRESION reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    CADENAEXPRESION reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    TRUE            reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    FALSE           reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    LISTOF          reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    SETOF           reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    PAIR            reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    TRIPLE          reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    IF              reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    FOR             reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    WHILE           reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    PRINT           reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    PRINTLN         reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    APAR            reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    $end            reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    IGUALIGUAL      reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    TRIPLEIGUAL     reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    NOIGUAL         reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    MAYOR           reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    MENOR           reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    MAYORIGUAL      reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    MENORIGUAL      reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    ELSE            reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    AND             reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    OR              reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    CPAR            reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    CLLAVE          reduce using rule 108 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)


state 221

    (106) cuerpo -> ALLAVE sentencia CLLAVE .

    PUNTOCOMA       reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    VAL             reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    VAR             reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    ID              reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    ENTEROEXPRESION reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    CADENAEXPRESION reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    TRUE            reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    FALSE           reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    LISTOF          reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    SETOF           reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    PAIR            reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    TRIPLE          reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    IF              reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    FOR             reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    WHILE           reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    PRINT           reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    PRINTLN         reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    APAR            reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    $end            reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    IGUALIGUAL      reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    TRIPLEIGUAL     reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    NOIGUAL         reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    MAYOR           reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    MENOR           reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    MAYORIGUAL      reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    MENORIGUAL      reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    ELSE            reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    AND             reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    OR              reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    CPAR            reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)
    CLLAVE          reduce using rule 106 (cuerpo -> ALLAVE sentencia CLLAVE .)


state 222

    (117) for -> FOR APAR APAR ID COMA ID CPAR . IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> FOR APAR APAR ID COMA ID CPAR . IN ID CPAR cuerpo

    IN              shift and go to state 233


state 223

    (109) for -> FOR APAR ID IN ID CPAR cuerpo .

    PUNTOCOMA       reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    VAL             reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    VAR             reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    ID              reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    CADENAEXPRESION reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    TRUE            reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    FALSE           reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    LISTOF          reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    SETOF           reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    PAIR            reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    TRIPLE          reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    IF              reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    FOR             reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    WHILE           reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    PRINT           reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    PRINTLN         reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    APAR            reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    $end            reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    IGUALIGUAL      reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    TRIPLEIGUAL     reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    NOIGUAL         reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    MAYOR           reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    MENOR           reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    MAYORIGUAL      reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    MENORIGUAL      reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    ELSE            reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    AND             reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    OR              reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    CPAR            reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    CLLAVE          reduce using rule 109 (for -> FOR APAR ID IN ID CPAR cuerpo .)


state 224

    (116) for -> FOR APAR ID IN ID PUNTO ID . CPAR cuerpo

    CPAR            shift and go to state 234


state 225

    (115) for -> FOR APAR ID IN ID PUNTO INDICES . CPAR cuerpo

    CPAR            shift and go to state 235


state 226

    (111) for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION . CPAR cuerpo

    CPAR            shift and go to state 236


state 227

    (112) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION . CPAR cuerpo
    (113) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION . STEP ENTEROEXPRESION CPAR cuerpo

    CPAR            shift and go to state 237
    STEP            shift and go to state 238


state 228

    (114) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION . STEP ENTEROEXPRESION CPAR cuerpo

    STEP            shift and go to state 239


state 229

    (110) for -> FOR APAR ID DOSPUNTOS INT IN ID . CPAR cuerpo

    CPAR            shift and go to state 240


state 230

    (38) tipoDato -> PAIR MENOR tipoDato COMA tipoDato . MAYOR

    MAYOR           shift and go to state 241


state 231

    (39) tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato . COMA tipoDato MAYOR

    COMA            shift and go to state 242


state 232

    (58) triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .

    PUNTOCOMA       reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    VAL             reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    VAR             reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    ID              reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    ENTEROEXPRESION reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    CADENAEXPRESION reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    TRUE            reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    FALSE           reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    LISTOF          reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    SETOF           reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    PAIR            reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    TRIPLE          reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    IF              reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    FOR             reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    WHILE           reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    PRINT           reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    PRINTLN         reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    APAR            reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    $end            reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    IGUALIGUAL      reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    TRIPLEIGUAL     reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    NOIGUAL         reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    MAYOR           reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    MENOR           reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    MAYORIGUAL      reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    MENORIGUAL      reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    ELSE            reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    AND             reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    OR              reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    CPAR            reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    CLLAVE          reduce using rule 58 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)


state 233

    (117) for -> FOR APAR APAR ID COMA ID CPAR IN . ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> FOR APAR APAR ID COMA ID CPAR IN . ID CPAR cuerpo

    ID              shift and go to state 243


state 234

    (116) for -> FOR APAR ID IN ID PUNTO ID CPAR . cuerpo
    (105) cuerpo -> . sentencia
    (106) cuerpo -> . ALLAVE sentencia CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion
    (40) valor -> . ENTEROEXPRESION
    (41) valor -> . flotante
    (42) valor -> . expresionBooleano
    (43) valor -> . CADENAEXPRESION
    (44) valor -> . list
    (45) valor -> . set
    (46) valor -> . pair
    (47) valor -> . triple
    (48) valor -> . expresion
    (49) valor -> . ID
    (50) valor -> . if
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (102) control -> . if
    (103) control -> . for
    (104) control -> . while
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR error CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (51) expresionBooleano -> . TRUE
    (52) expresionBooleano -> . FALSE
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (57) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (58) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (107) if -> . IF APAR condicion CPAR cuerpo
    (108) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (109) for -> . FOR APAR ID IN ID CPAR cuerpo
    (110) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (119) while -> . WHILE APAR condicion CPAR cuerpo
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (16) printType -> . PRINT
    (17) printType -> . PRINTLN
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 187
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    CADENAEXPRESION shift and go to state 15
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30
    PAIR            shift and go to state 31
    TRIPLE          shift and go to state 32
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    APAR            shift and go to state 22

    cuerpo                         shift and go to state 244
    sentencia                      shift and go to state 186
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    compmiembro                    shift and go to state 25
    printType                      shift and go to state 26
    termino                        shift and go to state 33
    factor                         shift and go to state 39

state 235

    (115) for -> FOR APAR ID IN ID PUNTO INDICES CPAR . cuerpo
    (105) cuerpo -> . sentencia
    (106) cuerpo -> . ALLAVE sentencia CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion
    (40) valor -> . ENTEROEXPRESION
    (41) valor -> . flotante
    (42) valor -> . expresionBooleano
    (43) valor -> . CADENAEXPRESION
    (44) valor -> . list
    (45) valor -> . set
    (46) valor -> . pair
    (47) valor -> . triple
    (48) valor -> . expresion
    (49) valor -> . ID
    (50) valor -> . if
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (102) control -> . if
    (103) control -> . for
    (104) control -> . while
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR error CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (51) expresionBooleano -> . TRUE
    (52) expresionBooleano -> . FALSE
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (57) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (58) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (107) if -> . IF APAR condicion CPAR cuerpo
    (108) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (109) for -> . FOR APAR ID IN ID CPAR cuerpo
    (110) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (119) while -> . WHILE APAR condicion CPAR cuerpo
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (16) printType -> . PRINT
    (17) printType -> . PRINTLN
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 187
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    CADENAEXPRESION shift and go to state 15
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30
    PAIR            shift and go to state 31
    TRIPLE          shift and go to state 32
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    APAR            shift and go to state 22

    cuerpo                         shift and go to state 245
    sentencia                      shift and go to state 186
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    compmiembro                    shift and go to state 25
    printType                      shift and go to state 26
    termino                        shift and go to state 33
    factor                         shift and go to state 39

state 236

    (111) for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR . cuerpo
    (105) cuerpo -> . sentencia
    (106) cuerpo -> . ALLAVE sentencia CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion
    (40) valor -> . ENTEROEXPRESION
    (41) valor -> . flotante
    (42) valor -> . expresionBooleano
    (43) valor -> . CADENAEXPRESION
    (44) valor -> . list
    (45) valor -> . set
    (46) valor -> . pair
    (47) valor -> . triple
    (48) valor -> . expresion
    (49) valor -> . ID
    (50) valor -> . if
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (102) control -> . if
    (103) control -> . for
    (104) control -> . while
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR error CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (51) expresionBooleano -> . TRUE
    (52) expresionBooleano -> . FALSE
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (57) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (58) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (107) if -> . IF APAR condicion CPAR cuerpo
    (108) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (109) for -> . FOR APAR ID IN ID CPAR cuerpo
    (110) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (119) while -> . WHILE APAR condicion CPAR cuerpo
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (16) printType -> . PRINT
    (17) printType -> . PRINTLN
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 187
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    CADENAEXPRESION shift and go to state 15
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30
    PAIR            shift and go to state 31
    TRIPLE          shift and go to state 32
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    APAR            shift and go to state 22

    cuerpo                         shift and go to state 246
    sentencia                      shift and go to state 186
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    compmiembro                    shift and go to state 25
    printType                      shift and go to state 26
    termino                        shift and go to state 33
    factor                         shift and go to state 39

state 237

    (112) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR . cuerpo
    (105) cuerpo -> . sentencia
    (106) cuerpo -> . ALLAVE sentencia CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion
    (40) valor -> . ENTEROEXPRESION
    (41) valor -> . flotante
    (42) valor -> . expresionBooleano
    (43) valor -> . CADENAEXPRESION
    (44) valor -> . list
    (45) valor -> . set
    (46) valor -> . pair
    (47) valor -> . triple
    (48) valor -> . expresion
    (49) valor -> . ID
    (50) valor -> . if
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (102) control -> . if
    (103) control -> . for
    (104) control -> . while
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR error CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (51) expresionBooleano -> . TRUE
    (52) expresionBooleano -> . FALSE
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (57) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (58) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (107) if -> . IF APAR condicion CPAR cuerpo
    (108) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (109) for -> . FOR APAR ID IN ID CPAR cuerpo
    (110) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (119) while -> . WHILE APAR condicion CPAR cuerpo
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (16) printType -> . PRINT
    (17) printType -> . PRINTLN
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 187
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    CADENAEXPRESION shift and go to state 15
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30
    PAIR            shift and go to state 31
    TRIPLE          shift and go to state 32
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    APAR            shift and go to state 22

    cuerpo                         shift and go to state 247
    sentencia                      shift and go to state 186
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    compmiembro                    shift and go to state 25
    printType                      shift and go to state 26
    termino                        shift and go to state 33
    factor                         shift and go to state 39

state 238

    (113) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP . ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 248


state 239

    (114) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP . ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 249


state 240

    (110) for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR . cuerpo
    (105) cuerpo -> . sentencia
    (106) cuerpo -> . ALLAVE sentencia CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion
    (40) valor -> . ENTEROEXPRESION
    (41) valor -> . flotante
    (42) valor -> . expresionBooleano
    (43) valor -> . CADENAEXPRESION
    (44) valor -> . list
    (45) valor -> . set
    (46) valor -> . pair
    (47) valor -> . triple
    (48) valor -> . expresion
    (49) valor -> . ID
    (50) valor -> . if
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (102) control -> . if
    (103) control -> . for
    (104) control -> . while
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR error CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (51) expresionBooleano -> . TRUE
    (52) expresionBooleano -> . FALSE
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (57) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (58) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (107) if -> . IF APAR condicion CPAR cuerpo
    (108) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (109) for -> . FOR APAR ID IN ID CPAR cuerpo
    (110) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (119) while -> . WHILE APAR condicion CPAR cuerpo
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (16) printType -> . PRINT
    (17) printType -> . PRINTLN
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 187
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    CADENAEXPRESION shift and go to state 15
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30
    PAIR            shift and go to state 31
    TRIPLE          shift and go to state 32
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    APAR            shift and go to state 22

    cuerpo                         shift and go to state 250
    sentencia                      shift and go to state 186
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    compmiembro                    shift and go to state 25
    printType                      shift and go to state 26
    termino                        shift and go to state 33
    factor                         shift and go to state 39

state 241

    (38) tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .

    IGUAL           reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    PUNTOCOMA       reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    VAL             reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    VAR             reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    ID              reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    ENTEROEXPRESION reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    CADENAEXPRESION reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    TRUE            reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    FALSE           reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    LISTOF          reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    SETOF           reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    PAIR            reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    TRIPLE          reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    IF              reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    FOR             reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    WHILE           reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    PRINT           reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    PRINTLN         reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    APAR            reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    $end            reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    IGUALIGUAL      reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    TRIPLEIGUAL     reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    NOIGUAL         reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    MAYOR           reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    MENOR           reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    MAYORIGUAL      reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    MENORIGUAL      reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    ELSE            reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    AND             reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    OR              reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    CPAR            reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    CLLAVE          reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    COMA            reduce using rule 38 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)


state 242

    (39) tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA . tipoDato MAYOR
    (32) tipoDato -> . INT
    (33) tipoDato -> . FLOAT
    (34) tipoDato -> . BOOLEAN
    (35) tipoDato -> . STRING
    (36) tipoDato -> . LIST MENOR tipoDato MAYOR
    (37) tipoDato -> . SET MENOR tipoDato MAYOR
    (38) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (39) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    BOOLEAN         shift and go to state 142
    STRING          shift and go to state 143
    LIST            shift and go to state 144
    SET             shift and go to state 145
    PAIR            shift and go to state 146
    TRIPLE          shift and go to state 147

    tipoDato                       shift and go to state 251

state 243

    (117) for -> FOR APAR APAR ID COMA ID CPAR IN ID . PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> FOR APAR APAR ID COMA ID CPAR IN ID . CPAR cuerpo

    PUNTO           shift and go to state 253
    CPAR            shift and go to state 252


state 244

    (116) for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .

    PUNTOCOMA       reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    VAL             reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    VAR             reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    ID              reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    CADENAEXPRESION reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    TRUE            reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    FALSE           reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    LISTOF          reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    SETOF           reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    PAIR            reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    TRIPLE          reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    IF              reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    FOR             reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    WHILE           reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    PRINT           reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    PRINTLN         reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    APAR            reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    $end            reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    IGUALIGUAL      reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    TRIPLEIGUAL     reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    NOIGUAL         reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    MAYOR           reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    MENOR           reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    MAYORIGUAL      reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    MENORIGUAL      reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    ELSE            reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    AND             reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    OR              reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    CPAR            reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    CLLAVE          reduce using rule 116 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)


state 245

    (115) for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .

    PUNTOCOMA       reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    VAL             reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    VAR             reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    ID              reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    CADENAEXPRESION reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    TRUE            reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    FALSE           reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    LISTOF          reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    SETOF           reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    PAIR            reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    TRIPLE          reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    IF              reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    FOR             reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    WHILE           reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    PRINT           reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    PRINTLN         reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    APAR            reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    $end            reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    IGUALIGUAL      reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    TRIPLEIGUAL     reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    NOIGUAL         reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    MAYOR           reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    MENOR           reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    MAYORIGUAL      reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    MENORIGUAL      reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    ELSE            reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    AND             reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    OR              reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    CPAR            reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    CLLAVE          reduce using rule 115 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)


state 246

    (111) for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .

    PUNTOCOMA       reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    VAL             reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    VAR             reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    ID              reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    CADENAEXPRESION reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    TRUE            reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    FALSE           reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    LISTOF          reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    SETOF           reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    PAIR            reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    TRIPLE          reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    IF              reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    FOR             reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    WHILE           reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    PRINT           reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    PRINTLN         reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    APAR            reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    $end            reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    IGUALIGUAL      reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    TRIPLEIGUAL     reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    NOIGUAL         reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    MAYOR           reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    MENOR           reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    MAYORIGUAL      reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    MENORIGUAL      reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    ELSE            reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    AND             reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    OR              reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    CPAR            reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    CLLAVE          reduce using rule 111 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)


state 247

    (112) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .

    PUNTOCOMA       reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    VAL             reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    VAR             reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    ID              reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    CADENAEXPRESION reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    TRUE            reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    FALSE           reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    LISTOF          reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    SETOF           reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    PAIR            reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    TRIPLE          reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    IF              reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    FOR             reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    WHILE           reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    PRINT           reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    PRINTLN         reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    APAR            reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    $end            reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    IGUALIGUAL      reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    TRIPLEIGUAL     reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    NOIGUAL         reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    MAYOR           reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    MENOR           reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    MAYORIGUAL      reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    MENORIGUAL      reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    ELSE            reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    AND             reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    OR              reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    CPAR            reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    CLLAVE          reduce using rule 112 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)


state 248

    (113) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION . CPAR cuerpo

    CPAR            shift and go to state 254


state 249

    (114) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION . CPAR cuerpo

    CPAR            shift and go to state 255


state 250

    (110) for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .

    PUNTOCOMA       reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    VAL             reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    VAR             reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    ID              reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    CADENAEXPRESION reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    TRUE            reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    FALSE           reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    LISTOF          reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    SETOF           reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    PAIR            reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    TRIPLE          reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    IF              reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    FOR             reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    WHILE           reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    PRINT           reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    PRINTLN         reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    APAR            reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    $end            reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    IGUALIGUAL      reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    TRIPLEIGUAL     reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    NOIGUAL         reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    MAYOR           reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    MENOR           reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    MAYORIGUAL      reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    MENORIGUAL      reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    ELSE            reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    AND             reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    OR              reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    CPAR            reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    CLLAVE          reduce using rule 110 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)


state 251

    (39) tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato . MAYOR

    MAYOR           shift and go to state 256


state 252

    (118) for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR . cuerpo
    (105) cuerpo -> . sentencia
    (106) cuerpo -> . ALLAVE sentencia CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion
    (40) valor -> . ENTEROEXPRESION
    (41) valor -> . flotante
    (42) valor -> . expresionBooleano
    (43) valor -> . CADENAEXPRESION
    (44) valor -> . list
    (45) valor -> . set
    (46) valor -> . pair
    (47) valor -> . triple
    (48) valor -> . expresion
    (49) valor -> . ID
    (50) valor -> . if
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (102) control -> . if
    (103) control -> . for
    (104) control -> . while
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR error CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (51) expresionBooleano -> . TRUE
    (52) expresionBooleano -> . FALSE
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (57) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (58) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (107) if -> . IF APAR condicion CPAR cuerpo
    (108) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (109) for -> . FOR APAR ID IN ID CPAR cuerpo
    (110) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (119) while -> . WHILE APAR condicion CPAR cuerpo
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (16) printType -> . PRINT
    (17) printType -> . PRINTLN
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 187
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    CADENAEXPRESION shift and go to state 15
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30
    PAIR            shift and go to state 31
    TRIPLE          shift and go to state 32
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    APAR            shift and go to state 22

    cuerpo                         shift and go to state 257
    sentencia                      shift and go to state 186
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    compmiembro                    shift and go to state 25
    printType                      shift and go to state 26
    termino                        shift and go to state 33
    factor                         shift and go to state 39

state 253

    (117) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO . WITHINDEX APAR CPAR CPAR cuerpo

    WITHINDEX       shift and go to state 258


state 254

    (113) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR . cuerpo
    (105) cuerpo -> . sentencia
    (106) cuerpo -> . ALLAVE sentencia CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion
    (40) valor -> . ENTEROEXPRESION
    (41) valor -> . flotante
    (42) valor -> . expresionBooleano
    (43) valor -> . CADENAEXPRESION
    (44) valor -> . list
    (45) valor -> . set
    (46) valor -> . pair
    (47) valor -> . triple
    (48) valor -> . expresion
    (49) valor -> . ID
    (50) valor -> . if
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (102) control -> . if
    (103) control -> . for
    (104) control -> . while
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR error CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (51) expresionBooleano -> . TRUE
    (52) expresionBooleano -> . FALSE
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (57) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (58) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (107) if -> . IF APAR condicion CPAR cuerpo
    (108) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (109) for -> . FOR APAR ID IN ID CPAR cuerpo
    (110) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (119) while -> . WHILE APAR condicion CPAR cuerpo
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (16) printType -> . PRINT
    (17) printType -> . PRINTLN
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 187
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    CADENAEXPRESION shift and go to state 15
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30
    PAIR            shift and go to state 31
    TRIPLE          shift and go to state 32
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    APAR            shift and go to state 22

    cuerpo                         shift and go to state 259
    sentencia                      shift and go to state 186
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    compmiembro                    shift and go to state 25
    printType                      shift and go to state 26
    termino                        shift and go to state 33
    factor                         shift and go to state 39

state 255

    (114) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR . cuerpo
    (105) cuerpo -> . sentencia
    (106) cuerpo -> . ALLAVE sentencia CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion
    (40) valor -> . ENTEROEXPRESION
    (41) valor -> . flotante
    (42) valor -> . expresionBooleano
    (43) valor -> . CADENAEXPRESION
    (44) valor -> . list
    (45) valor -> . set
    (46) valor -> . pair
    (47) valor -> . triple
    (48) valor -> . expresion
    (49) valor -> . ID
    (50) valor -> . if
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (102) control -> . if
    (103) control -> . for
    (104) control -> . while
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR error CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (51) expresionBooleano -> . TRUE
    (52) expresionBooleano -> . FALSE
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (57) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (58) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (107) if -> . IF APAR condicion CPAR cuerpo
    (108) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (109) for -> . FOR APAR ID IN ID CPAR cuerpo
    (110) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (119) while -> . WHILE APAR condicion CPAR cuerpo
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (16) printType -> . PRINT
    (17) printType -> . PRINTLN
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 187
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    CADENAEXPRESION shift and go to state 15
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30
    PAIR            shift and go to state 31
    TRIPLE          shift and go to state 32
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    APAR            shift and go to state 22

    cuerpo                         shift and go to state 260
    sentencia                      shift and go to state 186
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    compmiembro                    shift and go to state 25
    printType                      shift and go to state 26
    termino                        shift and go to state 33
    factor                         shift and go to state 39

state 256

    (39) tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .

    IGUAL           reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    PUNTOCOMA       reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    VAL             reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    VAR             reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    ID              reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    ENTEROEXPRESION reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    CADENAEXPRESION reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    TRUE            reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    FALSE           reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    LISTOF          reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    SETOF           reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    PAIR            reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    TRIPLE          reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    IF              reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    FOR             reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    WHILE           reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    PRINT           reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    PRINTLN         reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    APAR            reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    $end            reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    IGUALIGUAL      reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    TRIPLEIGUAL     reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    NOIGUAL         reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    MAYOR           reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    MENOR           reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    MAYORIGUAL      reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    MENORIGUAL      reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    ELSE            reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    AND             reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    OR              reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    CPAR            reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    CLLAVE          reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    COMA            reduce using rule 39 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)


state 257

    (118) for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .

    PUNTOCOMA       reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    VAL             reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    VAR             reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    ID              reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    CADENAEXPRESION reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    TRUE            reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    FALSE           reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    LISTOF          reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    SETOF           reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    PAIR            reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    TRIPLE          reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    IF              reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    FOR             reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    WHILE           reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    PRINT           reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    PRINTLN         reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    APAR            reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    $end            reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    IGUALIGUAL      reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    TRIPLEIGUAL     reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    NOIGUAL         reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    MAYOR           reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    MENOR           reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    MAYORIGUAL      reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    MENORIGUAL      reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    ELSE            reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    AND             reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    OR              reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    CPAR            reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    CLLAVE          reduce using rule 118 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)


state 258

    (117) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX . APAR CPAR CPAR cuerpo

    APAR            shift and go to state 261


state 259

    (113) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .

    PUNTOCOMA       reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    VAL             reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    VAR             reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    ID              reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    CADENAEXPRESION reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    TRUE            reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    FALSE           reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    LISTOF          reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    SETOF           reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    PAIR            reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    TRIPLE          reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    IF              reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    FOR             reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    WHILE           reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    PRINT           reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    PRINTLN         reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    APAR            reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    $end            reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    IGUALIGUAL      reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    TRIPLEIGUAL     reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    NOIGUAL         reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    MAYOR           reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    MENOR           reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    MAYORIGUAL      reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    MENORIGUAL      reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    ELSE            reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    AND             reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    OR              reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    CPAR            reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    CLLAVE          reduce using rule 113 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)


state 260

    (114) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .

    PUNTOCOMA       reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    VAL             reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    VAR             reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    ID              reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    CADENAEXPRESION reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    TRUE            reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    FALSE           reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    LISTOF          reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    SETOF           reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    PAIR            reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    TRIPLE          reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    IF              reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    FOR             reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    WHILE           reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    PRINT           reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    PRINTLN         reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    APAR            reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    $end            reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    IGUALIGUAL      reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    TRIPLEIGUAL     reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    NOIGUAL         reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    MAYOR           reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    MENOR           reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    MAYORIGUAL      reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    MENORIGUAL      reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    ELSE            reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    AND             reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    OR              reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    CPAR            reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    CLLAVE          reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)


state 261

    (117) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR . CPAR CPAR cuerpo

    CPAR            shift and go to state 262


state 262

    (117) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR . CPAR cuerpo

    CPAR            shift and go to state 263


state 263

    (117) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR . cuerpo
    (105) cuerpo -> . sentencia
    (106) cuerpo -> . ALLAVE sentencia CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (24) asignacion -> . VAL ID tipoAsignacion
    (25) asignacion -> . VAR ID tipoAsignacion
    (26) asignacion -> . ID inicializacion
    (40) valor -> . ENTEROEXPRESION
    (41) valor -> . flotante
    (42) valor -> . expresionBooleano
    (43) valor -> . CADENAEXPRESION
    (44) valor -> . list
    (45) valor -> . set
    (46) valor -> . pair
    (47) valor -> . triple
    (48) valor -> . expresion
    (49) valor -> . ID
    (50) valor -> . if
    (18) funcion -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (19) funcion -> . CADENAEXPRESION PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (20) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (21) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (22) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (23) funcion -> . ID PUNTO GETINDEX APAR ENTEROEXPRESION CPAR
    (102) control -> . if
    (103) control -> . for
    (104) control -> . while
    (100) condicion -> . compmiembro comparador compmiembro
    (101) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR error CPAR
    (53) flotante -> . ENTEROEXPRESION F
    (54) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (51) expresionBooleano -> . TRUE
    (52) expresionBooleano -> . FALSE
    (55) list -> . LISTOF APAR contenido CPAR
    (56) set -> . SETOF APAR contenido CPAR
    (57) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (58) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (61) expresion -> . expresion SUMA termino
    (62) expresion -> . expresion RESTA termino
    (63) expresion -> . expresion DIVISION termino
    (64) expresion -> . expresion MULT termino
    (65) expresion -> . expresion MODULO termino
    (66) expresion -> . termino
    (107) if -> . IF APAR condicion CPAR cuerpo
    (108) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (109) for -> . FOR APAR ID IN ID CPAR cuerpo
    (110) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (111) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (112) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (113) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (116) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (117) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (118) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (119) while -> . WHILE APAR condicion CPAR cuerpo
    (96) compmiembro -> . ID
    (97) compmiembro -> . ENTEROEXPRESION
    (98) compmiembro -> . funcion
    (99) compmiembro -> . asignacion
    (16) printType -> . PRINT
    (17) printType -> . PRINTLN
    (67) termino -> . termino SUMA factorEspecial
    (68) termino -> . termino RESTA factor
    (69) termino -> . termino MULT factor
    (70) termino -> . termino DIVISION factor
    (71) termino -> . termino MODULO factor
    (72) termino -> . factor
    (73) termino -> . ENTEROEXPRESION
    (74) termino -> . flotante
    (75) termino -> . CADENAEXPRESION
    (76) termino -> . list
    (77) termino -> . set
    (78) termino -> . ID
    (79) factor -> . ENTEROEXPRESION
    (80) factor -> . flotante
    (81) factor -> . ID
    (86) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 187
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    CADENAEXPRESION shift and go to state 15
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30
    PAIR            shift and go to state 31
    TRIPLE          shift and go to state 32
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    APAR            shift and go to state 22

    cuerpo                         shift and go to state 264
    sentencia                      shift and go to state 186
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    compmiembro                    shift and go to state 25
    printType                      shift and go to state 26
    termino                        shift and go to state 33
    factor                         shift and go to state 39

state 264

    (117) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .

    PUNTOCOMA       reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    VAL             reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    VAR             reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    ID              reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    CADENAEXPRESION reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    TRUE            reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    FALSE           reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    LISTOF          reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    SETOF           reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    PAIR            reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    TRIPLE          reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    IF              reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    FOR             reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    WHILE           reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    PRINT           reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    PRINTLN         reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    APAR            reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    $end            reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    IGUALIGUAL      reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    TRIPLEIGUAL     reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    NOIGUAL         reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    MAYOR           reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    MENOR           reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    MAYORIGUAL      reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    MENORIGUAL      reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    ELSE            reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    AND             reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    OR              reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    CPAR            reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    CLLAVE          reduce using rule 117 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUMA in state 33 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 33 resolved as shift
WARNING: shift/reduce conflict for MULT in state 33 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 33 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 33 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 100 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 100 resolved as shift
WARNING: shift/reduce conflict for MULT in state 100 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 100 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 100 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 101 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 101 resolved as shift
WARNING: shift/reduce conflict for MULT in state 101 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 101 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 101 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 102 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 102 resolved as shift
WARNING: shift/reduce conflict for MULT in state 102 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 102 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 102 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 103 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 103 resolved as shift
WARNING: shift/reduce conflict for MULT in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 103 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 103 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 104 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 104 resolved as shift
WARNING: shift/reduce conflict for MULT in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 104 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 104 resolved as shift
WARNING: shift/reduce conflict for AND in state 106 resolved as shift
WARNING: shift/reduce conflict for OR in state 106 resolved as shift
WARNING: shift/reduce conflict for CPAR in state 175 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 185 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (sentencia -> asignacion)
WARNING: rejected rule (compmiembro -> asignacion) in state 3
WARNING: reduce/reduce conflict in state 5 resolved using rule (sentencia -> funcion)
WARNING: rejected rule (compmiembro -> funcion) in state 5
WARNING: reduce/reduce conflict in state 10 resolved using rule (valor -> ID)
WARNING: rejected rule (compmiembro -> ID) in state 10
WARNING: reduce/reduce conflict in state 10 resolved using rule (valor -> ID)
WARNING: rejected rule (termino -> ID) in state 10
WARNING: reduce/reduce conflict in state 10 resolved using rule (termino -> ID)
WARNING: rejected rule (factor -> ID) in state 10
WARNING: reduce/reduce conflict in state 10 resolved using rule (valor -> ID)
WARNING: rejected rule (factor -> ID) in state 10
WARNING: reduce/reduce conflict in state 12 resolved using rule (valor -> ENTEROEXPRESION)
WARNING: rejected rule (compmiembro -> ENTEROEXPRESION) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (valor -> ENTEROEXPRESION)
WARNING: rejected rule (termino -> ENTEROEXPRESION) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (termino -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (valor -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 12
WARNING: reduce/reduce conflict in state 13 resolved using rule (valor -> flotante)
WARNING: rejected rule (termino -> flotante) in state 13
WARNING: reduce/reduce conflict in state 13 resolved using rule (termino -> flotante)
WARNING: rejected rule (factor -> flotante) in state 13
WARNING: reduce/reduce conflict in state 13 resolved using rule (valor -> flotante)
WARNING: rejected rule (factor -> flotante) in state 13
WARNING: reduce/reduce conflict in state 15 resolved using rule (valor -> CADENAEXPRESION)
WARNING: rejected rule (termino -> CADENAEXPRESION) in state 15
WARNING: reduce/reduce conflict in state 16 resolved using rule (valor -> list)
WARNING: rejected rule (termino -> list) in state 16
WARNING: reduce/reduce conflict in state 17 resolved using rule (valor -> set)
WARNING: rejected rule (termino -> set) in state 17
WARNING: reduce/reduce conflict in state 21 resolved using rule (valor -> if)
WARNING: rejected rule (control -> if) in state 21
WARNING: reduce/reduce conflict in state 56 resolved using rule (termino -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 56
WARNING: reduce/reduce conflict in state 57 resolved using rule (termino -> flotante)
WARNING: rejected rule (factor -> flotante) in state 57
WARNING: reduce/reduce conflict in state 61 resolved using rule (termino -> ID)
WARNING: rejected rule (factor -> ID) in state 61
WARNING: reduce/reduce conflict in state 91 resolved using rule (valor -> ENTEROEXPRESION)
WARNING: rejected rule (termino -> ENTEROEXPRESION) in state 91
WARNING: reduce/reduce conflict in state 91 resolved using rule (termino -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 91
WARNING: reduce/reduce conflict in state 91 resolved using rule (valor -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 91
WARNING: reduce/reduce conflict in state 92 resolved using rule (valor -> CADENAEXPRESION)
WARNING: rejected rule (termino -> CADENAEXPRESION) in state 92
WARNING: reduce/reduce conflict in state 93 resolved using rule (valor -> ID)
WARNING: rejected rule (termino -> ID) in state 93
WARNING: reduce/reduce conflict in state 93 resolved using rule (termino -> ID)
WARNING: rejected rule (factor -> ID) in state 93
WARNING: reduce/reduce conflict in state 93 resolved using rule (valor -> ID)
WARNING: rejected rule (factor -> ID) in state 93
WARNING: Rule (control -> if) is never reduced
