Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ACOR
    ARROBA
    BREAK
    CCOR
    COMDOBLE
    COMENTARIOMULTILINEA
    COMENTARIOSIMPLE
    COMSIMPLE
    FALSE
    FUN
    INICIOCOMENTARIO
    NEGACION
    PREGUNTA
    PUNTOCOMA
    SIGNODOLAR
    TRUE

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> asignacion
Rule 2     sentencia -> valor
Rule 3     sentencia -> metodo
Rule 4     sentencia -> control
Rule 5     sentencia -> condicion
Rule 6     sentencia -> atributo
Rule 7     asignacion -> VAL ID tipoAsignacion
Rule 8     asignacion -> VAR ID tipoAsignacion
Rule 9     asignacion -> ID inicializacion
Rule 10    tipoAsignacion -> declaracion
Rule 11    tipoAsignacion -> inicializacion
Rule 12    tipoAsignacion -> declaracion inicializacion
Rule 13    declaracion -> DOSPUNTOS tipoDato
Rule 14    inicializacion -> IGUAL valor
Rule 15    tipoDato -> INT
Rule 16    tipoDato -> FLOAT
Rule 17    tipoDato -> BOOLEAN
Rule 18    tipoDato -> STRING
Rule 19    tipoDato -> LIST MENOR tipoDato MAYOR
Rule 20    tipoDato -> SET MENOR tipoDato MAYOR
Rule 21    tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR
Rule 22    tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR
Rule 23    valor -> ENTEROEXPRESION
Rule 24    valor -> flotante
Rule 25    valor -> BOOLEANOEXPRESION
Rule 26    valor -> CADENAEXPRESION
Rule 27    valor -> list
Rule 28    valor -> set
Rule 29    valor -> pair
Rule 30    valor -> triple
Rule 31    valor -> expresion
Rule 32    valor -> ID
Rule 33    flotante -> ENTEROEXPRESION F
Rule 34    flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F
Rule 35    list -> LISTOF APAR contenido CPAR
Rule 36    set -> SETOF APAR contenido CPAR
Rule 37    pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR
Rule 38    triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
Rule 39    contenido -> factorEspecial
Rule 40    contenido -> factorEspecial COMA contenido
Rule 41    expresion -> expresion SUMA termino
Rule 42    expresion -> expresion RESTA termino
Rule 43    expresion -> expresion DIVISION termino
Rule 44    expresion -> expresion MULT termino
Rule 45    expresion -> expresion MODULO termino
Rule 46    expresion -> termino
Rule 47    termino -> termino SUMA factorEspecial
Rule 48    termino -> termino RESTA factor
Rule 49    termino -> termino MULT factor
Rule 50    termino -> termino DIVISION factor
Rule 51    termino -> termino MODULO factor
Rule 52    termino -> factor
Rule 53    termino -> ENTEROEXPRESION
Rule 54    termino -> flotante
Rule 55    termino -> CADENAEXPRESION
Rule 56    termino -> list
Rule 57    termino -> set
Rule 58    termino -> ID
Rule 59    factor -> ENTEROEXPRESION
Rule 60    factor -> flotante
Rule 61    factor -> ID
Rule 62    factorEspecial -> factor
Rule 63    factorEspecial -> CADENAEXPRESION
Rule 64    factorEspecial -> list
Rule 65    factorEspecial -> set
Rule 66    factor -> APAR expresion CPAR
Rule 67    funcion -> WITHINDEX
Rule 68    funcion -> GET
Rule 69    funcion -> SLICE
Rule 70    funcion -> COMPARETO
Rule 71    funcion -> GETINDEX
Rule 72    funcion -> HASHCODE
Rule 73    funcion -> CONTAINS
Rule 74    funcion -> SIZE
Rule 75    funcion -> ISEMPTY
Rule 76    funcion -> TOSTRING
Rule 77    funcion -> TOLIST
Rule 78    funcion -> PRINT
Rule 79    funcion -> PRINTLN
Rule 80    funcion -> INDICES
Rule 81    metodo -> ID PUNTO ID APAR CPAR
Rule 82    metodo -> ID PUNTO ID APAR ID CPAR
Rule 83    metodo -> atributo PUNTO ID APAR CPAR
Rule 84    metodo -> atributo PUNTO ID APAR ID CPAR
Rule 85    metodo -> ID PUNTO funcion APAR CPAR
Rule 86    metodo -> ID PUNTO funcion APAR ID CPAR
Rule 87    metodo -> atributo PUNTO funcion APAR CPAR
Rule 88    metodo -> atributo PUNTO funcion APAR ID CPAR
Rule 89    atributo -> ID PUNTO ID
Rule 90    comparador -> IGUALIGUAL
Rule 91    comparador -> TRIPLEIGUAL
Rule 92    comparador -> NOIGUAL
Rule 93    comparador -> MAYOR
Rule 94    comparador -> MENOR
Rule 95    comparador -> MAYORIGUAL
Rule 96    comparador -> MENORIGUAL
Rule 97    conector -> AND
Rule 98    conector -> OR
Rule 99    compmiembro -> ID
Rule 100   compmiembro -> ENTEROEXPRESION
Rule 101   compmiembro -> metodo
Rule 102   compmiembro -> atributo
Rule 103   compmiembro -> asignacion
Rule 104   condicion -> compmiembro comparador compmiembro
Rule 105   condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro
Rule 106   control -> if
Rule 107   control -> for
Rule 108   control -> while
Rule 109   cuerpo -> sentencia
Rule 110   cuerpo -> ALLAVE sentencia CLLAVE
Rule 111   if -> IF APAR condicion CPAR cuerpo
Rule 112   if -> IF APAR condicion CPAR cuerpo ELSE cuerpo
Rule 113   for -> FOR APAR ID IN ID CPAR cuerpo
Rule 114   for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
Rule 115   for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
Rule 116   for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
Rule 117   for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
Rule 118   for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
Rule 119   for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
Rule 120   for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo
Rule 121   for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
Rule 122   for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
Rule 123   while -> WHILE APAR condicion CPAR cuerpo

Terminals, with rules where they appear

ACOR                 : 
ALLAVE               : 110
AND                  : 97
APAR                 : 35 36 37 38 66 81 82 83 84 85 86 87 88 111 112 113 114 115 116 117 118 119 120 121 121 121 122 122 123
ARROBA               : 
BOOLEAN              : 17
BOOLEANOEXPRESION    : 25
BREAK                : 
CADENAEXPRESION      : 26 55 63
CCOR                 : 
CLLAVE               : 110
COMA                 : 21 22 22 37 38 38 40 121 122
COMDOBLE             : 
COMENTARIOMULTILINEA : 
COMENTARIOSIMPLE     : 
COMPARETO            : 70
COMSIMPLE            : 
CONTAINS             : 73
CPAR                 : 35 36 37 38 66 81 82 83 84 85 86 87 88 111 112 113 114 115 116 117 118 119 120 121 121 121 122 122 123
DIVISION             : 43 50
DOSPUNTOS            : 13 114
DOWNTO               : 118
ELSE                 : 112
ENTEROEXPRESION      : 23 33 34 34 53 59 100 115 115 116 116 117 117 117 118 118 118
F                    : 33 34
FALSE                : 
FLOAT                : 16
FOR                  : 113 114 115 116 117 118 119 120 121 122
FUN                  : 
GET                  : 68
GETINDEX             : 71
HASHCODE             : 72
ID                   : 7 8 9 32 58 61 81 81 82 82 82 83 84 84 85 86 86 88 89 89 99 113 113 114 114 115 116 117 118 119 119 120 120 120 121 121 121 122 122 122
IF                   : 111 112
IGUAL                : 14
IGUALIGUAL           : 90
IN                   : 113 114 115 116 117 118 119 120 121 122
INDICES              : 80 119
INICIOCOMENTARIO     : 
INT                  : 15 114
ISEMPTY              : 75
LIST                 : 19
LISTOF               : 35
MAYOR                : 19 20 21 22 93
MAYORIGUAL           : 95
MENOR                : 19 20 21 22 94
MENORIGUAL           : 96
MODULO               : 45 51
MULT                 : 44 49
NEGACION             : 
NOIGUAL              : 92
OR                   : 98
PAIR                 : 21 37
PREGUNTA             : 
PRINT                : 78
PRINTLN              : 79
PUNTO                : 34 81 82 83 84 85 86 87 88 89 119 120 121
PUNTOCOMA            : 
PUNTOPUNTO           : 115
RESTA                : 42 48
SET                  : 20
SETOF                : 36
SIGNODOLAR           : 
SIZE                 : 74
SLICE                : 69
STEP                 : 117 118
STRING               : 18
SUMA                 : 41 47
TOLIST               : 77
TOSTRING             : 76
TRIPLE               : 22 38
TRIPLEIGUAL          : 91
TRUE                 : 
UNTIL                : 116 117
VAL                  : 7
VAR                  : 8
WHILE                : 123
WITHINDEX            : 67 121
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 103
atributo             : 6 83 84 87 88 102
comparador           : 104 105 105
compmiembro          : 104 104 105 105 105 105
condicion            : 5 111 112 123
conector             : 105
contenido            : 35 36 40
control              : 4
cuerpo               : 111 112 112 113 114 115 116 117 118 119 120 121 122 123
declaracion          : 10 12
expresion            : 31 41 42 43 44 45 66
factor               : 48 49 50 51 52 62
factorEspecial       : 37 37 38 38 38 39 40 47
flotante             : 24 54 60
for                  : 107
funcion              : 85 86 87 88
if                   : 106
inicializacion       : 9 11 12
list                 : 27 56 64
metodo               : 3 101
pair                 : 29
sentencia            : 109 110 0
set                  : 28 57 65
termino              : 41 42 43 44 45 46 47 48 49 50 51
tipoAsignacion       : 7 8
tipoDato             : 13 19 20 21 21 22 22 22
triple               : 30
valor                : 2 14
while                : 108

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . asignacion
    (2) sentencia -> . valor
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion
    (23) valor -> . ENTEROEXPRESION
    (24) valor -> . flotante
    (25) valor -> . BOOLEANOEXPRESION
    (26) valor -> . CADENAEXPRESION
    (27) valor -> . list
    (28) valor -> . set
    (29) valor -> . pair
    (30) valor -> . triple
    (31) valor -> . expresion
    (32) valor -> . ID
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (106) control -> . if
    (107) control -> . for
    (108) control -> . while
    (104) condicion -> . compmiembro comparador compmiembro
    (105) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (89) atributo -> . ID PUNTO ID
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (37) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (38) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (111) if -> . IF APAR condicion CPAR cuerpo
    (112) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (113) for -> . FOR APAR ID IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (123) while -> . WHILE APAR condicion CPAR cuerpo
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR

    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 11
    BOOLEANOEXPRESION shift and go to state 13
    CADENAEXPRESION shift and go to state 14
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26
    PAIR            shift and go to state 27
    TRIPLE          shift and go to state 28
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    APAR            shift and go to state 20

    sentencia                      shift and go to state 1
    asignacion                     shift and go to state 2
    valor                          shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    flotante                       shift and go to state 12
    list                           shift and go to state 15
    set                            shift and go to state 16
    pair                           shift and go to state 17
    triple                         shift and go to state 18
    expresion                      shift and go to state 19
    if                             shift and go to state 21
    for                            shift and go to state 22
    while                          shift and go to state 23
    compmiembro                    shift and go to state 24
    termino                        shift and go to state 29
    factor                         shift and go to state 33

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> asignacion .
    (103) compmiembro -> asignacion .

    $end            reduce using rule 1 (sentencia -> asignacion .)
    ELSE            reduce using rule 1 (sentencia -> asignacion .)
    CLLAVE          reduce using rule 1 (sentencia -> asignacion .)
    IGUALIGUAL      reduce using rule 103 (compmiembro -> asignacion .)
    TRIPLEIGUAL     reduce using rule 103 (compmiembro -> asignacion .)
    NOIGUAL         reduce using rule 103 (compmiembro -> asignacion .)
    MAYOR           reduce using rule 103 (compmiembro -> asignacion .)
    MENOR           reduce using rule 103 (compmiembro -> asignacion .)
    MAYORIGUAL      reduce using rule 103 (compmiembro -> asignacion .)
    MENORIGUAL      reduce using rule 103 (compmiembro -> asignacion .)


state 3

    (2) sentencia -> valor .

    $end            reduce using rule 2 (sentencia -> valor .)
    ELSE            reduce using rule 2 (sentencia -> valor .)
    CLLAVE          reduce using rule 2 (sentencia -> valor .)


state 4

    (3) sentencia -> metodo .
    (101) compmiembro -> metodo .

    $end            reduce using rule 3 (sentencia -> metodo .)
    ELSE            reduce using rule 3 (sentencia -> metodo .)
    CLLAVE          reduce using rule 3 (sentencia -> metodo .)
    IGUALIGUAL      reduce using rule 101 (compmiembro -> metodo .)
    TRIPLEIGUAL     reduce using rule 101 (compmiembro -> metodo .)
    NOIGUAL         reduce using rule 101 (compmiembro -> metodo .)
    MAYOR           reduce using rule 101 (compmiembro -> metodo .)
    MENOR           reduce using rule 101 (compmiembro -> metodo .)
    MAYORIGUAL      reduce using rule 101 (compmiembro -> metodo .)
    MENORIGUAL      reduce using rule 101 (compmiembro -> metodo .)


state 5

    (4) sentencia -> control .

    $end            reduce using rule 4 (sentencia -> control .)
    ELSE            reduce using rule 4 (sentencia -> control .)
    CLLAVE          reduce using rule 4 (sentencia -> control .)


state 6

    (5) sentencia -> condicion .

    $end            reduce using rule 5 (sentencia -> condicion .)
    ELSE            reduce using rule 5 (sentencia -> condicion .)
    CLLAVE          reduce using rule 5 (sentencia -> condicion .)


state 7

    (6) sentencia -> atributo .
    (83) metodo -> atributo . PUNTO ID APAR CPAR
    (84) metodo -> atributo . PUNTO ID APAR ID CPAR
    (87) metodo -> atributo . PUNTO funcion APAR CPAR
    (88) metodo -> atributo . PUNTO funcion APAR ID CPAR
    (102) compmiembro -> atributo .

    $end            reduce using rule 6 (sentencia -> atributo .)
    ELSE            reduce using rule 6 (sentencia -> atributo .)
    CLLAVE          reduce using rule 6 (sentencia -> atributo .)
    PUNTO           shift and go to state 34
    IGUALIGUAL      reduce using rule 102 (compmiembro -> atributo .)
    TRIPLEIGUAL     reduce using rule 102 (compmiembro -> atributo .)
    NOIGUAL         reduce using rule 102 (compmiembro -> atributo .)
    MAYOR           reduce using rule 102 (compmiembro -> atributo .)
    MENOR           reduce using rule 102 (compmiembro -> atributo .)
    MAYORIGUAL      reduce using rule 102 (compmiembro -> atributo .)
    MENORIGUAL      reduce using rule 102 (compmiembro -> atributo .)


state 8

    (7) asignacion -> VAL . ID tipoAsignacion

    ID              shift and go to state 35


state 9

    (9) asignacion -> ID . inicializacion
    (32) valor -> ID .
    (81) metodo -> ID . PUNTO ID APAR CPAR
    (82) metodo -> ID . PUNTO ID APAR ID CPAR
    (85) metodo -> ID . PUNTO funcion APAR CPAR
    (86) metodo -> ID . PUNTO funcion APAR ID CPAR
    (89) atributo -> ID . PUNTO ID
    (99) compmiembro -> ID .
    (58) termino -> ID .
    (61) factor -> ID .
    (14) inicializacion -> . IGUAL valor

  ! reduce/reduce conflict for $end resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for SUMA resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for RESTA resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for MULT resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for DIVISION resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 32 (valor -> ID .)
    $end            reduce using rule 32 (valor -> ID .)
    ELSE            reduce using rule 32 (valor -> ID .)
    CLLAVE          reduce using rule 32 (valor -> ID .)
    PUNTO           shift and go to state 37
    IGUALIGUAL      reduce using rule 99 (compmiembro -> ID .)
    TRIPLEIGUAL     reduce using rule 99 (compmiembro -> ID .)
    NOIGUAL         reduce using rule 99 (compmiembro -> ID .)
    MAYOR           reduce using rule 99 (compmiembro -> ID .)
    MENOR           reduce using rule 99 (compmiembro -> ID .)
    MAYORIGUAL      reduce using rule 99 (compmiembro -> ID .)
    MENORIGUAL      reduce using rule 99 (compmiembro -> ID .)
    SUMA            reduce using rule 58 (termino -> ID .)
    RESTA           reduce using rule 58 (termino -> ID .)
    MULT            reduce using rule 58 (termino -> ID .)
    DIVISION        reduce using rule 58 (termino -> ID .)
    MODULO          reduce using rule 58 (termino -> ID .)
    IGUAL           shift and go to state 38

  ! $end            [ reduce using rule 58 (termino -> ID .) ]
  ! ELSE            [ reduce using rule 58 (termino -> ID .) ]
  ! CLLAVE          [ reduce using rule 58 (termino -> ID .) ]
  ! SUMA            [ reduce using rule 61 (factor -> ID .) ]
  ! RESTA           [ reduce using rule 61 (factor -> ID .) ]
  ! MULT            [ reduce using rule 61 (factor -> ID .) ]
  ! DIVISION        [ reduce using rule 61 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 61 (factor -> ID .) ]
  ! $end            [ reduce using rule 61 (factor -> ID .) ]
  ! ELSE            [ reduce using rule 61 (factor -> ID .) ]
  ! CLLAVE          [ reduce using rule 61 (factor -> ID .) ]

    inicializacion                 shift and go to state 36

state 10

    (8) asignacion -> VAR . ID tipoAsignacion

    ID              shift and go to state 39


state 11

    (23) valor -> ENTEROEXPRESION .
    (33) flotante -> ENTEROEXPRESION . F
    (34) flotante -> ENTEROEXPRESION . PUNTO ENTEROEXPRESION F
    (100) compmiembro -> ENTEROEXPRESION .
    (53) termino -> ENTEROEXPRESION .
    (59) factor -> ENTEROEXPRESION .

  ! reduce/reduce conflict for $end resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for SUMA resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for RESTA resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MULT resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for DIVISION resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MODULO resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 23 (valor -> ENTEROEXPRESION .)
    $end            reduce using rule 23 (valor -> ENTEROEXPRESION .)
    ELSE            reduce using rule 23 (valor -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 23 (valor -> ENTEROEXPRESION .)
    F               shift and go to state 40
    PUNTO           shift and go to state 41
    IGUALIGUAL      reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    TRIPLEIGUAL     reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    NOIGUAL         reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    MAYOR           reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    MENOR           reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    MAYORIGUAL      reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    MENORIGUAL      reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    SUMA            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    RESTA           reduce using rule 53 (termino -> ENTEROEXPRESION .)
    MULT            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 53 (termino -> ENTEROEXPRESION .)
    MODULO          reduce using rule 53 (termino -> ENTEROEXPRESION .)

  ! $end            [ reduce using rule 53 (termino -> ENTEROEXPRESION .) ]
  ! ELSE            [ reduce using rule 53 (termino -> ENTEROEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 53 (termino -> ENTEROEXPRESION .) ]
  ! SUMA            [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! RESTA           [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! MULT            [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! DIVISION        [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! MODULO          [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! $end            [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! ELSE            [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]


state 12

    (24) valor -> flotante .
    (54) termino -> flotante .
    (60) factor -> flotante .

  ! reduce/reduce conflict for $end resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for MAYOR resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for MENOR resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for ELSE resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for AND resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for OR resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for CPAR resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for SUMA resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for RESTA resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for MULT resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for DIVISION resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for MODULO resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for $end resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for MAYOR resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for MENOR resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for ELSE resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for AND resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for OR resolved using rule 24 (valor -> flotante .)
  ! reduce/reduce conflict for CPAR resolved using rule 24 (valor -> flotante .)
    $end            reduce using rule 24 (valor -> flotante .)
    IGUALIGUAL      reduce using rule 24 (valor -> flotante .)
    TRIPLEIGUAL     reduce using rule 24 (valor -> flotante .)
    NOIGUAL         reduce using rule 24 (valor -> flotante .)
    MAYOR           reduce using rule 24 (valor -> flotante .)
    MENOR           reduce using rule 24 (valor -> flotante .)
    MAYORIGUAL      reduce using rule 24 (valor -> flotante .)
    MENORIGUAL      reduce using rule 24 (valor -> flotante .)
    ELSE            reduce using rule 24 (valor -> flotante .)
    CLLAVE          reduce using rule 24 (valor -> flotante .)
    AND             reduce using rule 24 (valor -> flotante .)
    OR              reduce using rule 24 (valor -> flotante .)
    CPAR            reduce using rule 24 (valor -> flotante .)
    SUMA            reduce using rule 54 (termino -> flotante .)
    RESTA           reduce using rule 54 (termino -> flotante .)
    MULT            reduce using rule 54 (termino -> flotante .)
    DIVISION        reduce using rule 54 (termino -> flotante .)
    MODULO          reduce using rule 54 (termino -> flotante .)

  ! $end            [ reduce using rule 54 (termino -> flotante .) ]
  ! IGUALIGUAL      [ reduce using rule 54 (termino -> flotante .) ]
  ! TRIPLEIGUAL     [ reduce using rule 54 (termino -> flotante .) ]
  ! NOIGUAL         [ reduce using rule 54 (termino -> flotante .) ]
  ! MAYOR           [ reduce using rule 54 (termino -> flotante .) ]
  ! MENOR           [ reduce using rule 54 (termino -> flotante .) ]
  ! MAYORIGUAL      [ reduce using rule 54 (termino -> flotante .) ]
  ! MENORIGUAL      [ reduce using rule 54 (termino -> flotante .) ]
  ! ELSE            [ reduce using rule 54 (termino -> flotante .) ]
  ! CLLAVE          [ reduce using rule 54 (termino -> flotante .) ]
  ! AND             [ reduce using rule 54 (termino -> flotante .) ]
  ! OR              [ reduce using rule 54 (termino -> flotante .) ]
  ! CPAR            [ reduce using rule 54 (termino -> flotante .) ]
  ! SUMA            [ reduce using rule 60 (factor -> flotante .) ]
  ! RESTA           [ reduce using rule 60 (factor -> flotante .) ]
  ! MULT            [ reduce using rule 60 (factor -> flotante .) ]
  ! DIVISION        [ reduce using rule 60 (factor -> flotante .) ]
  ! MODULO          [ reduce using rule 60 (factor -> flotante .) ]
  ! $end            [ reduce using rule 60 (factor -> flotante .) ]
  ! IGUALIGUAL      [ reduce using rule 60 (factor -> flotante .) ]
  ! TRIPLEIGUAL     [ reduce using rule 60 (factor -> flotante .) ]
  ! NOIGUAL         [ reduce using rule 60 (factor -> flotante .) ]
  ! MAYOR           [ reduce using rule 60 (factor -> flotante .) ]
  ! MENOR           [ reduce using rule 60 (factor -> flotante .) ]
  ! MAYORIGUAL      [ reduce using rule 60 (factor -> flotante .) ]
  ! MENORIGUAL      [ reduce using rule 60 (factor -> flotante .) ]
  ! ELSE            [ reduce using rule 60 (factor -> flotante .) ]
  ! CLLAVE          [ reduce using rule 60 (factor -> flotante .) ]
  ! AND             [ reduce using rule 60 (factor -> flotante .) ]
  ! OR              [ reduce using rule 60 (factor -> flotante .) ]
  ! CPAR            [ reduce using rule 60 (factor -> flotante .) ]


state 13

    (25) valor -> BOOLEANOEXPRESION .

    $end            reduce using rule 25 (valor -> BOOLEANOEXPRESION .)
    IGUALIGUAL      reduce using rule 25 (valor -> BOOLEANOEXPRESION .)
    TRIPLEIGUAL     reduce using rule 25 (valor -> BOOLEANOEXPRESION .)
    NOIGUAL         reduce using rule 25 (valor -> BOOLEANOEXPRESION .)
    MAYOR           reduce using rule 25 (valor -> BOOLEANOEXPRESION .)
    MENOR           reduce using rule 25 (valor -> BOOLEANOEXPRESION .)
    MAYORIGUAL      reduce using rule 25 (valor -> BOOLEANOEXPRESION .)
    MENORIGUAL      reduce using rule 25 (valor -> BOOLEANOEXPRESION .)
    ELSE            reduce using rule 25 (valor -> BOOLEANOEXPRESION .)
    CLLAVE          reduce using rule 25 (valor -> BOOLEANOEXPRESION .)
    AND             reduce using rule 25 (valor -> BOOLEANOEXPRESION .)
    OR              reduce using rule 25 (valor -> BOOLEANOEXPRESION .)
    CPAR            reduce using rule 25 (valor -> BOOLEANOEXPRESION .)


state 14

    (26) valor -> CADENAEXPRESION .
    (55) termino -> CADENAEXPRESION .

  ! reduce/reduce conflict for $end resolved using rule 26 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 26 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 26 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 26 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for MAYOR resolved using rule 26 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for MENOR resolved using rule 26 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 26 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 26 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 26 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 26 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for AND resolved using rule 26 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for OR resolved using rule 26 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 26 (valor -> CADENAEXPRESION .)
    $end            reduce using rule 26 (valor -> CADENAEXPRESION .)
    IGUALIGUAL      reduce using rule 26 (valor -> CADENAEXPRESION .)
    TRIPLEIGUAL     reduce using rule 26 (valor -> CADENAEXPRESION .)
    NOIGUAL         reduce using rule 26 (valor -> CADENAEXPRESION .)
    MAYOR           reduce using rule 26 (valor -> CADENAEXPRESION .)
    MENOR           reduce using rule 26 (valor -> CADENAEXPRESION .)
    MAYORIGUAL      reduce using rule 26 (valor -> CADENAEXPRESION .)
    MENORIGUAL      reduce using rule 26 (valor -> CADENAEXPRESION .)
    ELSE            reduce using rule 26 (valor -> CADENAEXPRESION .)
    CLLAVE          reduce using rule 26 (valor -> CADENAEXPRESION .)
    AND             reduce using rule 26 (valor -> CADENAEXPRESION .)
    OR              reduce using rule 26 (valor -> CADENAEXPRESION .)
    CPAR            reduce using rule 26 (valor -> CADENAEXPRESION .)
    SUMA            reduce using rule 55 (termino -> CADENAEXPRESION .)
    RESTA           reduce using rule 55 (termino -> CADENAEXPRESION .)
    MULT            reduce using rule 55 (termino -> CADENAEXPRESION .)
    DIVISION        reduce using rule 55 (termino -> CADENAEXPRESION .)
    MODULO          reduce using rule 55 (termino -> CADENAEXPRESION .)

  ! $end            [ reduce using rule 55 (termino -> CADENAEXPRESION .) ]
  ! IGUALIGUAL      [ reduce using rule 55 (termino -> CADENAEXPRESION .) ]
  ! TRIPLEIGUAL     [ reduce using rule 55 (termino -> CADENAEXPRESION .) ]
  ! NOIGUAL         [ reduce using rule 55 (termino -> CADENAEXPRESION .) ]
  ! MAYOR           [ reduce using rule 55 (termino -> CADENAEXPRESION .) ]
  ! MENOR           [ reduce using rule 55 (termino -> CADENAEXPRESION .) ]
  ! MAYORIGUAL      [ reduce using rule 55 (termino -> CADENAEXPRESION .) ]
  ! MENORIGUAL      [ reduce using rule 55 (termino -> CADENAEXPRESION .) ]
  ! ELSE            [ reduce using rule 55 (termino -> CADENAEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 55 (termino -> CADENAEXPRESION .) ]
  ! AND             [ reduce using rule 55 (termino -> CADENAEXPRESION .) ]
  ! OR              [ reduce using rule 55 (termino -> CADENAEXPRESION .) ]
  ! CPAR            [ reduce using rule 55 (termino -> CADENAEXPRESION .) ]


state 15

    (27) valor -> list .
    (56) termino -> list .

  ! reduce/reduce conflict for $end resolved using rule 27 (valor -> list .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 27 (valor -> list .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 27 (valor -> list .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 27 (valor -> list .)
  ! reduce/reduce conflict for MAYOR resolved using rule 27 (valor -> list .)
  ! reduce/reduce conflict for MENOR resolved using rule 27 (valor -> list .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 27 (valor -> list .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 27 (valor -> list .)
  ! reduce/reduce conflict for ELSE resolved using rule 27 (valor -> list .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 27 (valor -> list .)
  ! reduce/reduce conflict for AND resolved using rule 27 (valor -> list .)
  ! reduce/reduce conflict for OR resolved using rule 27 (valor -> list .)
  ! reduce/reduce conflict for CPAR resolved using rule 27 (valor -> list .)
    $end            reduce using rule 27 (valor -> list .)
    IGUALIGUAL      reduce using rule 27 (valor -> list .)
    TRIPLEIGUAL     reduce using rule 27 (valor -> list .)
    NOIGUAL         reduce using rule 27 (valor -> list .)
    MAYOR           reduce using rule 27 (valor -> list .)
    MENOR           reduce using rule 27 (valor -> list .)
    MAYORIGUAL      reduce using rule 27 (valor -> list .)
    MENORIGUAL      reduce using rule 27 (valor -> list .)
    ELSE            reduce using rule 27 (valor -> list .)
    CLLAVE          reduce using rule 27 (valor -> list .)
    AND             reduce using rule 27 (valor -> list .)
    OR              reduce using rule 27 (valor -> list .)
    CPAR            reduce using rule 27 (valor -> list .)
    SUMA            reduce using rule 56 (termino -> list .)
    RESTA           reduce using rule 56 (termino -> list .)
    MULT            reduce using rule 56 (termino -> list .)
    DIVISION        reduce using rule 56 (termino -> list .)
    MODULO          reduce using rule 56 (termino -> list .)

  ! $end            [ reduce using rule 56 (termino -> list .) ]
  ! IGUALIGUAL      [ reduce using rule 56 (termino -> list .) ]
  ! TRIPLEIGUAL     [ reduce using rule 56 (termino -> list .) ]
  ! NOIGUAL         [ reduce using rule 56 (termino -> list .) ]
  ! MAYOR           [ reduce using rule 56 (termino -> list .) ]
  ! MENOR           [ reduce using rule 56 (termino -> list .) ]
  ! MAYORIGUAL      [ reduce using rule 56 (termino -> list .) ]
  ! MENORIGUAL      [ reduce using rule 56 (termino -> list .) ]
  ! ELSE            [ reduce using rule 56 (termino -> list .) ]
  ! CLLAVE          [ reduce using rule 56 (termino -> list .) ]
  ! AND             [ reduce using rule 56 (termino -> list .) ]
  ! OR              [ reduce using rule 56 (termino -> list .) ]
  ! CPAR            [ reduce using rule 56 (termino -> list .) ]


state 16

    (28) valor -> set .
    (57) termino -> set .

  ! reduce/reduce conflict for $end resolved using rule 28 (valor -> set .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 28 (valor -> set .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 28 (valor -> set .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 28 (valor -> set .)
  ! reduce/reduce conflict for MAYOR resolved using rule 28 (valor -> set .)
  ! reduce/reduce conflict for MENOR resolved using rule 28 (valor -> set .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 28 (valor -> set .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 28 (valor -> set .)
  ! reduce/reduce conflict for ELSE resolved using rule 28 (valor -> set .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 28 (valor -> set .)
  ! reduce/reduce conflict for AND resolved using rule 28 (valor -> set .)
  ! reduce/reduce conflict for OR resolved using rule 28 (valor -> set .)
  ! reduce/reduce conflict for CPAR resolved using rule 28 (valor -> set .)
    $end            reduce using rule 28 (valor -> set .)
    IGUALIGUAL      reduce using rule 28 (valor -> set .)
    TRIPLEIGUAL     reduce using rule 28 (valor -> set .)
    NOIGUAL         reduce using rule 28 (valor -> set .)
    MAYOR           reduce using rule 28 (valor -> set .)
    MENOR           reduce using rule 28 (valor -> set .)
    MAYORIGUAL      reduce using rule 28 (valor -> set .)
    MENORIGUAL      reduce using rule 28 (valor -> set .)
    ELSE            reduce using rule 28 (valor -> set .)
    CLLAVE          reduce using rule 28 (valor -> set .)
    AND             reduce using rule 28 (valor -> set .)
    OR              reduce using rule 28 (valor -> set .)
    CPAR            reduce using rule 28 (valor -> set .)
    SUMA            reduce using rule 57 (termino -> set .)
    RESTA           reduce using rule 57 (termino -> set .)
    MULT            reduce using rule 57 (termino -> set .)
    DIVISION        reduce using rule 57 (termino -> set .)
    MODULO          reduce using rule 57 (termino -> set .)

  ! $end            [ reduce using rule 57 (termino -> set .) ]
  ! IGUALIGUAL      [ reduce using rule 57 (termino -> set .) ]
  ! TRIPLEIGUAL     [ reduce using rule 57 (termino -> set .) ]
  ! NOIGUAL         [ reduce using rule 57 (termino -> set .) ]
  ! MAYOR           [ reduce using rule 57 (termino -> set .) ]
  ! MENOR           [ reduce using rule 57 (termino -> set .) ]
  ! MAYORIGUAL      [ reduce using rule 57 (termino -> set .) ]
  ! MENORIGUAL      [ reduce using rule 57 (termino -> set .) ]
  ! ELSE            [ reduce using rule 57 (termino -> set .) ]
  ! CLLAVE          [ reduce using rule 57 (termino -> set .) ]
  ! AND             [ reduce using rule 57 (termino -> set .) ]
  ! OR              [ reduce using rule 57 (termino -> set .) ]
  ! CPAR            [ reduce using rule 57 (termino -> set .) ]


state 17

    (29) valor -> pair .

    $end            reduce using rule 29 (valor -> pair .)
    IGUALIGUAL      reduce using rule 29 (valor -> pair .)
    TRIPLEIGUAL     reduce using rule 29 (valor -> pair .)
    NOIGUAL         reduce using rule 29 (valor -> pair .)
    MAYOR           reduce using rule 29 (valor -> pair .)
    MENOR           reduce using rule 29 (valor -> pair .)
    MAYORIGUAL      reduce using rule 29 (valor -> pair .)
    MENORIGUAL      reduce using rule 29 (valor -> pair .)
    ELSE            reduce using rule 29 (valor -> pair .)
    CLLAVE          reduce using rule 29 (valor -> pair .)
    AND             reduce using rule 29 (valor -> pair .)
    OR              reduce using rule 29 (valor -> pair .)
    CPAR            reduce using rule 29 (valor -> pair .)


state 18

    (30) valor -> triple .

    $end            reduce using rule 30 (valor -> triple .)
    IGUALIGUAL      reduce using rule 30 (valor -> triple .)
    TRIPLEIGUAL     reduce using rule 30 (valor -> triple .)
    NOIGUAL         reduce using rule 30 (valor -> triple .)
    MAYOR           reduce using rule 30 (valor -> triple .)
    MENOR           reduce using rule 30 (valor -> triple .)
    MAYORIGUAL      reduce using rule 30 (valor -> triple .)
    MENORIGUAL      reduce using rule 30 (valor -> triple .)
    ELSE            reduce using rule 30 (valor -> triple .)
    CLLAVE          reduce using rule 30 (valor -> triple .)
    AND             reduce using rule 30 (valor -> triple .)
    OR              reduce using rule 30 (valor -> triple .)
    CPAR            reduce using rule 30 (valor -> triple .)


state 19

    (31) valor -> expresion .
    (41) expresion -> expresion . SUMA termino
    (42) expresion -> expresion . RESTA termino
    (43) expresion -> expresion . DIVISION termino
    (44) expresion -> expresion . MULT termino
    (45) expresion -> expresion . MODULO termino

    $end            reduce using rule 31 (valor -> expresion .)
    IGUALIGUAL      reduce using rule 31 (valor -> expresion .)
    TRIPLEIGUAL     reduce using rule 31 (valor -> expresion .)
    NOIGUAL         reduce using rule 31 (valor -> expresion .)
    MAYOR           reduce using rule 31 (valor -> expresion .)
    MENOR           reduce using rule 31 (valor -> expresion .)
    MAYORIGUAL      reduce using rule 31 (valor -> expresion .)
    MENORIGUAL      reduce using rule 31 (valor -> expresion .)
    ELSE            reduce using rule 31 (valor -> expresion .)
    CLLAVE          reduce using rule 31 (valor -> expresion .)
    AND             reduce using rule 31 (valor -> expresion .)
    OR              reduce using rule 31 (valor -> expresion .)
    CPAR            reduce using rule 31 (valor -> expresion .)
    SUMA            shift and go to state 42
    RESTA           shift and go to state 43
    DIVISION        shift and go to state 44
    MULT            shift and go to state 45
    MODULO          shift and go to state 46


state 20

    (66) factor -> APAR . expresion CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 48
    CADENAEXPRESION shift and go to state 50
    ID              shift and go to state 53
    APAR            shift and go to state 20
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26

    expresion                      shift and go to state 47
    termino                        shift and go to state 29
    factor                         shift and go to state 33
    flotante                       shift and go to state 49
    list                           shift and go to state 51
    set                            shift and go to state 52

state 21

    (106) control -> if .

    $end            reduce using rule 106 (control -> if .)
    ELSE            reduce using rule 106 (control -> if .)
    CLLAVE          reduce using rule 106 (control -> if .)


state 22

    (107) control -> for .

    $end            reduce using rule 107 (control -> for .)
    ELSE            reduce using rule 107 (control -> for .)
    CLLAVE          reduce using rule 107 (control -> for .)


state 23

    (108) control -> while .

    $end            reduce using rule 108 (control -> while .)
    ELSE            reduce using rule 108 (control -> while .)
    CLLAVE          reduce using rule 108 (control -> while .)


state 24

    (104) condicion -> compmiembro . comparador compmiembro
    (105) condicion -> compmiembro . comparador compmiembro conector compmiembro comparador compmiembro
    (90) comparador -> . IGUALIGUAL
    (91) comparador -> . TRIPLEIGUAL
    (92) comparador -> . NOIGUAL
    (93) comparador -> . MAYOR
    (94) comparador -> . MENOR
    (95) comparador -> . MAYORIGUAL
    (96) comparador -> . MENORIGUAL

    IGUALIGUAL      shift and go to state 55
    TRIPLEIGUAL     shift and go to state 56
    NOIGUAL         shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61

    comparador                     shift and go to state 54

state 25

    (35) list -> LISTOF . APAR contenido CPAR

    APAR            shift and go to state 62


state 26

    (36) set -> SETOF . APAR contenido CPAR

    APAR            shift and go to state 63


state 27

    (37) pair -> PAIR . APAR factorEspecial COMA factorEspecial CPAR

    APAR            shift and go to state 64


state 28

    (38) triple -> TRIPLE . APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR

    APAR            shift and go to state 65


state 29

    (46) expresion -> termino .
    (47) termino -> termino . SUMA factorEspecial
    (48) termino -> termino . RESTA factor
    (49) termino -> termino . MULT factor
    (50) termino -> termino . DIVISION factor
    (51) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 46 (expresion -> termino .)
    CPAR            reduce using rule 46 (expresion -> termino .)
    IGUALIGUAL      reduce using rule 46 (expresion -> termino .)
    TRIPLEIGUAL     reduce using rule 46 (expresion -> termino .)
    NOIGUAL         reduce using rule 46 (expresion -> termino .)
    MAYOR           reduce using rule 46 (expresion -> termino .)
    MENOR           reduce using rule 46 (expresion -> termino .)
    MAYORIGUAL      reduce using rule 46 (expresion -> termino .)
    MENORIGUAL      reduce using rule 46 (expresion -> termino .)
    ELSE            reduce using rule 46 (expresion -> termino .)
    CLLAVE          reduce using rule 46 (expresion -> termino .)
    AND             reduce using rule 46 (expresion -> termino .)
    OR              reduce using rule 46 (expresion -> termino .)
    SUMA            shift and go to state 66
    RESTA           shift and go to state 67
    MULT            shift and go to state 68
    DIVISION        shift and go to state 69
    MODULO          shift and go to state 70

  ! SUMA            [ reduce using rule 46 (expresion -> termino .) ]
  ! RESTA           [ reduce using rule 46 (expresion -> termino .) ]
  ! DIVISION        [ reduce using rule 46 (expresion -> termino .) ]
  ! MULT            [ reduce using rule 46 (expresion -> termino .) ]
  ! MODULO          [ reduce using rule 46 (expresion -> termino .) ]


state 30

    (111) if -> IF . APAR condicion CPAR cuerpo
    (112) if -> IF . APAR condicion CPAR cuerpo ELSE cuerpo

    APAR            shift and go to state 71


state 31

    (113) for -> FOR . APAR ID IN ID CPAR cuerpo
    (114) for -> FOR . APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> FOR . APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> FOR . APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> FOR . APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> FOR . APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> FOR . APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> FOR . APAR ID IN ID PUNTO ID CPAR cuerpo
    (121) for -> FOR . APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> FOR . APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo

    APAR            shift and go to state 72


state 32

    (123) while -> WHILE . APAR condicion CPAR cuerpo

    APAR            shift and go to state 73


state 33

    (52) termino -> factor .

    SUMA            reduce using rule 52 (termino -> factor .)
    RESTA           reduce using rule 52 (termino -> factor .)
    MULT            reduce using rule 52 (termino -> factor .)
    DIVISION        reduce using rule 52 (termino -> factor .)
    MODULO          reduce using rule 52 (termino -> factor .)
    $end            reduce using rule 52 (termino -> factor .)
    CPAR            reduce using rule 52 (termino -> factor .)
    IGUALIGUAL      reduce using rule 52 (termino -> factor .)
    TRIPLEIGUAL     reduce using rule 52 (termino -> factor .)
    NOIGUAL         reduce using rule 52 (termino -> factor .)
    MAYOR           reduce using rule 52 (termino -> factor .)
    MENOR           reduce using rule 52 (termino -> factor .)
    MAYORIGUAL      reduce using rule 52 (termino -> factor .)
    MENORIGUAL      reduce using rule 52 (termino -> factor .)
    ELSE            reduce using rule 52 (termino -> factor .)
    CLLAVE          reduce using rule 52 (termino -> factor .)
    AND             reduce using rule 52 (termino -> factor .)
    OR              reduce using rule 52 (termino -> factor .)


state 34

    (83) metodo -> atributo PUNTO . ID APAR CPAR
    (84) metodo -> atributo PUNTO . ID APAR ID CPAR
    (87) metodo -> atributo PUNTO . funcion APAR CPAR
    (88) metodo -> atributo PUNTO . funcion APAR ID CPAR
    (67) funcion -> . WITHINDEX
    (68) funcion -> . GET
    (69) funcion -> . SLICE
    (70) funcion -> . COMPARETO
    (71) funcion -> . GETINDEX
    (72) funcion -> . HASHCODE
    (73) funcion -> . CONTAINS
    (74) funcion -> . SIZE
    (75) funcion -> . ISEMPTY
    (76) funcion -> . TOSTRING
    (77) funcion -> . TOLIST
    (78) funcion -> . PRINT
    (79) funcion -> . PRINTLN
    (80) funcion -> . INDICES

    ID              shift and go to state 74
    WITHINDEX       shift and go to state 76
    GET             shift and go to state 77
    SLICE           shift and go to state 78
    COMPARETO       shift and go to state 79
    GETINDEX        shift and go to state 80
    HASHCODE        shift and go to state 81
    CONTAINS        shift and go to state 82
    SIZE            shift and go to state 83
    ISEMPTY         shift and go to state 84
    TOSTRING        shift and go to state 85
    TOLIST          shift and go to state 86
    PRINT           shift and go to state 87
    PRINTLN         shift and go to state 88
    INDICES         shift and go to state 89

    funcion                        shift and go to state 75

state 35

    (7) asignacion -> VAL ID . tipoAsignacion
    (10) tipoAsignacion -> . declaracion
    (11) tipoAsignacion -> . inicializacion
    (12) tipoAsignacion -> . declaracion inicializacion
    (13) declaracion -> . DOSPUNTOS tipoDato
    (14) inicializacion -> . IGUAL valor

    DOSPUNTOS       shift and go to state 93
    IGUAL           shift and go to state 38

    tipoAsignacion                 shift and go to state 90
    declaracion                    shift and go to state 91
    inicializacion                 shift and go to state 92

state 36

    (9) asignacion -> ID inicializacion .

    $end            reduce using rule 9 (asignacion -> ID inicializacion .)
    IGUALIGUAL      reduce using rule 9 (asignacion -> ID inicializacion .)
    TRIPLEIGUAL     reduce using rule 9 (asignacion -> ID inicializacion .)
    NOIGUAL         reduce using rule 9 (asignacion -> ID inicializacion .)
    MAYOR           reduce using rule 9 (asignacion -> ID inicializacion .)
    MENOR           reduce using rule 9 (asignacion -> ID inicializacion .)
    MAYORIGUAL      reduce using rule 9 (asignacion -> ID inicializacion .)
    MENORIGUAL      reduce using rule 9 (asignacion -> ID inicializacion .)
    AND             reduce using rule 9 (asignacion -> ID inicializacion .)
    OR              reduce using rule 9 (asignacion -> ID inicializacion .)
    CPAR            reduce using rule 9 (asignacion -> ID inicializacion .)
    ELSE            reduce using rule 9 (asignacion -> ID inicializacion .)
    CLLAVE          reduce using rule 9 (asignacion -> ID inicializacion .)


state 37

    (81) metodo -> ID PUNTO . ID APAR CPAR
    (82) metodo -> ID PUNTO . ID APAR ID CPAR
    (85) metodo -> ID PUNTO . funcion APAR CPAR
    (86) metodo -> ID PUNTO . funcion APAR ID CPAR
    (89) atributo -> ID PUNTO . ID
    (67) funcion -> . WITHINDEX
    (68) funcion -> . GET
    (69) funcion -> . SLICE
    (70) funcion -> . COMPARETO
    (71) funcion -> . GETINDEX
    (72) funcion -> . HASHCODE
    (73) funcion -> . CONTAINS
    (74) funcion -> . SIZE
    (75) funcion -> . ISEMPTY
    (76) funcion -> . TOSTRING
    (77) funcion -> . TOLIST
    (78) funcion -> . PRINT
    (79) funcion -> . PRINTLN
    (80) funcion -> . INDICES

    ID              shift and go to state 94
    WITHINDEX       shift and go to state 76
    GET             shift and go to state 77
    SLICE           shift and go to state 78
    COMPARETO       shift and go to state 79
    GETINDEX        shift and go to state 80
    HASHCODE        shift and go to state 81
    CONTAINS        shift and go to state 82
    SIZE            shift and go to state 83
    ISEMPTY         shift and go to state 84
    TOSTRING        shift and go to state 85
    TOLIST          shift and go to state 86
    PRINT           shift and go to state 87
    PRINTLN         shift and go to state 88
    INDICES         shift and go to state 89

    funcion                        shift and go to state 95

state 38

    (14) inicializacion -> IGUAL . valor
    (23) valor -> . ENTEROEXPRESION
    (24) valor -> . flotante
    (25) valor -> . BOOLEANOEXPRESION
    (26) valor -> . CADENAEXPRESION
    (27) valor -> . list
    (28) valor -> . set
    (29) valor -> . pair
    (30) valor -> . triple
    (31) valor -> . expresion
    (32) valor -> . ID
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (37) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (38) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR

    ENTEROEXPRESION shift and go to state 97
    BOOLEANOEXPRESION shift and go to state 13
    CADENAEXPRESION shift and go to state 14
    ID              shift and go to state 98
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26
    PAIR            shift and go to state 27
    TRIPLE          shift and go to state 28
    APAR            shift and go to state 20

    valor                          shift and go to state 96
    flotante                       shift and go to state 12
    list                           shift and go to state 15
    set                            shift and go to state 16
    pair                           shift and go to state 17
    triple                         shift and go to state 18
    expresion                      shift and go to state 19
    termino                        shift and go to state 29
    factor                         shift and go to state 33

state 39

    (8) asignacion -> VAR ID . tipoAsignacion
    (10) tipoAsignacion -> . declaracion
    (11) tipoAsignacion -> . inicializacion
    (12) tipoAsignacion -> . declaracion inicializacion
    (13) declaracion -> . DOSPUNTOS tipoDato
    (14) inicializacion -> . IGUAL valor

    DOSPUNTOS       shift and go to state 93
    IGUAL           shift and go to state 38

    tipoAsignacion                 shift and go to state 99
    declaracion                    shift and go to state 91
    inicializacion                 shift and go to state 92

state 40

    (33) flotante -> ENTEROEXPRESION F .

    $end            reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    SUMA            reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    RESTA           reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    MULT            reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    DIVISION        reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    MODULO          reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    CPAR            reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    IGUALIGUAL      reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    TRIPLEIGUAL     reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    NOIGUAL         reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    MAYOR           reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    MENOR           reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    MAYORIGUAL      reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    MENORIGUAL      reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    ELSE            reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    CLLAVE          reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    AND             reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    OR              reduce using rule 33 (flotante -> ENTEROEXPRESION F .)
    COMA            reduce using rule 33 (flotante -> ENTEROEXPRESION F .)


state 41

    (34) flotante -> ENTEROEXPRESION PUNTO . ENTEROEXPRESION F

    ENTEROEXPRESION shift and go to state 100


state 42

    (41) expresion -> expresion SUMA . termino
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 48
    CADENAEXPRESION shift and go to state 50
    ID              shift and go to state 53
    APAR            shift and go to state 20
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26

    termino                        shift and go to state 101
    factor                         shift and go to state 33
    flotante                       shift and go to state 49
    list                           shift and go to state 51
    set                            shift and go to state 52

state 43

    (42) expresion -> expresion RESTA . termino
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 48
    CADENAEXPRESION shift and go to state 50
    ID              shift and go to state 53
    APAR            shift and go to state 20
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26

    termino                        shift and go to state 102
    factor                         shift and go to state 33
    flotante                       shift and go to state 49
    list                           shift and go to state 51
    set                            shift and go to state 52

state 44

    (43) expresion -> expresion DIVISION . termino
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 48
    CADENAEXPRESION shift and go to state 50
    ID              shift and go to state 53
    APAR            shift and go to state 20
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26

    termino                        shift and go to state 103
    factor                         shift and go to state 33
    flotante                       shift and go to state 49
    list                           shift and go to state 51
    set                            shift and go to state 52

state 45

    (44) expresion -> expresion MULT . termino
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 48
    CADENAEXPRESION shift and go to state 50
    ID              shift and go to state 53
    APAR            shift and go to state 20
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26

    termino                        shift and go to state 104
    factor                         shift and go to state 33
    flotante                       shift and go to state 49
    list                           shift and go to state 51
    set                            shift and go to state 52

state 46

    (45) expresion -> expresion MODULO . termino
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 48
    CADENAEXPRESION shift and go to state 50
    ID              shift and go to state 53
    APAR            shift and go to state 20
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26

    termino                        shift and go to state 105
    factor                         shift and go to state 33
    flotante                       shift and go to state 49
    list                           shift and go to state 51
    set                            shift and go to state 52

state 47

    (66) factor -> APAR expresion . CPAR
    (41) expresion -> expresion . SUMA termino
    (42) expresion -> expresion . RESTA termino
    (43) expresion -> expresion . DIVISION termino
    (44) expresion -> expresion . MULT termino
    (45) expresion -> expresion . MODULO termino

    CPAR            shift and go to state 106
    SUMA            shift and go to state 42
    RESTA           shift and go to state 43
    DIVISION        shift and go to state 44
    MULT            shift and go to state 45
    MODULO          shift and go to state 46


state 48

    (53) termino -> ENTEROEXPRESION .
    (59) factor -> ENTEROEXPRESION .
    (33) flotante -> ENTEROEXPRESION . F
    (34) flotante -> ENTEROEXPRESION . PUNTO ENTEROEXPRESION F

  ! reduce/reduce conflict for SUMA resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for RESTA resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MULT resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for DIVISION resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MODULO resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYOR resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENOR resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for AND resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for OR resolved using rule 53 (termino -> ENTEROEXPRESION .)
    SUMA            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    RESTA           reduce using rule 53 (termino -> ENTEROEXPRESION .)
    MULT            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 53 (termino -> ENTEROEXPRESION .)
    MODULO          reduce using rule 53 (termino -> ENTEROEXPRESION .)
    CPAR            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    $end            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    IGUALIGUAL      reduce using rule 53 (termino -> ENTEROEXPRESION .)
    TRIPLEIGUAL     reduce using rule 53 (termino -> ENTEROEXPRESION .)
    NOIGUAL         reduce using rule 53 (termino -> ENTEROEXPRESION .)
    MAYOR           reduce using rule 53 (termino -> ENTEROEXPRESION .)
    MENOR           reduce using rule 53 (termino -> ENTEROEXPRESION .)
    MAYORIGUAL      reduce using rule 53 (termino -> ENTEROEXPRESION .)
    MENORIGUAL      reduce using rule 53 (termino -> ENTEROEXPRESION .)
    ELSE            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 53 (termino -> ENTEROEXPRESION .)
    AND             reduce using rule 53 (termino -> ENTEROEXPRESION .)
    OR              reduce using rule 53 (termino -> ENTEROEXPRESION .)
    F               shift and go to state 40
    PUNTO           shift and go to state 41

  ! SUMA            [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! RESTA           [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! MULT            [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! DIVISION        [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! MODULO          [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! CPAR            [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! $end            [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! IGUALIGUAL      [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! TRIPLEIGUAL     [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! NOIGUAL         [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! MAYOR           [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! MENOR           [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! MAYORIGUAL      [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! MENORIGUAL      [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! ELSE            [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! AND             [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! OR              [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]


state 49

    (54) termino -> flotante .
    (60) factor -> flotante .

  ! reduce/reduce conflict for SUMA resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for RESTA resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for MULT resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for DIVISION resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for MODULO resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for CPAR resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for $end resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for MAYOR resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for MENOR resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for ELSE resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for AND resolved using rule 54 (termino -> flotante .)
  ! reduce/reduce conflict for OR resolved using rule 54 (termino -> flotante .)
    SUMA            reduce using rule 54 (termino -> flotante .)
    RESTA           reduce using rule 54 (termino -> flotante .)
    MULT            reduce using rule 54 (termino -> flotante .)
    DIVISION        reduce using rule 54 (termino -> flotante .)
    MODULO          reduce using rule 54 (termino -> flotante .)
    CPAR            reduce using rule 54 (termino -> flotante .)
    $end            reduce using rule 54 (termino -> flotante .)
    IGUALIGUAL      reduce using rule 54 (termino -> flotante .)
    TRIPLEIGUAL     reduce using rule 54 (termino -> flotante .)
    NOIGUAL         reduce using rule 54 (termino -> flotante .)
    MAYOR           reduce using rule 54 (termino -> flotante .)
    MENOR           reduce using rule 54 (termino -> flotante .)
    MAYORIGUAL      reduce using rule 54 (termino -> flotante .)
    MENORIGUAL      reduce using rule 54 (termino -> flotante .)
    ELSE            reduce using rule 54 (termino -> flotante .)
    CLLAVE          reduce using rule 54 (termino -> flotante .)
    AND             reduce using rule 54 (termino -> flotante .)
    OR              reduce using rule 54 (termino -> flotante .)

  ! SUMA            [ reduce using rule 60 (factor -> flotante .) ]
  ! RESTA           [ reduce using rule 60 (factor -> flotante .) ]
  ! MULT            [ reduce using rule 60 (factor -> flotante .) ]
  ! DIVISION        [ reduce using rule 60 (factor -> flotante .) ]
  ! MODULO          [ reduce using rule 60 (factor -> flotante .) ]
  ! CPAR            [ reduce using rule 60 (factor -> flotante .) ]
  ! $end            [ reduce using rule 60 (factor -> flotante .) ]
  ! IGUALIGUAL      [ reduce using rule 60 (factor -> flotante .) ]
  ! TRIPLEIGUAL     [ reduce using rule 60 (factor -> flotante .) ]
  ! NOIGUAL         [ reduce using rule 60 (factor -> flotante .) ]
  ! MAYOR           [ reduce using rule 60 (factor -> flotante .) ]
  ! MENOR           [ reduce using rule 60 (factor -> flotante .) ]
  ! MAYORIGUAL      [ reduce using rule 60 (factor -> flotante .) ]
  ! MENORIGUAL      [ reduce using rule 60 (factor -> flotante .) ]
  ! ELSE            [ reduce using rule 60 (factor -> flotante .) ]
  ! CLLAVE          [ reduce using rule 60 (factor -> flotante .) ]
  ! AND             [ reduce using rule 60 (factor -> flotante .) ]
  ! OR              [ reduce using rule 60 (factor -> flotante .) ]


state 50

    (55) termino -> CADENAEXPRESION .

    SUMA            reduce using rule 55 (termino -> CADENAEXPRESION .)
    RESTA           reduce using rule 55 (termino -> CADENAEXPRESION .)
    MULT            reduce using rule 55 (termino -> CADENAEXPRESION .)
    DIVISION        reduce using rule 55 (termino -> CADENAEXPRESION .)
    MODULO          reduce using rule 55 (termino -> CADENAEXPRESION .)
    CPAR            reduce using rule 55 (termino -> CADENAEXPRESION .)
    $end            reduce using rule 55 (termino -> CADENAEXPRESION .)
    IGUALIGUAL      reduce using rule 55 (termino -> CADENAEXPRESION .)
    TRIPLEIGUAL     reduce using rule 55 (termino -> CADENAEXPRESION .)
    NOIGUAL         reduce using rule 55 (termino -> CADENAEXPRESION .)
    MAYOR           reduce using rule 55 (termino -> CADENAEXPRESION .)
    MENOR           reduce using rule 55 (termino -> CADENAEXPRESION .)
    MAYORIGUAL      reduce using rule 55 (termino -> CADENAEXPRESION .)
    MENORIGUAL      reduce using rule 55 (termino -> CADENAEXPRESION .)
    ELSE            reduce using rule 55 (termino -> CADENAEXPRESION .)
    CLLAVE          reduce using rule 55 (termino -> CADENAEXPRESION .)
    AND             reduce using rule 55 (termino -> CADENAEXPRESION .)
    OR              reduce using rule 55 (termino -> CADENAEXPRESION .)


state 51

    (56) termino -> list .

    SUMA            reduce using rule 56 (termino -> list .)
    RESTA           reduce using rule 56 (termino -> list .)
    MULT            reduce using rule 56 (termino -> list .)
    DIVISION        reduce using rule 56 (termino -> list .)
    MODULO          reduce using rule 56 (termino -> list .)
    CPAR            reduce using rule 56 (termino -> list .)
    $end            reduce using rule 56 (termino -> list .)
    IGUALIGUAL      reduce using rule 56 (termino -> list .)
    TRIPLEIGUAL     reduce using rule 56 (termino -> list .)
    NOIGUAL         reduce using rule 56 (termino -> list .)
    MAYOR           reduce using rule 56 (termino -> list .)
    MENOR           reduce using rule 56 (termino -> list .)
    MAYORIGUAL      reduce using rule 56 (termino -> list .)
    MENORIGUAL      reduce using rule 56 (termino -> list .)
    ELSE            reduce using rule 56 (termino -> list .)
    CLLAVE          reduce using rule 56 (termino -> list .)
    AND             reduce using rule 56 (termino -> list .)
    OR              reduce using rule 56 (termino -> list .)


state 52

    (57) termino -> set .

    SUMA            reduce using rule 57 (termino -> set .)
    RESTA           reduce using rule 57 (termino -> set .)
    MULT            reduce using rule 57 (termino -> set .)
    DIVISION        reduce using rule 57 (termino -> set .)
    MODULO          reduce using rule 57 (termino -> set .)
    CPAR            reduce using rule 57 (termino -> set .)
    $end            reduce using rule 57 (termino -> set .)
    IGUALIGUAL      reduce using rule 57 (termino -> set .)
    TRIPLEIGUAL     reduce using rule 57 (termino -> set .)
    NOIGUAL         reduce using rule 57 (termino -> set .)
    MAYOR           reduce using rule 57 (termino -> set .)
    MENOR           reduce using rule 57 (termino -> set .)
    MAYORIGUAL      reduce using rule 57 (termino -> set .)
    MENORIGUAL      reduce using rule 57 (termino -> set .)
    ELSE            reduce using rule 57 (termino -> set .)
    CLLAVE          reduce using rule 57 (termino -> set .)
    AND             reduce using rule 57 (termino -> set .)
    OR              reduce using rule 57 (termino -> set .)


state 53

    (58) termino -> ID .
    (61) factor -> ID .

  ! reduce/reduce conflict for SUMA resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for RESTA resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for MULT resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for DIVISION resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for CPAR resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for MAYOR resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for MENOR resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for AND resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for OR resolved using rule 58 (termino -> ID .)
    SUMA            reduce using rule 58 (termino -> ID .)
    RESTA           reduce using rule 58 (termino -> ID .)
    MULT            reduce using rule 58 (termino -> ID .)
    DIVISION        reduce using rule 58 (termino -> ID .)
    MODULO          reduce using rule 58 (termino -> ID .)
    CPAR            reduce using rule 58 (termino -> ID .)
    $end            reduce using rule 58 (termino -> ID .)
    IGUALIGUAL      reduce using rule 58 (termino -> ID .)
    TRIPLEIGUAL     reduce using rule 58 (termino -> ID .)
    NOIGUAL         reduce using rule 58 (termino -> ID .)
    MAYOR           reduce using rule 58 (termino -> ID .)
    MENOR           reduce using rule 58 (termino -> ID .)
    MAYORIGUAL      reduce using rule 58 (termino -> ID .)
    MENORIGUAL      reduce using rule 58 (termino -> ID .)
    ELSE            reduce using rule 58 (termino -> ID .)
    CLLAVE          reduce using rule 58 (termino -> ID .)
    AND             reduce using rule 58 (termino -> ID .)
    OR              reduce using rule 58 (termino -> ID .)

  ! SUMA            [ reduce using rule 61 (factor -> ID .) ]
  ! RESTA           [ reduce using rule 61 (factor -> ID .) ]
  ! MULT            [ reduce using rule 61 (factor -> ID .) ]
  ! DIVISION        [ reduce using rule 61 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 61 (factor -> ID .) ]
  ! CPAR            [ reduce using rule 61 (factor -> ID .) ]
  ! $end            [ reduce using rule 61 (factor -> ID .) ]
  ! IGUALIGUAL      [ reduce using rule 61 (factor -> ID .) ]
  ! TRIPLEIGUAL     [ reduce using rule 61 (factor -> ID .) ]
  ! NOIGUAL         [ reduce using rule 61 (factor -> ID .) ]
  ! MAYOR           [ reduce using rule 61 (factor -> ID .) ]
  ! MENOR           [ reduce using rule 61 (factor -> ID .) ]
  ! MAYORIGUAL      [ reduce using rule 61 (factor -> ID .) ]
  ! MENORIGUAL      [ reduce using rule 61 (factor -> ID .) ]
  ! ELSE            [ reduce using rule 61 (factor -> ID .) ]
  ! CLLAVE          [ reduce using rule 61 (factor -> ID .) ]
  ! AND             [ reduce using rule 61 (factor -> ID .) ]
  ! OR              [ reduce using rule 61 (factor -> ID .) ]


state 54

    (104) condicion -> compmiembro comparador . compmiembro
    (105) condicion -> compmiembro comparador . compmiembro conector compmiembro comparador compmiembro
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (89) atributo -> . ID PUNTO ID
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion

    ID              shift and go to state 108
    ENTEROEXPRESION shift and go to state 109
    VAL             shift and go to state 8
    VAR             shift and go to state 10

    compmiembro                    shift and go to state 107
    metodo                         shift and go to state 110
    atributo                       shift and go to state 111
    asignacion                     shift and go to state 112

state 55

    (90) comparador -> IGUALIGUAL .

    ID              reduce using rule 90 (comparador -> IGUALIGUAL .)
    ENTEROEXPRESION reduce using rule 90 (comparador -> IGUALIGUAL .)
    VAL             reduce using rule 90 (comparador -> IGUALIGUAL .)
    VAR             reduce using rule 90 (comparador -> IGUALIGUAL .)


state 56

    (91) comparador -> TRIPLEIGUAL .

    ID              reduce using rule 91 (comparador -> TRIPLEIGUAL .)
    ENTEROEXPRESION reduce using rule 91 (comparador -> TRIPLEIGUAL .)
    VAL             reduce using rule 91 (comparador -> TRIPLEIGUAL .)
    VAR             reduce using rule 91 (comparador -> TRIPLEIGUAL .)


state 57

    (92) comparador -> NOIGUAL .

    ID              reduce using rule 92 (comparador -> NOIGUAL .)
    ENTEROEXPRESION reduce using rule 92 (comparador -> NOIGUAL .)
    VAL             reduce using rule 92 (comparador -> NOIGUAL .)
    VAR             reduce using rule 92 (comparador -> NOIGUAL .)


state 58

    (93) comparador -> MAYOR .

    ID              reduce using rule 93 (comparador -> MAYOR .)
    ENTEROEXPRESION reduce using rule 93 (comparador -> MAYOR .)
    VAL             reduce using rule 93 (comparador -> MAYOR .)
    VAR             reduce using rule 93 (comparador -> MAYOR .)


state 59

    (94) comparador -> MENOR .

    ID              reduce using rule 94 (comparador -> MENOR .)
    ENTEROEXPRESION reduce using rule 94 (comparador -> MENOR .)
    VAL             reduce using rule 94 (comparador -> MENOR .)
    VAR             reduce using rule 94 (comparador -> MENOR .)


state 60

    (95) comparador -> MAYORIGUAL .

    ID              reduce using rule 95 (comparador -> MAYORIGUAL .)
    ENTEROEXPRESION reduce using rule 95 (comparador -> MAYORIGUAL .)
    VAL             reduce using rule 95 (comparador -> MAYORIGUAL .)
    VAR             reduce using rule 95 (comparador -> MAYORIGUAL .)


state 61

    (96) comparador -> MENORIGUAL .

    ID              reduce using rule 96 (comparador -> MENORIGUAL .)
    ENTEROEXPRESION reduce using rule 96 (comparador -> MENORIGUAL .)
    VAL             reduce using rule 96 (comparador -> MENORIGUAL .)
    VAR             reduce using rule 96 (comparador -> MENORIGUAL .)


state 62

    (35) list -> LISTOF APAR . contenido CPAR
    (39) contenido -> . factorEspecial
    (40) contenido -> . factorEspecial COMA contenido
    (62) factorEspecial -> . factor
    (63) factorEspecial -> . CADENAEXPRESION
    (64) factorEspecial -> . list
    (65) factorEspecial -> . set
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 116
    ENTEROEXPRESION shift and go to state 119
    ID              shift and go to state 121
    APAR            shift and go to state 20
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26

    contenido                      shift and go to state 113
    factorEspecial                 shift and go to state 114
    factor                         shift and go to state 115
    list                           shift and go to state 117
    set                            shift and go to state 118
    flotante                       shift and go to state 120

state 63

    (36) set -> SETOF APAR . contenido CPAR
    (39) contenido -> . factorEspecial
    (40) contenido -> . factorEspecial COMA contenido
    (62) factorEspecial -> . factor
    (63) factorEspecial -> . CADENAEXPRESION
    (64) factorEspecial -> . list
    (65) factorEspecial -> . set
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 116
    ENTEROEXPRESION shift and go to state 119
    ID              shift and go to state 121
    APAR            shift and go to state 20
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26

    contenido                      shift and go to state 122
    factorEspecial                 shift and go to state 114
    factor                         shift and go to state 115
    list                           shift and go to state 117
    set                            shift and go to state 118
    flotante                       shift and go to state 120

state 64

    (37) pair -> PAIR APAR . factorEspecial COMA factorEspecial CPAR
    (62) factorEspecial -> . factor
    (63) factorEspecial -> . CADENAEXPRESION
    (64) factorEspecial -> . list
    (65) factorEspecial -> . set
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 116
    ENTEROEXPRESION shift and go to state 119
    ID              shift and go to state 121
    APAR            shift and go to state 20
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26

    factorEspecial                 shift and go to state 123
    factor                         shift and go to state 115
    list                           shift and go to state 117
    set                            shift and go to state 118
    flotante                       shift and go to state 120

state 65

    (38) triple -> TRIPLE APAR . factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (62) factorEspecial -> . factor
    (63) factorEspecial -> . CADENAEXPRESION
    (64) factorEspecial -> . list
    (65) factorEspecial -> . set
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 116
    ENTEROEXPRESION shift and go to state 119
    ID              shift and go to state 121
    APAR            shift and go to state 20
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26

    factorEspecial                 shift and go to state 124
    factor                         shift and go to state 115
    list                           shift and go to state 117
    set                            shift and go to state 118
    flotante                       shift and go to state 120

state 66

    (47) termino -> termino SUMA . factorEspecial
    (62) factorEspecial -> . factor
    (63) factorEspecial -> . CADENAEXPRESION
    (64) factorEspecial -> . list
    (65) factorEspecial -> . set
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 116
    ENTEROEXPRESION shift and go to state 119
    ID              shift and go to state 121
    APAR            shift and go to state 20
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26

    factorEspecial                 shift and go to state 125
    factor                         shift and go to state 115
    list                           shift and go to state 117
    set                            shift and go to state 118
    flotante                       shift and go to state 120

state 67

    (48) termino -> termino RESTA . factor
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    ENTEROEXPRESION shift and go to state 119
    ID              shift and go to state 121
    APAR            shift and go to state 20

    factor                         shift and go to state 126
    flotante                       shift and go to state 120

state 68

    (49) termino -> termino MULT . factor
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    ENTEROEXPRESION shift and go to state 119
    ID              shift and go to state 121
    APAR            shift and go to state 20

    factor                         shift and go to state 127
    flotante                       shift and go to state 120

state 69

    (50) termino -> termino DIVISION . factor
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    ENTEROEXPRESION shift and go to state 119
    ID              shift and go to state 121
    APAR            shift and go to state 20

    factor                         shift and go to state 128
    flotante                       shift and go to state 120

state 70

    (51) termino -> termino MODULO . factor
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    ENTEROEXPRESION shift and go to state 119
    ID              shift and go to state 121
    APAR            shift and go to state 20

    factor                         shift and go to state 129
    flotante                       shift and go to state 120

state 71

    (111) if -> IF APAR . condicion CPAR cuerpo
    (112) if -> IF APAR . condicion CPAR cuerpo ELSE cuerpo
    (104) condicion -> . compmiembro comparador compmiembro
    (105) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (89) atributo -> . ID PUNTO ID
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion

    ID              shift and go to state 108
    ENTEROEXPRESION shift and go to state 109
    VAL             shift and go to state 8
    VAR             shift and go to state 10

    condicion                      shift and go to state 130
    compmiembro                    shift and go to state 24
    metodo                         shift and go to state 110
    atributo                       shift and go to state 111
    asignacion                     shift and go to state 112

state 72

    (113) for -> FOR APAR . ID IN ID CPAR cuerpo
    (114) for -> FOR APAR . ID DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> FOR APAR . ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> FOR APAR . ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> FOR APAR . ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> FOR APAR . ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> FOR APAR . ID IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> FOR APAR . ID IN ID PUNTO ID CPAR cuerpo
    (121) for -> FOR APAR . APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> FOR APAR . APAR ID COMA ID CPAR IN ID CPAR cuerpo

    ID              shift and go to state 132
    APAR            shift and go to state 131


state 73

    (123) while -> WHILE APAR . condicion CPAR cuerpo
    (104) condicion -> . compmiembro comparador compmiembro
    (105) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (89) atributo -> . ID PUNTO ID
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion

    ID              shift and go to state 108
    ENTEROEXPRESION shift and go to state 109
    VAL             shift and go to state 8
    VAR             shift and go to state 10

    condicion                      shift and go to state 133
    compmiembro                    shift and go to state 24
    metodo                         shift and go to state 110
    atributo                       shift and go to state 111
    asignacion                     shift and go to state 112

state 74

    (83) metodo -> atributo PUNTO ID . APAR CPAR
    (84) metodo -> atributo PUNTO ID . APAR ID CPAR

    APAR            shift and go to state 134


state 75

    (87) metodo -> atributo PUNTO funcion . APAR CPAR
    (88) metodo -> atributo PUNTO funcion . APAR ID CPAR

    APAR            shift and go to state 135


state 76

    (67) funcion -> WITHINDEX .

    APAR            reduce using rule 67 (funcion -> WITHINDEX .)


state 77

    (68) funcion -> GET .

    APAR            reduce using rule 68 (funcion -> GET .)


state 78

    (69) funcion -> SLICE .

    APAR            reduce using rule 69 (funcion -> SLICE .)


state 79

    (70) funcion -> COMPARETO .

    APAR            reduce using rule 70 (funcion -> COMPARETO .)


state 80

    (71) funcion -> GETINDEX .

    APAR            reduce using rule 71 (funcion -> GETINDEX .)


state 81

    (72) funcion -> HASHCODE .

    APAR            reduce using rule 72 (funcion -> HASHCODE .)


state 82

    (73) funcion -> CONTAINS .

    APAR            reduce using rule 73 (funcion -> CONTAINS .)


state 83

    (74) funcion -> SIZE .

    APAR            reduce using rule 74 (funcion -> SIZE .)


state 84

    (75) funcion -> ISEMPTY .

    APAR            reduce using rule 75 (funcion -> ISEMPTY .)


state 85

    (76) funcion -> TOSTRING .

    APAR            reduce using rule 76 (funcion -> TOSTRING .)


state 86

    (77) funcion -> TOLIST .

    APAR            reduce using rule 77 (funcion -> TOLIST .)


state 87

    (78) funcion -> PRINT .

    APAR            reduce using rule 78 (funcion -> PRINT .)


state 88

    (79) funcion -> PRINTLN .

    APAR            reduce using rule 79 (funcion -> PRINTLN .)


state 89

    (80) funcion -> INDICES .

    APAR            reduce using rule 80 (funcion -> INDICES .)


state 90

    (7) asignacion -> VAL ID tipoAsignacion .

    $end            reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    IGUALIGUAL      reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    TRIPLEIGUAL     reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    NOIGUAL         reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    MAYOR           reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    MENOR           reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    MAYORIGUAL      reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    MENORIGUAL      reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    AND             reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    OR              reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    CPAR            reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    ELSE            reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    CLLAVE          reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)


state 91

    (10) tipoAsignacion -> declaracion .
    (12) tipoAsignacion -> declaracion . inicializacion
    (14) inicializacion -> . IGUAL valor

    $end            reduce using rule 10 (tipoAsignacion -> declaracion .)
    IGUALIGUAL      reduce using rule 10 (tipoAsignacion -> declaracion .)
    TRIPLEIGUAL     reduce using rule 10 (tipoAsignacion -> declaracion .)
    NOIGUAL         reduce using rule 10 (tipoAsignacion -> declaracion .)
    MAYOR           reduce using rule 10 (tipoAsignacion -> declaracion .)
    MENOR           reduce using rule 10 (tipoAsignacion -> declaracion .)
    MAYORIGUAL      reduce using rule 10 (tipoAsignacion -> declaracion .)
    MENORIGUAL      reduce using rule 10 (tipoAsignacion -> declaracion .)
    AND             reduce using rule 10 (tipoAsignacion -> declaracion .)
    OR              reduce using rule 10 (tipoAsignacion -> declaracion .)
    CPAR            reduce using rule 10 (tipoAsignacion -> declaracion .)
    ELSE            reduce using rule 10 (tipoAsignacion -> declaracion .)
    CLLAVE          reduce using rule 10 (tipoAsignacion -> declaracion .)
    IGUAL           shift and go to state 38

    inicializacion                 shift and go to state 136

state 92

    (11) tipoAsignacion -> inicializacion .

    $end            reduce using rule 11 (tipoAsignacion -> inicializacion .)
    IGUALIGUAL      reduce using rule 11 (tipoAsignacion -> inicializacion .)
    TRIPLEIGUAL     reduce using rule 11 (tipoAsignacion -> inicializacion .)
    NOIGUAL         reduce using rule 11 (tipoAsignacion -> inicializacion .)
    MAYOR           reduce using rule 11 (tipoAsignacion -> inicializacion .)
    MENOR           reduce using rule 11 (tipoAsignacion -> inicializacion .)
    MAYORIGUAL      reduce using rule 11 (tipoAsignacion -> inicializacion .)
    MENORIGUAL      reduce using rule 11 (tipoAsignacion -> inicializacion .)
    AND             reduce using rule 11 (tipoAsignacion -> inicializacion .)
    OR              reduce using rule 11 (tipoAsignacion -> inicializacion .)
    CPAR            reduce using rule 11 (tipoAsignacion -> inicializacion .)
    ELSE            reduce using rule 11 (tipoAsignacion -> inicializacion .)
    CLLAVE          reduce using rule 11 (tipoAsignacion -> inicializacion .)


state 93

    (13) declaracion -> DOSPUNTOS . tipoDato
    (15) tipoDato -> . INT
    (16) tipoDato -> . FLOAT
    (17) tipoDato -> . BOOLEAN
    (18) tipoDato -> . STRING
    (19) tipoDato -> . LIST MENOR tipoDato MAYOR
    (20) tipoDato -> . SET MENOR tipoDato MAYOR
    (21) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (22) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 138
    FLOAT           shift and go to state 139
    BOOLEAN         shift and go to state 140
    STRING          shift and go to state 141
    LIST            shift and go to state 142
    SET             shift and go to state 143
    PAIR            shift and go to state 144
    TRIPLE          shift and go to state 145

    tipoDato                       shift and go to state 137

state 94

    (81) metodo -> ID PUNTO ID . APAR CPAR
    (82) metodo -> ID PUNTO ID . APAR ID CPAR
    (89) atributo -> ID PUNTO ID .

    APAR            shift and go to state 146
    PUNTO           reduce using rule 89 (atributo -> ID PUNTO ID .)
    $end            reduce using rule 89 (atributo -> ID PUNTO ID .)
    IGUALIGUAL      reduce using rule 89 (atributo -> ID PUNTO ID .)
    TRIPLEIGUAL     reduce using rule 89 (atributo -> ID PUNTO ID .)
    NOIGUAL         reduce using rule 89 (atributo -> ID PUNTO ID .)
    MAYOR           reduce using rule 89 (atributo -> ID PUNTO ID .)
    MENOR           reduce using rule 89 (atributo -> ID PUNTO ID .)
    MAYORIGUAL      reduce using rule 89 (atributo -> ID PUNTO ID .)
    MENORIGUAL      reduce using rule 89 (atributo -> ID PUNTO ID .)
    AND             reduce using rule 89 (atributo -> ID PUNTO ID .)
    OR              reduce using rule 89 (atributo -> ID PUNTO ID .)
    CPAR            reduce using rule 89 (atributo -> ID PUNTO ID .)
    ELSE            reduce using rule 89 (atributo -> ID PUNTO ID .)
    CLLAVE          reduce using rule 89 (atributo -> ID PUNTO ID .)


state 95

    (85) metodo -> ID PUNTO funcion . APAR CPAR
    (86) metodo -> ID PUNTO funcion . APAR ID CPAR

    APAR            shift and go to state 147


state 96

    (14) inicializacion -> IGUAL valor .

    $end            reduce using rule 14 (inicializacion -> IGUAL valor .)
    IGUALIGUAL      reduce using rule 14 (inicializacion -> IGUAL valor .)
    TRIPLEIGUAL     reduce using rule 14 (inicializacion -> IGUAL valor .)
    NOIGUAL         reduce using rule 14 (inicializacion -> IGUAL valor .)
    MAYOR           reduce using rule 14 (inicializacion -> IGUAL valor .)
    MENOR           reduce using rule 14 (inicializacion -> IGUAL valor .)
    MAYORIGUAL      reduce using rule 14 (inicializacion -> IGUAL valor .)
    MENORIGUAL      reduce using rule 14 (inicializacion -> IGUAL valor .)
    ELSE            reduce using rule 14 (inicializacion -> IGUAL valor .)
    CLLAVE          reduce using rule 14 (inicializacion -> IGUAL valor .)
    AND             reduce using rule 14 (inicializacion -> IGUAL valor .)
    OR              reduce using rule 14 (inicializacion -> IGUAL valor .)
    CPAR            reduce using rule 14 (inicializacion -> IGUAL valor .)


state 97

    (23) valor -> ENTEROEXPRESION .
    (33) flotante -> ENTEROEXPRESION . F
    (34) flotante -> ENTEROEXPRESION . PUNTO ENTEROEXPRESION F
    (53) termino -> ENTEROEXPRESION .
    (59) factor -> ENTEROEXPRESION .

  ! reduce/reduce conflict for $end resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYOR resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENOR resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for AND resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for OR resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for SUMA resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for RESTA resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MULT resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for DIVISION resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MODULO resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYOR resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENOR resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for AND resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for OR resolved using rule 23 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 23 (valor -> ENTEROEXPRESION .)
    $end            reduce using rule 23 (valor -> ENTEROEXPRESION .)
    IGUALIGUAL      reduce using rule 23 (valor -> ENTEROEXPRESION .)
    TRIPLEIGUAL     reduce using rule 23 (valor -> ENTEROEXPRESION .)
    NOIGUAL         reduce using rule 23 (valor -> ENTEROEXPRESION .)
    MAYOR           reduce using rule 23 (valor -> ENTEROEXPRESION .)
    MENOR           reduce using rule 23 (valor -> ENTEROEXPRESION .)
    MAYORIGUAL      reduce using rule 23 (valor -> ENTEROEXPRESION .)
    MENORIGUAL      reduce using rule 23 (valor -> ENTEROEXPRESION .)
    ELSE            reduce using rule 23 (valor -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 23 (valor -> ENTEROEXPRESION .)
    AND             reduce using rule 23 (valor -> ENTEROEXPRESION .)
    OR              reduce using rule 23 (valor -> ENTEROEXPRESION .)
    CPAR            reduce using rule 23 (valor -> ENTEROEXPRESION .)
    F               shift and go to state 40
    PUNTO           shift and go to state 41
    SUMA            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    RESTA           reduce using rule 53 (termino -> ENTEROEXPRESION .)
    MULT            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 53 (termino -> ENTEROEXPRESION .)
    MODULO          reduce using rule 53 (termino -> ENTEROEXPRESION .)

  ! $end            [ reduce using rule 53 (termino -> ENTEROEXPRESION .) ]
  ! IGUALIGUAL      [ reduce using rule 53 (termino -> ENTEROEXPRESION .) ]
  ! TRIPLEIGUAL     [ reduce using rule 53 (termino -> ENTEROEXPRESION .) ]
  ! NOIGUAL         [ reduce using rule 53 (termino -> ENTEROEXPRESION .) ]
  ! MAYOR           [ reduce using rule 53 (termino -> ENTEROEXPRESION .) ]
  ! MENOR           [ reduce using rule 53 (termino -> ENTEROEXPRESION .) ]
  ! MAYORIGUAL      [ reduce using rule 53 (termino -> ENTEROEXPRESION .) ]
  ! MENORIGUAL      [ reduce using rule 53 (termino -> ENTEROEXPRESION .) ]
  ! ELSE            [ reduce using rule 53 (termino -> ENTEROEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 53 (termino -> ENTEROEXPRESION .) ]
  ! AND             [ reduce using rule 53 (termino -> ENTEROEXPRESION .) ]
  ! OR              [ reduce using rule 53 (termino -> ENTEROEXPRESION .) ]
  ! CPAR            [ reduce using rule 53 (termino -> ENTEROEXPRESION .) ]
  ! SUMA            [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! RESTA           [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! MULT            [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! DIVISION        [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! MODULO          [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! $end            [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! IGUALIGUAL      [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! TRIPLEIGUAL     [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! NOIGUAL         [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! MAYOR           [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! MENOR           [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! MAYORIGUAL      [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! MENORIGUAL      [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! ELSE            [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! AND             [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! OR              [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]
  ! CPAR            [ reduce using rule 59 (factor -> ENTEROEXPRESION .) ]


state 98

    (32) valor -> ID .
    (58) termino -> ID .
    (61) factor -> ID .

  ! reduce/reduce conflict for $end resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for MAYOR resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for MENOR resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for AND resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for OR resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for CPAR resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for SUMA resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for RESTA resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for MULT resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for DIVISION resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 58 (termino -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for TRIPLEIGUAL resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for NOIGUAL resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for MAYOR resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for MENOR resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for AND resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for OR resolved using rule 32 (valor -> ID .)
  ! reduce/reduce conflict for CPAR resolved using rule 32 (valor -> ID .)
    $end            reduce using rule 32 (valor -> ID .)
    IGUALIGUAL      reduce using rule 32 (valor -> ID .)
    TRIPLEIGUAL     reduce using rule 32 (valor -> ID .)
    NOIGUAL         reduce using rule 32 (valor -> ID .)
    MAYOR           reduce using rule 32 (valor -> ID .)
    MENOR           reduce using rule 32 (valor -> ID .)
    MAYORIGUAL      reduce using rule 32 (valor -> ID .)
    MENORIGUAL      reduce using rule 32 (valor -> ID .)
    ELSE            reduce using rule 32 (valor -> ID .)
    CLLAVE          reduce using rule 32 (valor -> ID .)
    AND             reduce using rule 32 (valor -> ID .)
    OR              reduce using rule 32 (valor -> ID .)
    CPAR            reduce using rule 32 (valor -> ID .)
    SUMA            reduce using rule 58 (termino -> ID .)
    RESTA           reduce using rule 58 (termino -> ID .)
    MULT            reduce using rule 58 (termino -> ID .)
    DIVISION        reduce using rule 58 (termino -> ID .)
    MODULO          reduce using rule 58 (termino -> ID .)

  ! $end            [ reduce using rule 58 (termino -> ID .) ]
  ! IGUALIGUAL      [ reduce using rule 58 (termino -> ID .) ]
  ! TRIPLEIGUAL     [ reduce using rule 58 (termino -> ID .) ]
  ! NOIGUAL         [ reduce using rule 58 (termino -> ID .) ]
  ! MAYOR           [ reduce using rule 58 (termino -> ID .) ]
  ! MENOR           [ reduce using rule 58 (termino -> ID .) ]
  ! MAYORIGUAL      [ reduce using rule 58 (termino -> ID .) ]
  ! MENORIGUAL      [ reduce using rule 58 (termino -> ID .) ]
  ! ELSE            [ reduce using rule 58 (termino -> ID .) ]
  ! CLLAVE          [ reduce using rule 58 (termino -> ID .) ]
  ! AND             [ reduce using rule 58 (termino -> ID .) ]
  ! OR              [ reduce using rule 58 (termino -> ID .) ]
  ! CPAR            [ reduce using rule 58 (termino -> ID .) ]
  ! SUMA            [ reduce using rule 61 (factor -> ID .) ]
  ! RESTA           [ reduce using rule 61 (factor -> ID .) ]
  ! MULT            [ reduce using rule 61 (factor -> ID .) ]
  ! DIVISION        [ reduce using rule 61 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 61 (factor -> ID .) ]
  ! $end            [ reduce using rule 61 (factor -> ID .) ]
  ! IGUALIGUAL      [ reduce using rule 61 (factor -> ID .) ]
  ! TRIPLEIGUAL     [ reduce using rule 61 (factor -> ID .) ]
  ! NOIGUAL         [ reduce using rule 61 (factor -> ID .) ]
  ! MAYOR           [ reduce using rule 61 (factor -> ID .) ]
  ! MENOR           [ reduce using rule 61 (factor -> ID .) ]
  ! MAYORIGUAL      [ reduce using rule 61 (factor -> ID .) ]
  ! MENORIGUAL      [ reduce using rule 61 (factor -> ID .) ]
  ! ELSE            [ reduce using rule 61 (factor -> ID .) ]
  ! CLLAVE          [ reduce using rule 61 (factor -> ID .) ]
  ! AND             [ reduce using rule 61 (factor -> ID .) ]
  ! OR              [ reduce using rule 61 (factor -> ID .) ]
  ! CPAR            [ reduce using rule 61 (factor -> ID .) ]


state 99

    (8) asignacion -> VAR ID tipoAsignacion .

    $end            reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    IGUALIGUAL      reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    TRIPLEIGUAL     reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    NOIGUAL         reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    MAYOR           reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    MENOR           reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    MAYORIGUAL      reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    MENORIGUAL      reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    AND             reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    OR              reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    CPAR            reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    ELSE            reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    CLLAVE          reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)


state 100

    (34) flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION . F

    F               shift and go to state 148


state 101

    (41) expresion -> expresion SUMA termino .
    (47) termino -> termino . SUMA factorEspecial
    (48) termino -> termino . RESTA factor
    (49) termino -> termino . MULT factor
    (50) termino -> termino . DIVISION factor
    (51) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 41 (expresion -> expresion SUMA termino .)
    CPAR            reduce using rule 41 (expresion -> expresion SUMA termino .)
    IGUALIGUAL      reduce using rule 41 (expresion -> expresion SUMA termino .)
    TRIPLEIGUAL     reduce using rule 41 (expresion -> expresion SUMA termino .)
    NOIGUAL         reduce using rule 41 (expresion -> expresion SUMA termino .)
    MAYOR           reduce using rule 41 (expresion -> expresion SUMA termino .)
    MENOR           reduce using rule 41 (expresion -> expresion SUMA termino .)
    MAYORIGUAL      reduce using rule 41 (expresion -> expresion SUMA termino .)
    MENORIGUAL      reduce using rule 41 (expresion -> expresion SUMA termino .)
    ELSE            reduce using rule 41 (expresion -> expresion SUMA termino .)
    CLLAVE          reduce using rule 41 (expresion -> expresion SUMA termino .)
    AND             reduce using rule 41 (expresion -> expresion SUMA termino .)
    OR              reduce using rule 41 (expresion -> expresion SUMA termino .)
    SUMA            shift and go to state 66
    RESTA           shift and go to state 67
    MULT            shift and go to state 68
    DIVISION        shift and go to state 69
    MODULO          shift and go to state 70

  ! SUMA            [ reduce using rule 41 (expresion -> expresion SUMA termino .) ]
  ! RESTA           [ reduce using rule 41 (expresion -> expresion SUMA termino .) ]
  ! DIVISION        [ reduce using rule 41 (expresion -> expresion SUMA termino .) ]
  ! MULT            [ reduce using rule 41 (expresion -> expresion SUMA termino .) ]
  ! MODULO          [ reduce using rule 41 (expresion -> expresion SUMA termino .) ]


state 102

    (42) expresion -> expresion RESTA termino .
    (47) termino -> termino . SUMA factorEspecial
    (48) termino -> termino . RESTA factor
    (49) termino -> termino . MULT factor
    (50) termino -> termino . DIVISION factor
    (51) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 42 (expresion -> expresion RESTA termino .)
    CPAR            reduce using rule 42 (expresion -> expresion RESTA termino .)
    IGUALIGUAL      reduce using rule 42 (expresion -> expresion RESTA termino .)
    TRIPLEIGUAL     reduce using rule 42 (expresion -> expresion RESTA termino .)
    NOIGUAL         reduce using rule 42 (expresion -> expresion RESTA termino .)
    MAYOR           reduce using rule 42 (expresion -> expresion RESTA termino .)
    MENOR           reduce using rule 42 (expresion -> expresion RESTA termino .)
    MAYORIGUAL      reduce using rule 42 (expresion -> expresion RESTA termino .)
    MENORIGUAL      reduce using rule 42 (expresion -> expresion RESTA termino .)
    ELSE            reduce using rule 42 (expresion -> expresion RESTA termino .)
    CLLAVE          reduce using rule 42 (expresion -> expresion RESTA termino .)
    AND             reduce using rule 42 (expresion -> expresion RESTA termino .)
    OR              reduce using rule 42 (expresion -> expresion RESTA termino .)
    SUMA            shift and go to state 66
    RESTA           shift and go to state 67
    MULT            shift and go to state 68
    DIVISION        shift and go to state 69
    MODULO          shift and go to state 70

  ! SUMA            [ reduce using rule 42 (expresion -> expresion RESTA termino .) ]
  ! RESTA           [ reduce using rule 42 (expresion -> expresion RESTA termino .) ]
  ! DIVISION        [ reduce using rule 42 (expresion -> expresion RESTA termino .) ]
  ! MULT            [ reduce using rule 42 (expresion -> expresion RESTA termino .) ]
  ! MODULO          [ reduce using rule 42 (expresion -> expresion RESTA termino .) ]


state 103

    (43) expresion -> expresion DIVISION termino .
    (47) termino -> termino . SUMA factorEspecial
    (48) termino -> termino . RESTA factor
    (49) termino -> termino . MULT factor
    (50) termino -> termino . DIVISION factor
    (51) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 43 (expresion -> expresion DIVISION termino .)
    CPAR            reduce using rule 43 (expresion -> expresion DIVISION termino .)
    IGUALIGUAL      reduce using rule 43 (expresion -> expresion DIVISION termino .)
    TRIPLEIGUAL     reduce using rule 43 (expresion -> expresion DIVISION termino .)
    NOIGUAL         reduce using rule 43 (expresion -> expresion DIVISION termino .)
    MAYOR           reduce using rule 43 (expresion -> expresion DIVISION termino .)
    MENOR           reduce using rule 43 (expresion -> expresion DIVISION termino .)
    MAYORIGUAL      reduce using rule 43 (expresion -> expresion DIVISION termino .)
    MENORIGUAL      reduce using rule 43 (expresion -> expresion DIVISION termino .)
    ELSE            reduce using rule 43 (expresion -> expresion DIVISION termino .)
    CLLAVE          reduce using rule 43 (expresion -> expresion DIVISION termino .)
    AND             reduce using rule 43 (expresion -> expresion DIVISION termino .)
    OR              reduce using rule 43 (expresion -> expresion DIVISION termino .)
    SUMA            shift and go to state 66
    RESTA           shift and go to state 67
    MULT            shift and go to state 68
    DIVISION        shift and go to state 69
    MODULO          shift and go to state 70

  ! SUMA            [ reduce using rule 43 (expresion -> expresion DIVISION termino .) ]
  ! RESTA           [ reduce using rule 43 (expresion -> expresion DIVISION termino .) ]
  ! DIVISION        [ reduce using rule 43 (expresion -> expresion DIVISION termino .) ]
  ! MULT            [ reduce using rule 43 (expresion -> expresion DIVISION termino .) ]
  ! MODULO          [ reduce using rule 43 (expresion -> expresion DIVISION termino .) ]


state 104

    (44) expresion -> expresion MULT termino .
    (47) termino -> termino . SUMA factorEspecial
    (48) termino -> termino . RESTA factor
    (49) termino -> termino . MULT factor
    (50) termino -> termino . DIVISION factor
    (51) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 44 (expresion -> expresion MULT termino .)
    CPAR            reduce using rule 44 (expresion -> expresion MULT termino .)
    IGUALIGUAL      reduce using rule 44 (expresion -> expresion MULT termino .)
    TRIPLEIGUAL     reduce using rule 44 (expresion -> expresion MULT termino .)
    NOIGUAL         reduce using rule 44 (expresion -> expresion MULT termino .)
    MAYOR           reduce using rule 44 (expresion -> expresion MULT termino .)
    MENOR           reduce using rule 44 (expresion -> expresion MULT termino .)
    MAYORIGUAL      reduce using rule 44 (expresion -> expresion MULT termino .)
    MENORIGUAL      reduce using rule 44 (expresion -> expresion MULT termino .)
    ELSE            reduce using rule 44 (expresion -> expresion MULT termino .)
    CLLAVE          reduce using rule 44 (expresion -> expresion MULT termino .)
    AND             reduce using rule 44 (expresion -> expresion MULT termino .)
    OR              reduce using rule 44 (expresion -> expresion MULT termino .)
    SUMA            shift and go to state 66
    RESTA           shift and go to state 67
    MULT            shift and go to state 68
    DIVISION        shift and go to state 69
    MODULO          shift and go to state 70

  ! SUMA            [ reduce using rule 44 (expresion -> expresion MULT termino .) ]
  ! RESTA           [ reduce using rule 44 (expresion -> expresion MULT termino .) ]
  ! DIVISION        [ reduce using rule 44 (expresion -> expresion MULT termino .) ]
  ! MULT            [ reduce using rule 44 (expresion -> expresion MULT termino .) ]
  ! MODULO          [ reduce using rule 44 (expresion -> expresion MULT termino .) ]


state 105

    (45) expresion -> expresion MODULO termino .
    (47) termino -> termino . SUMA factorEspecial
    (48) termino -> termino . RESTA factor
    (49) termino -> termino . MULT factor
    (50) termino -> termino . DIVISION factor
    (51) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 45 (expresion -> expresion MODULO termino .)
    CPAR            reduce using rule 45 (expresion -> expresion MODULO termino .)
    IGUALIGUAL      reduce using rule 45 (expresion -> expresion MODULO termino .)
    TRIPLEIGUAL     reduce using rule 45 (expresion -> expresion MODULO termino .)
    NOIGUAL         reduce using rule 45 (expresion -> expresion MODULO termino .)
    MAYOR           reduce using rule 45 (expresion -> expresion MODULO termino .)
    MENOR           reduce using rule 45 (expresion -> expresion MODULO termino .)
    MAYORIGUAL      reduce using rule 45 (expresion -> expresion MODULO termino .)
    MENORIGUAL      reduce using rule 45 (expresion -> expresion MODULO termino .)
    ELSE            reduce using rule 45 (expresion -> expresion MODULO termino .)
    CLLAVE          reduce using rule 45 (expresion -> expresion MODULO termino .)
    AND             reduce using rule 45 (expresion -> expresion MODULO termino .)
    OR              reduce using rule 45 (expresion -> expresion MODULO termino .)
    SUMA            shift and go to state 66
    RESTA           shift and go to state 67
    MULT            shift and go to state 68
    DIVISION        shift and go to state 69
    MODULO          shift and go to state 70

  ! SUMA            [ reduce using rule 45 (expresion -> expresion MODULO termino .) ]
  ! RESTA           [ reduce using rule 45 (expresion -> expresion MODULO termino .) ]
  ! DIVISION        [ reduce using rule 45 (expresion -> expresion MODULO termino .) ]
  ! MULT            [ reduce using rule 45 (expresion -> expresion MODULO termino .) ]
  ! MODULO          [ reduce using rule 45 (expresion -> expresion MODULO termino .) ]


state 106

    (66) factor -> APAR expresion CPAR .

    SUMA            reduce using rule 66 (factor -> APAR expresion CPAR .)
    RESTA           reduce using rule 66 (factor -> APAR expresion CPAR .)
    MULT            reduce using rule 66 (factor -> APAR expresion CPAR .)
    DIVISION        reduce using rule 66 (factor -> APAR expresion CPAR .)
    MODULO          reduce using rule 66 (factor -> APAR expresion CPAR .)
    $end            reduce using rule 66 (factor -> APAR expresion CPAR .)
    CPAR            reduce using rule 66 (factor -> APAR expresion CPAR .)
    IGUALIGUAL      reduce using rule 66 (factor -> APAR expresion CPAR .)
    TRIPLEIGUAL     reduce using rule 66 (factor -> APAR expresion CPAR .)
    NOIGUAL         reduce using rule 66 (factor -> APAR expresion CPAR .)
    MAYOR           reduce using rule 66 (factor -> APAR expresion CPAR .)
    MENOR           reduce using rule 66 (factor -> APAR expresion CPAR .)
    MAYORIGUAL      reduce using rule 66 (factor -> APAR expresion CPAR .)
    MENORIGUAL      reduce using rule 66 (factor -> APAR expresion CPAR .)
    ELSE            reduce using rule 66 (factor -> APAR expresion CPAR .)
    CLLAVE          reduce using rule 66 (factor -> APAR expresion CPAR .)
    AND             reduce using rule 66 (factor -> APAR expresion CPAR .)
    OR              reduce using rule 66 (factor -> APAR expresion CPAR .)
    COMA            reduce using rule 66 (factor -> APAR expresion CPAR .)


state 107

    (104) condicion -> compmiembro comparador compmiembro .
    (105) condicion -> compmiembro comparador compmiembro . conector compmiembro comparador compmiembro
    (97) conector -> . AND
    (98) conector -> . OR

    $end            reduce using rule 104 (condicion -> compmiembro comparador compmiembro .)
    CPAR            reduce using rule 104 (condicion -> compmiembro comparador compmiembro .)
    ELSE            reduce using rule 104 (condicion -> compmiembro comparador compmiembro .)
    CLLAVE          reduce using rule 104 (condicion -> compmiembro comparador compmiembro .)
    AND             shift and go to state 150
    OR              shift and go to state 151

    conector                       shift and go to state 149

state 108

    (99) compmiembro -> ID .
    (81) metodo -> ID . PUNTO ID APAR CPAR
    (82) metodo -> ID . PUNTO ID APAR ID CPAR
    (85) metodo -> ID . PUNTO funcion APAR CPAR
    (86) metodo -> ID . PUNTO funcion APAR ID CPAR
    (89) atributo -> ID . PUNTO ID
    (9) asignacion -> ID . inicializacion
    (14) inicializacion -> . IGUAL valor

    AND             reduce using rule 99 (compmiembro -> ID .)
    OR              reduce using rule 99 (compmiembro -> ID .)
    $end            reduce using rule 99 (compmiembro -> ID .)
    CPAR            reduce using rule 99 (compmiembro -> ID .)
    ELSE            reduce using rule 99 (compmiembro -> ID .)
    CLLAVE          reduce using rule 99 (compmiembro -> ID .)
    IGUALIGUAL      reduce using rule 99 (compmiembro -> ID .)
    TRIPLEIGUAL     reduce using rule 99 (compmiembro -> ID .)
    NOIGUAL         reduce using rule 99 (compmiembro -> ID .)
    MAYOR           reduce using rule 99 (compmiembro -> ID .)
    MENOR           reduce using rule 99 (compmiembro -> ID .)
    MAYORIGUAL      reduce using rule 99 (compmiembro -> ID .)
    MENORIGUAL      reduce using rule 99 (compmiembro -> ID .)
    PUNTO           shift and go to state 37
    IGUAL           shift and go to state 38

    inicializacion                 shift and go to state 36

state 109

    (100) compmiembro -> ENTEROEXPRESION .

    AND             reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    OR              reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    $end            reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    CPAR            reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    ELSE            reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    IGUALIGUAL      reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    TRIPLEIGUAL     reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    NOIGUAL         reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    MAYOR           reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    MENOR           reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    MAYORIGUAL      reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)
    MENORIGUAL      reduce using rule 100 (compmiembro -> ENTEROEXPRESION .)


state 110

    (101) compmiembro -> metodo .

    AND             reduce using rule 101 (compmiembro -> metodo .)
    OR              reduce using rule 101 (compmiembro -> metodo .)
    $end            reduce using rule 101 (compmiembro -> metodo .)
    CPAR            reduce using rule 101 (compmiembro -> metodo .)
    ELSE            reduce using rule 101 (compmiembro -> metodo .)
    CLLAVE          reduce using rule 101 (compmiembro -> metodo .)
    IGUALIGUAL      reduce using rule 101 (compmiembro -> metodo .)
    TRIPLEIGUAL     reduce using rule 101 (compmiembro -> metodo .)
    NOIGUAL         reduce using rule 101 (compmiembro -> metodo .)
    MAYOR           reduce using rule 101 (compmiembro -> metodo .)
    MENOR           reduce using rule 101 (compmiembro -> metodo .)
    MAYORIGUAL      reduce using rule 101 (compmiembro -> metodo .)
    MENORIGUAL      reduce using rule 101 (compmiembro -> metodo .)


state 111

    (102) compmiembro -> atributo .
    (83) metodo -> atributo . PUNTO ID APAR CPAR
    (84) metodo -> atributo . PUNTO ID APAR ID CPAR
    (87) metodo -> atributo . PUNTO funcion APAR CPAR
    (88) metodo -> atributo . PUNTO funcion APAR ID CPAR

    AND             reduce using rule 102 (compmiembro -> atributo .)
    OR              reduce using rule 102 (compmiembro -> atributo .)
    $end            reduce using rule 102 (compmiembro -> atributo .)
    CPAR            reduce using rule 102 (compmiembro -> atributo .)
    ELSE            reduce using rule 102 (compmiembro -> atributo .)
    CLLAVE          reduce using rule 102 (compmiembro -> atributo .)
    IGUALIGUAL      reduce using rule 102 (compmiembro -> atributo .)
    TRIPLEIGUAL     reduce using rule 102 (compmiembro -> atributo .)
    NOIGUAL         reduce using rule 102 (compmiembro -> atributo .)
    MAYOR           reduce using rule 102 (compmiembro -> atributo .)
    MENOR           reduce using rule 102 (compmiembro -> atributo .)
    MAYORIGUAL      reduce using rule 102 (compmiembro -> atributo .)
    MENORIGUAL      reduce using rule 102 (compmiembro -> atributo .)
    PUNTO           shift and go to state 34


state 112

    (103) compmiembro -> asignacion .

    AND             reduce using rule 103 (compmiembro -> asignacion .)
    OR              reduce using rule 103 (compmiembro -> asignacion .)
    $end            reduce using rule 103 (compmiembro -> asignacion .)
    CPAR            reduce using rule 103 (compmiembro -> asignacion .)
    ELSE            reduce using rule 103 (compmiembro -> asignacion .)
    CLLAVE          reduce using rule 103 (compmiembro -> asignacion .)
    IGUALIGUAL      reduce using rule 103 (compmiembro -> asignacion .)
    TRIPLEIGUAL     reduce using rule 103 (compmiembro -> asignacion .)
    NOIGUAL         reduce using rule 103 (compmiembro -> asignacion .)
    MAYOR           reduce using rule 103 (compmiembro -> asignacion .)
    MENOR           reduce using rule 103 (compmiembro -> asignacion .)
    MAYORIGUAL      reduce using rule 103 (compmiembro -> asignacion .)
    MENORIGUAL      reduce using rule 103 (compmiembro -> asignacion .)


state 113

    (35) list -> LISTOF APAR contenido . CPAR

    CPAR            shift and go to state 152


state 114

    (39) contenido -> factorEspecial .
    (40) contenido -> factorEspecial . COMA contenido

    CPAR            reduce using rule 39 (contenido -> factorEspecial .)
    COMA            shift and go to state 153


state 115

    (62) factorEspecial -> factor .

    COMA            reduce using rule 62 (factorEspecial -> factor .)
    CPAR            reduce using rule 62 (factorEspecial -> factor .)
    SUMA            reduce using rule 62 (factorEspecial -> factor .)
    RESTA           reduce using rule 62 (factorEspecial -> factor .)
    MULT            reduce using rule 62 (factorEspecial -> factor .)
    DIVISION        reduce using rule 62 (factorEspecial -> factor .)
    MODULO          reduce using rule 62 (factorEspecial -> factor .)
    $end            reduce using rule 62 (factorEspecial -> factor .)
    IGUALIGUAL      reduce using rule 62 (factorEspecial -> factor .)
    TRIPLEIGUAL     reduce using rule 62 (factorEspecial -> factor .)
    NOIGUAL         reduce using rule 62 (factorEspecial -> factor .)
    MAYOR           reduce using rule 62 (factorEspecial -> factor .)
    MENOR           reduce using rule 62 (factorEspecial -> factor .)
    MAYORIGUAL      reduce using rule 62 (factorEspecial -> factor .)
    MENORIGUAL      reduce using rule 62 (factorEspecial -> factor .)
    ELSE            reduce using rule 62 (factorEspecial -> factor .)
    CLLAVE          reduce using rule 62 (factorEspecial -> factor .)
    AND             reduce using rule 62 (factorEspecial -> factor .)
    OR              reduce using rule 62 (factorEspecial -> factor .)


state 116

    (63) factorEspecial -> CADENAEXPRESION .

    COMA            reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    CPAR            reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    SUMA            reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    RESTA           reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    MULT            reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    DIVISION        reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    MODULO          reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    $end            reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    IGUALIGUAL      reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    TRIPLEIGUAL     reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    NOIGUAL         reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    MAYOR           reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    MENOR           reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    MAYORIGUAL      reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    MENORIGUAL      reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    ELSE            reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    CLLAVE          reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    AND             reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)
    OR              reduce using rule 63 (factorEspecial -> CADENAEXPRESION .)


state 117

    (64) factorEspecial -> list .

    COMA            reduce using rule 64 (factorEspecial -> list .)
    CPAR            reduce using rule 64 (factorEspecial -> list .)
    SUMA            reduce using rule 64 (factorEspecial -> list .)
    RESTA           reduce using rule 64 (factorEspecial -> list .)
    MULT            reduce using rule 64 (factorEspecial -> list .)
    DIVISION        reduce using rule 64 (factorEspecial -> list .)
    MODULO          reduce using rule 64 (factorEspecial -> list .)
    $end            reduce using rule 64 (factorEspecial -> list .)
    IGUALIGUAL      reduce using rule 64 (factorEspecial -> list .)
    TRIPLEIGUAL     reduce using rule 64 (factorEspecial -> list .)
    NOIGUAL         reduce using rule 64 (factorEspecial -> list .)
    MAYOR           reduce using rule 64 (factorEspecial -> list .)
    MENOR           reduce using rule 64 (factorEspecial -> list .)
    MAYORIGUAL      reduce using rule 64 (factorEspecial -> list .)
    MENORIGUAL      reduce using rule 64 (factorEspecial -> list .)
    ELSE            reduce using rule 64 (factorEspecial -> list .)
    CLLAVE          reduce using rule 64 (factorEspecial -> list .)
    AND             reduce using rule 64 (factorEspecial -> list .)
    OR              reduce using rule 64 (factorEspecial -> list .)


state 118

    (65) factorEspecial -> set .

    COMA            reduce using rule 65 (factorEspecial -> set .)
    CPAR            reduce using rule 65 (factorEspecial -> set .)
    SUMA            reduce using rule 65 (factorEspecial -> set .)
    RESTA           reduce using rule 65 (factorEspecial -> set .)
    MULT            reduce using rule 65 (factorEspecial -> set .)
    DIVISION        reduce using rule 65 (factorEspecial -> set .)
    MODULO          reduce using rule 65 (factorEspecial -> set .)
    $end            reduce using rule 65 (factorEspecial -> set .)
    IGUALIGUAL      reduce using rule 65 (factorEspecial -> set .)
    TRIPLEIGUAL     reduce using rule 65 (factorEspecial -> set .)
    NOIGUAL         reduce using rule 65 (factorEspecial -> set .)
    MAYOR           reduce using rule 65 (factorEspecial -> set .)
    MENOR           reduce using rule 65 (factorEspecial -> set .)
    MAYORIGUAL      reduce using rule 65 (factorEspecial -> set .)
    MENORIGUAL      reduce using rule 65 (factorEspecial -> set .)
    ELSE            reduce using rule 65 (factorEspecial -> set .)
    CLLAVE          reduce using rule 65 (factorEspecial -> set .)
    AND             reduce using rule 65 (factorEspecial -> set .)
    OR              reduce using rule 65 (factorEspecial -> set .)


state 119

    (59) factor -> ENTEROEXPRESION .
    (33) flotante -> ENTEROEXPRESION . F
    (34) flotante -> ENTEROEXPRESION . PUNTO ENTEROEXPRESION F

    COMA            reduce using rule 59 (factor -> ENTEROEXPRESION .)
    CPAR            reduce using rule 59 (factor -> ENTEROEXPRESION .)
    SUMA            reduce using rule 59 (factor -> ENTEROEXPRESION .)
    RESTA           reduce using rule 59 (factor -> ENTEROEXPRESION .)
    MULT            reduce using rule 59 (factor -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 59 (factor -> ENTEROEXPRESION .)
    MODULO          reduce using rule 59 (factor -> ENTEROEXPRESION .)
    $end            reduce using rule 59 (factor -> ENTEROEXPRESION .)
    IGUALIGUAL      reduce using rule 59 (factor -> ENTEROEXPRESION .)
    TRIPLEIGUAL     reduce using rule 59 (factor -> ENTEROEXPRESION .)
    NOIGUAL         reduce using rule 59 (factor -> ENTEROEXPRESION .)
    MAYOR           reduce using rule 59 (factor -> ENTEROEXPRESION .)
    MENOR           reduce using rule 59 (factor -> ENTEROEXPRESION .)
    MAYORIGUAL      reduce using rule 59 (factor -> ENTEROEXPRESION .)
    MENORIGUAL      reduce using rule 59 (factor -> ENTEROEXPRESION .)
    ELSE            reduce using rule 59 (factor -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 59 (factor -> ENTEROEXPRESION .)
    AND             reduce using rule 59 (factor -> ENTEROEXPRESION .)
    OR              reduce using rule 59 (factor -> ENTEROEXPRESION .)
    F               shift and go to state 40
    PUNTO           shift and go to state 41


state 120

    (60) factor -> flotante .

    COMA            reduce using rule 60 (factor -> flotante .)
    CPAR            reduce using rule 60 (factor -> flotante .)
    SUMA            reduce using rule 60 (factor -> flotante .)
    RESTA           reduce using rule 60 (factor -> flotante .)
    MULT            reduce using rule 60 (factor -> flotante .)
    DIVISION        reduce using rule 60 (factor -> flotante .)
    MODULO          reduce using rule 60 (factor -> flotante .)
    $end            reduce using rule 60 (factor -> flotante .)
    IGUALIGUAL      reduce using rule 60 (factor -> flotante .)
    TRIPLEIGUAL     reduce using rule 60 (factor -> flotante .)
    NOIGUAL         reduce using rule 60 (factor -> flotante .)
    MAYOR           reduce using rule 60 (factor -> flotante .)
    MENOR           reduce using rule 60 (factor -> flotante .)
    MAYORIGUAL      reduce using rule 60 (factor -> flotante .)
    MENORIGUAL      reduce using rule 60 (factor -> flotante .)
    ELSE            reduce using rule 60 (factor -> flotante .)
    CLLAVE          reduce using rule 60 (factor -> flotante .)
    AND             reduce using rule 60 (factor -> flotante .)
    OR              reduce using rule 60 (factor -> flotante .)


state 121

    (61) factor -> ID .

    COMA            reduce using rule 61 (factor -> ID .)
    CPAR            reduce using rule 61 (factor -> ID .)
    SUMA            reduce using rule 61 (factor -> ID .)
    RESTA           reduce using rule 61 (factor -> ID .)
    MULT            reduce using rule 61 (factor -> ID .)
    DIVISION        reduce using rule 61 (factor -> ID .)
    MODULO          reduce using rule 61 (factor -> ID .)
    $end            reduce using rule 61 (factor -> ID .)
    IGUALIGUAL      reduce using rule 61 (factor -> ID .)
    TRIPLEIGUAL     reduce using rule 61 (factor -> ID .)
    NOIGUAL         reduce using rule 61 (factor -> ID .)
    MAYOR           reduce using rule 61 (factor -> ID .)
    MENOR           reduce using rule 61 (factor -> ID .)
    MAYORIGUAL      reduce using rule 61 (factor -> ID .)
    MENORIGUAL      reduce using rule 61 (factor -> ID .)
    ELSE            reduce using rule 61 (factor -> ID .)
    CLLAVE          reduce using rule 61 (factor -> ID .)
    AND             reduce using rule 61 (factor -> ID .)
    OR              reduce using rule 61 (factor -> ID .)


state 122

    (36) set -> SETOF APAR contenido . CPAR

    CPAR            shift and go to state 154


state 123

    (37) pair -> PAIR APAR factorEspecial . COMA factorEspecial CPAR

    COMA            shift and go to state 155


state 124

    (38) triple -> TRIPLE APAR factorEspecial . COMA factorEspecial COMA factorEspecial CPAR

    COMA            shift and go to state 156


state 125

    (47) termino -> termino SUMA factorEspecial .

    SUMA            reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    RESTA           reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    MULT            reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    DIVISION        reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    MODULO          reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    $end            reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    CPAR            reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    IGUALIGUAL      reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    TRIPLEIGUAL     reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    NOIGUAL         reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    MAYOR           reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    MENOR           reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    MAYORIGUAL      reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    MENORIGUAL      reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    ELSE            reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    CLLAVE          reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    AND             reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    OR              reduce using rule 47 (termino -> termino SUMA factorEspecial .)


state 126

    (48) termino -> termino RESTA factor .

    SUMA            reduce using rule 48 (termino -> termino RESTA factor .)
    RESTA           reduce using rule 48 (termino -> termino RESTA factor .)
    MULT            reduce using rule 48 (termino -> termino RESTA factor .)
    DIVISION        reduce using rule 48 (termino -> termino RESTA factor .)
    MODULO          reduce using rule 48 (termino -> termino RESTA factor .)
    $end            reduce using rule 48 (termino -> termino RESTA factor .)
    CPAR            reduce using rule 48 (termino -> termino RESTA factor .)
    IGUALIGUAL      reduce using rule 48 (termino -> termino RESTA factor .)
    TRIPLEIGUAL     reduce using rule 48 (termino -> termino RESTA factor .)
    NOIGUAL         reduce using rule 48 (termino -> termino RESTA factor .)
    MAYOR           reduce using rule 48 (termino -> termino RESTA factor .)
    MENOR           reduce using rule 48 (termino -> termino RESTA factor .)
    MAYORIGUAL      reduce using rule 48 (termino -> termino RESTA factor .)
    MENORIGUAL      reduce using rule 48 (termino -> termino RESTA factor .)
    ELSE            reduce using rule 48 (termino -> termino RESTA factor .)
    CLLAVE          reduce using rule 48 (termino -> termino RESTA factor .)
    AND             reduce using rule 48 (termino -> termino RESTA factor .)
    OR              reduce using rule 48 (termino -> termino RESTA factor .)


state 127

    (49) termino -> termino MULT factor .

    SUMA            reduce using rule 49 (termino -> termino MULT factor .)
    RESTA           reduce using rule 49 (termino -> termino MULT factor .)
    MULT            reduce using rule 49 (termino -> termino MULT factor .)
    DIVISION        reduce using rule 49 (termino -> termino MULT factor .)
    MODULO          reduce using rule 49 (termino -> termino MULT factor .)
    $end            reduce using rule 49 (termino -> termino MULT factor .)
    CPAR            reduce using rule 49 (termino -> termino MULT factor .)
    IGUALIGUAL      reduce using rule 49 (termino -> termino MULT factor .)
    TRIPLEIGUAL     reduce using rule 49 (termino -> termino MULT factor .)
    NOIGUAL         reduce using rule 49 (termino -> termino MULT factor .)
    MAYOR           reduce using rule 49 (termino -> termino MULT factor .)
    MENOR           reduce using rule 49 (termino -> termino MULT factor .)
    MAYORIGUAL      reduce using rule 49 (termino -> termino MULT factor .)
    MENORIGUAL      reduce using rule 49 (termino -> termino MULT factor .)
    ELSE            reduce using rule 49 (termino -> termino MULT factor .)
    CLLAVE          reduce using rule 49 (termino -> termino MULT factor .)
    AND             reduce using rule 49 (termino -> termino MULT factor .)
    OR              reduce using rule 49 (termino -> termino MULT factor .)


state 128

    (50) termino -> termino DIVISION factor .

    SUMA            reduce using rule 50 (termino -> termino DIVISION factor .)
    RESTA           reduce using rule 50 (termino -> termino DIVISION factor .)
    MULT            reduce using rule 50 (termino -> termino DIVISION factor .)
    DIVISION        reduce using rule 50 (termino -> termino DIVISION factor .)
    MODULO          reduce using rule 50 (termino -> termino DIVISION factor .)
    $end            reduce using rule 50 (termino -> termino DIVISION factor .)
    CPAR            reduce using rule 50 (termino -> termino DIVISION factor .)
    IGUALIGUAL      reduce using rule 50 (termino -> termino DIVISION factor .)
    TRIPLEIGUAL     reduce using rule 50 (termino -> termino DIVISION factor .)
    NOIGUAL         reduce using rule 50 (termino -> termino DIVISION factor .)
    MAYOR           reduce using rule 50 (termino -> termino DIVISION factor .)
    MENOR           reduce using rule 50 (termino -> termino DIVISION factor .)
    MAYORIGUAL      reduce using rule 50 (termino -> termino DIVISION factor .)
    MENORIGUAL      reduce using rule 50 (termino -> termino DIVISION factor .)
    ELSE            reduce using rule 50 (termino -> termino DIVISION factor .)
    CLLAVE          reduce using rule 50 (termino -> termino DIVISION factor .)
    AND             reduce using rule 50 (termino -> termino DIVISION factor .)
    OR              reduce using rule 50 (termino -> termino DIVISION factor .)


state 129

    (51) termino -> termino MODULO factor .

    SUMA            reduce using rule 51 (termino -> termino MODULO factor .)
    RESTA           reduce using rule 51 (termino -> termino MODULO factor .)
    MULT            reduce using rule 51 (termino -> termino MODULO factor .)
    DIVISION        reduce using rule 51 (termino -> termino MODULO factor .)
    MODULO          reduce using rule 51 (termino -> termino MODULO factor .)
    $end            reduce using rule 51 (termino -> termino MODULO factor .)
    CPAR            reduce using rule 51 (termino -> termino MODULO factor .)
    IGUALIGUAL      reduce using rule 51 (termino -> termino MODULO factor .)
    TRIPLEIGUAL     reduce using rule 51 (termino -> termino MODULO factor .)
    NOIGUAL         reduce using rule 51 (termino -> termino MODULO factor .)
    MAYOR           reduce using rule 51 (termino -> termino MODULO factor .)
    MENOR           reduce using rule 51 (termino -> termino MODULO factor .)
    MAYORIGUAL      reduce using rule 51 (termino -> termino MODULO factor .)
    MENORIGUAL      reduce using rule 51 (termino -> termino MODULO factor .)
    ELSE            reduce using rule 51 (termino -> termino MODULO factor .)
    CLLAVE          reduce using rule 51 (termino -> termino MODULO factor .)
    AND             reduce using rule 51 (termino -> termino MODULO factor .)
    OR              reduce using rule 51 (termino -> termino MODULO factor .)


state 130

    (111) if -> IF APAR condicion . CPAR cuerpo
    (112) if -> IF APAR condicion . CPAR cuerpo ELSE cuerpo

    CPAR            shift and go to state 157


state 131

    (121) for -> FOR APAR APAR . ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> FOR APAR APAR . ID COMA ID CPAR IN ID CPAR cuerpo

    ID              shift and go to state 158


state 132

    (113) for -> FOR APAR ID . IN ID CPAR cuerpo
    (114) for -> FOR APAR ID . DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> FOR APAR ID . IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> FOR APAR ID . IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> FOR APAR ID . IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> FOR APAR ID . IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> FOR APAR ID . IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> FOR APAR ID . IN ID PUNTO ID CPAR cuerpo

    IN              shift and go to state 159
    DOSPUNTOS       shift and go to state 160


state 133

    (123) while -> WHILE APAR condicion . CPAR cuerpo

    CPAR            shift and go to state 161


state 134

    (83) metodo -> atributo PUNTO ID APAR . CPAR
    (84) metodo -> atributo PUNTO ID APAR . ID CPAR

    CPAR            shift and go to state 163
    ID              shift and go to state 162


state 135

    (87) metodo -> atributo PUNTO funcion APAR . CPAR
    (88) metodo -> atributo PUNTO funcion APAR . ID CPAR

    CPAR            shift and go to state 164
    ID              shift and go to state 165


state 136

    (12) tipoAsignacion -> declaracion inicializacion .

    $end            reduce using rule 12 (tipoAsignacion -> declaracion inicializacion .)
    IGUALIGUAL      reduce using rule 12 (tipoAsignacion -> declaracion inicializacion .)
    TRIPLEIGUAL     reduce using rule 12 (tipoAsignacion -> declaracion inicializacion .)
    NOIGUAL         reduce using rule 12 (tipoAsignacion -> declaracion inicializacion .)
    MAYOR           reduce using rule 12 (tipoAsignacion -> declaracion inicializacion .)
    MENOR           reduce using rule 12 (tipoAsignacion -> declaracion inicializacion .)
    MAYORIGUAL      reduce using rule 12 (tipoAsignacion -> declaracion inicializacion .)
    MENORIGUAL      reduce using rule 12 (tipoAsignacion -> declaracion inicializacion .)
    AND             reduce using rule 12 (tipoAsignacion -> declaracion inicializacion .)
    OR              reduce using rule 12 (tipoAsignacion -> declaracion inicializacion .)
    CPAR            reduce using rule 12 (tipoAsignacion -> declaracion inicializacion .)
    ELSE            reduce using rule 12 (tipoAsignacion -> declaracion inicializacion .)
    CLLAVE          reduce using rule 12 (tipoAsignacion -> declaracion inicializacion .)


state 137

    (13) declaracion -> DOSPUNTOS tipoDato .

    IGUAL           reduce using rule 13 (declaracion -> DOSPUNTOS tipoDato .)
    $end            reduce using rule 13 (declaracion -> DOSPUNTOS tipoDato .)
    IGUALIGUAL      reduce using rule 13 (declaracion -> DOSPUNTOS tipoDato .)
    TRIPLEIGUAL     reduce using rule 13 (declaracion -> DOSPUNTOS tipoDato .)
    NOIGUAL         reduce using rule 13 (declaracion -> DOSPUNTOS tipoDato .)
    MAYOR           reduce using rule 13 (declaracion -> DOSPUNTOS tipoDato .)
    MENOR           reduce using rule 13 (declaracion -> DOSPUNTOS tipoDato .)
    MAYORIGUAL      reduce using rule 13 (declaracion -> DOSPUNTOS tipoDato .)
    MENORIGUAL      reduce using rule 13 (declaracion -> DOSPUNTOS tipoDato .)
    AND             reduce using rule 13 (declaracion -> DOSPUNTOS tipoDato .)
    OR              reduce using rule 13 (declaracion -> DOSPUNTOS tipoDato .)
    CPAR            reduce using rule 13 (declaracion -> DOSPUNTOS tipoDato .)
    ELSE            reduce using rule 13 (declaracion -> DOSPUNTOS tipoDato .)
    CLLAVE          reduce using rule 13 (declaracion -> DOSPUNTOS tipoDato .)


state 138

    (15) tipoDato -> INT .

    IGUAL           reduce using rule 15 (tipoDato -> INT .)
    $end            reduce using rule 15 (tipoDato -> INT .)
    IGUALIGUAL      reduce using rule 15 (tipoDato -> INT .)
    TRIPLEIGUAL     reduce using rule 15 (tipoDato -> INT .)
    NOIGUAL         reduce using rule 15 (tipoDato -> INT .)
    MAYOR           reduce using rule 15 (tipoDato -> INT .)
    MENOR           reduce using rule 15 (tipoDato -> INT .)
    MAYORIGUAL      reduce using rule 15 (tipoDato -> INT .)
    MENORIGUAL      reduce using rule 15 (tipoDato -> INT .)
    AND             reduce using rule 15 (tipoDato -> INT .)
    OR              reduce using rule 15 (tipoDato -> INT .)
    CPAR            reduce using rule 15 (tipoDato -> INT .)
    ELSE            reduce using rule 15 (tipoDato -> INT .)
    CLLAVE          reduce using rule 15 (tipoDato -> INT .)
    COMA            reduce using rule 15 (tipoDato -> INT .)


state 139

    (16) tipoDato -> FLOAT .

    IGUAL           reduce using rule 16 (tipoDato -> FLOAT .)
    $end            reduce using rule 16 (tipoDato -> FLOAT .)
    IGUALIGUAL      reduce using rule 16 (tipoDato -> FLOAT .)
    TRIPLEIGUAL     reduce using rule 16 (tipoDato -> FLOAT .)
    NOIGUAL         reduce using rule 16 (tipoDato -> FLOAT .)
    MAYOR           reduce using rule 16 (tipoDato -> FLOAT .)
    MENOR           reduce using rule 16 (tipoDato -> FLOAT .)
    MAYORIGUAL      reduce using rule 16 (tipoDato -> FLOAT .)
    MENORIGUAL      reduce using rule 16 (tipoDato -> FLOAT .)
    AND             reduce using rule 16 (tipoDato -> FLOAT .)
    OR              reduce using rule 16 (tipoDato -> FLOAT .)
    CPAR            reduce using rule 16 (tipoDato -> FLOAT .)
    ELSE            reduce using rule 16 (tipoDato -> FLOAT .)
    CLLAVE          reduce using rule 16 (tipoDato -> FLOAT .)
    COMA            reduce using rule 16 (tipoDato -> FLOAT .)


state 140

    (17) tipoDato -> BOOLEAN .

    IGUAL           reduce using rule 17 (tipoDato -> BOOLEAN .)
    $end            reduce using rule 17 (tipoDato -> BOOLEAN .)
    IGUALIGUAL      reduce using rule 17 (tipoDato -> BOOLEAN .)
    TRIPLEIGUAL     reduce using rule 17 (tipoDato -> BOOLEAN .)
    NOIGUAL         reduce using rule 17 (tipoDato -> BOOLEAN .)
    MAYOR           reduce using rule 17 (tipoDato -> BOOLEAN .)
    MENOR           reduce using rule 17 (tipoDato -> BOOLEAN .)
    MAYORIGUAL      reduce using rule 17 (tipoDato -> BOOLEAN .)
    MENORIGUAL      reduce using rule 17 (tipoDato -> BOOLEAN .)
    AND             reduce using rule 17 (tipoDato -> BOOLEAN .)
    OR              reduce using rule 17 (tipoDato -> BOOLEAN .)
    CPAR            reduce using rule 17 (tipoDato -> BOOLEAN .)
    ELSE            reduce using rule 17 (tipoDato -> BOOLEAN .)
    CLLAVE          reduce using rule 17 (tipoDato -> BOOLEAN .)
    COMA            reduce using rule 17 (tipoDato -> BOOLEAN .)


state 141

    (18) tipoDato -> STRING .

    IGUAL           reduce using rule 18 (tipoDato -> STRING .)
    $end            reduce using rule 18 (tipoDato -> STRING .)
    IGUALIGUAL      reduce using rule 18 (tipoDato -> STRING .)
    TRIPLEIGUAL     reduce using rule 18 (tipoDato -> STRING .)
    NOIGUAL         reduce using rule 18 (tipoDato -> STRING .)
    MAYOR           reduce using rule 18 (tipoDato -> STRING .)
    MENOR           reduce using rule 18 (tipoDato -> STRING .)
    MAYORIGUAL      reduce using rule 18 (tipoDato -> STRING .)
    MENORIGUAL      reduce using rule 18 (tipoDato -> STRING .)
    AND             reduce using rule 18 (tipoDato -> STRING .)
    OR              reduce using rule 18 (tipoDato -> STRING .)
    CPAR            reduce using rule 18 (tipoDato -> STRING .)
    ELSE            reduce using rule 18 (tipoDato -> STRING .)
    CLLAVE          reduce using rule 18 (tipoDato -> STRING .)
    COMA            reduce using rule 18 (tipoDato -> STRING .)


state 142

    (19) tipoDato -> LIST . MENOR tipoDato MAYOR

    MENOR           shift and go to state 166


state 143

    (20) tipoDato -> SET . MENOR tipoDato MAYOR

    MENOR           shift and go to state 167


state 144

    (21) tipoDato -> PAIR . MENOR tipoDato COMA tipoDato MAYOR

    MENOR           shift and go to state 168


state 145

    (22) tipoDato -> TRIPLE . MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    MENOR           shift and go to state 169


state 146

    (81) metodo -> ID PUNTO ID APAR . CPAR
    (82) metodo -> ID PUNTO ID APAR . ID CPAR

    CPAR            shift and go to state 171
    ID              shift and go to state 170


state 147

    (85) metodo -> ID PUNTO funcion APAR . CPAR
    (86) metodo -> ID PUNTO funcion APAR . ID CPAR

    CPAR            shift and go to state 173
    ID              shift and go to state 172


state 148

    (34) flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .

    $end            reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    SUMA            reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    RESTA           reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    MULT            reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    DIVISION        reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    MODULO          reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    CPAR            reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    IGUALIGUAL      reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    TRIPLEIGUAL     reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    NOIGUAL         reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    MAYOR           reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    MENOR           reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    MAYORIGUAL      reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    MENORIGUAL      reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    ELSE            reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    CLLAVE          reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    AND             reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    OR              reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    COMA            reduce using rule 34 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)


state 149

    (105) condicion -> compmiembro comparador compmiembro conector . compmiembro comparador compmiembro
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (89) atributo -> . ID PUNTO ID
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion

    ID              shift and go to state 108
    ENTEROEXPRESION shift and go to state 109
    VAL             shift and go to state 8
    VAR             shift and go to state 10

    compmiembro                    shift and go to state 174
    metodo                         shift and go to state 110
    atributo                       shift and go to state 111
    asignacion                     shift and go to state 112

state 150

    (97) conector -> AND .

    ID              reduce using rule 97 (conector -> AND .)
    ENTEROEXPRESION reduce using rule 97 (conector -> AND .)
    VAL             reduce using rule 97 (conector -> AND .)
    VAR             reduce using rule 97 (conector -> AND .)


state 151

    (98) conector -> OR .

    ID              reduce using rule 98 (conector -> OR .)
    ENTEROEXPRESION reduce using rule 98 (conector -> OR .)
    VAL             reduce using rule 98 (conector -> OR .)
    VAR             reduce using rule 98 (conector -> OR .)


state 152

    (35) list -> LISTOF APAR contenido CPAR .

    $end            reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    SUMA            reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    RESTA           reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    MULT            reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    DIVISION        reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    MODULO          reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    CPAR            reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    IGUALIGUAL      reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    TRIPLEIGUAL     reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    NOIGUAL         reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    MAYOR           reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    MENOR           reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    MAYORIGUAL      reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    MENORIGUAL      reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    ELSE            reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    CLLAVE          reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    AND             reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    OR              reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)
    COMA            reduce using rule 35 (list -> LISTOF APAR contenido CPAR .)


state 153

    (40) contenido -> factorEspecial COMA . contenido
    (39) contenido -> . factorEspecial
    (40) contenido -> . factorEspecial COMA contenido
    (62) factorEspecial -> . factor
    (63) factorEspecial -> . CADENAEXPRESION
    (64) factorEspecial -> . list
    (65) factorEspecial -> . set
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 116
    ENTEROEXPRESION shift and go to state 119
    ID              shift and go to state 121
    APAR            shift and go to state 20
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26

    factorEspecial                 shift and go to state 114
    contenido                      shift and go to state 175
    factor                         shift and go to state 115
    list                           shift and go to state 117
    set                            shift and go to state 118
    flotante                       shift and go to state 120

state 154

    (36) set -> SETOF APAR contenido CPAR .

    $end            reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    SUMA            reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    RESTA           reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    MULT            reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    DIVISION        reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    MODULO          reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    CPAR            reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    IGUALIGUAL      reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    TRIPLEIGUAL     reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    NOIGUAL         reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    MAYOR           reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    MENOR           reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    MAYORIGUAL      reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    MENORIGUAL      reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    ELSE            reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    CLLAVE          reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    AND             reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    OR              reduce using rule 36 (set -> SETOF APAR contenido CPAR .)
    COMA            reduce using rule 36 (set -> SETOF APAR contenido CPAR .)


state 155

    (37) pair -> PAIR APAR factorEspecial COMA . factorEspecial CPAR
    (62) factorEspecial -> . factor
    (63) factorEspecial -> . CADENAEXPRESION
    (64) factorEspecial -> . list
    (65) factorEspecial -> . set
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 116
    ENTEROEXPRESION shift and go to state 119
    ID              shift and go to state 121
    APAR            shift and go to state 20
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26

    factorEspecial                 shift and go to state 176
    factor                         shift and go to state 115
    list                           shift and go to state 117
    set                            shift and go to state 118
    flotante                       shift and go to state 120

state 156

    (38) triple -> TRIPLE APAR factorEspecial COMA . factorEspecial COMA factorEspecial CPAR
    (62) factorEspecial -> . factor
    (63) factorEspecial -> . CADENAEXPRESION
    (64) factorEspecial -> . list
    (65) factorEspecial -> . set
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 116
    ENTEROEXPRESION shift and go to state 119
    ID              shift and go to state 121
    APAR            shift and go to state 20
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26

    factorEspecial                 shift and go to state 177
    factor                         shift and go to state 115
    list                           shift and go to state 117
    set                            shift and go to state 118
    flotante                       shift and go to state 120

state 157

    (111) if -> IF APAR condicion CPAR . cuerpo
    (112) if -> IF APAR condicion CPAR . cuerpo ELSE cuerpo
    (109) cuerpo -> . sentencia
    (110) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . valor
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion
    (23) valor -> . ENTEROEXPRESION
    (24) valor -> . flotante
    (25) valor -> . BOOLEANOEXPRESION
    (26) valor -> . CADENAEXPRESION
    (27) valor -> . list
    (28) valor -> . set
    (29) valor -> . pair
    (30) valor -> . triple
    (31) valor -> . expresion
    (32) valor -> . ID
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (106) control -> . if
    (107) control -> . for
    (108) control -> . while
    (104) condicion -> . compmiembro comparador compmiembro
    (105) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (89) atributo -> . ID PUNTO ID
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (37) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (38) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (111) if -> . IF APAR condicion CPAR cuerpo
    (112) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (113) for -> . FOR APAR ID IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (123) while -> . WHILE APAR condicion CPAR cuerpo
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 180
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 11
    BOOLEANOEXPRESION shift and go to state 13
    CADENAEXPRESION shift and go to state 14
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26
    PAIR            shift and go to state 27
    TRIPLE          shift and go to state 28
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    APAR            shift and go to state 20

    condicion                      shift and go to state 6
    cuerpo                         shift and go to state 178
    sentencia                      shift and go to state 179
    asignacion                     shift and go to state 2
    valor                          shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    atributo                       shift and go to state 7
    flotante                       shift and go to state 12
    list                           shift and go to state 15
    set                            shift and go to state 16
    pair                           shift and go to state 17
    triple                         shift and go to state 18
    expresion                      shift and go to state 19
    if                             shift and go to state 21
    for                            shift and go to state 22
    while                          shift and go to state 23
    compmiembro                    shift and go to state 24
    termino                        shift and go to state 29
    factor                         shift and go to state 33

state 158

    (121) for -> FOR APAR APAR ID . COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> FOR APAR APAR ID . COMA ID CPAR IN ID CPAR cuerpo

    COMA            shift and go to state 181


state 159

    (113) for -> FOR APAR ID IN . ID CPAR cuerpo
    (115) for -> FOR APAR ID IN . ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> FOR APAR ID IN . ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> FOR APAR ID IN . ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> FOR APAR ID IN . ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> FOR APAR ID IN . ID PUNTO INDICES CPAR cuerpo
    (120) for -> FOR APAR ID IN . ID PUNTO ID CPAR cuerpo

    ID              shift and go to state 182
    ENTEROEXPRESION shift and go to state 183


state 160

    (114) for -> FOR APAR ID DOSPUNTOS . INT IN ID CPAR cuerpo

    INT             shift and go to state 184


state 161

    (123) while -> WHILE APAR condicion CPAR . cuerpo
    (109) cuerpo -> . sentencia
    (110) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . valor
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion
    (23) valor -> . ENTEROEXPRESION
    (24) valor -> . flotante
    (25) valor -> . BOOLEANOEXPRESION
    (26) valor -> . CADENAEXPRESION
    (27) valor -> . list
    (28) valor -> . set
    (29) valor -> . pair
    (30) valor -> . triple
    (31) valor -> . expresion
    (32) valor -> . ID
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (106) control -> . if
    (107) control -> . for
    (108) control -> . while
    (104) condicion -> . compmiembro comparador compmiembro
    (105) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (89) atributo -> . ID PUNTO ID
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (37) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (38) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (111) if -> . IF APAR condicion CPAR cuerpo
    (112) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (113) for -> . FOR APAR ID IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (123) while -> . WHILE APAR condicion CPAR cuerpo
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 180
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 11
    BOOLEANOEXPRESION shift and go to state 13
    CADENAEXPRESION shift and go to state 14
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26
    PAIR            shift and go to state 27
    TRIPLE          shift and go to state 28
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    APAR            shift and go to state 20

    condicion                      shift and go to state 6
    cuerpo                         shift and go to state 185
    sentencia                      shift and go to state 179
    asignacion                     shift and go to state 2
    valor                          shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    atributo                       shift and go to state 7
    flotante                       shift and go to state 12
    list                           shift and go to state 15
    set                            shift and go to state 16
    pair                           shift and go to state 17
    triple                         shift and go to state 18
    expresion                      shift and go to state 19
    if                             shift and go to state 21
    for                            shift and go to state 22
    while                          shift and go to state 23
    compmiembro                    shift and go to state 24
    termino                        shift and go to state 29
    factor                         shift and go to state 33

state 162

    (84) metodo -> atributo PUNTO ID APAR ID . CPAR

    CPAR            shift and go to state 186


state 163

    (83) metodo -> atributo PUNTO ID APAR CPAR .

    $end            reduce using rule 83 (metodo -> atributo PUNTO ID APAR CPAR .)
    IGUALIGUAL      reduce using rule 83 (metodo -> atributo PUNTO ID APAR CPAR .)
    TRIPLEIGUAL     reduce using rule 83 (metodo -> atributo PUNTO ID APAR CPAR .)
    NOIGUAL         reduce using rule 83 (metodo -> atributo PUNTO ID APAR CPAR .)
    MAYOR           reduce using rule 83 (metodo -> atributo PUNTO ID APAR CPAR .)
    MENOR           reduce using rule 83 (metodo -> atributo PUNTO ID APAR CPAR .)
    MAYORIGUAL      reduce using rule 83 (metodo -> atributo PUNTO ID APAR CPAR .)
    MENORIGUAL      reduce using rule 83 (metodo -> atributo PUNTO ID APAR CPAR .)
    AND             reduce using rule 83 (metodo -> atributo PUNTO ID APAR CPAR .)
    OR              reduce using rule 83 (metodo -> atributo PUNTO ID APAR CPAR .)
    CPAR            reduce using rule 83 (metodo -> atributo PUNTO ID APAR CPAR .)
    ELSE            reduce using rule 83 (metodo -> atributo PUNTO ID APAR CPAR .)
    CLLAVE          reduce using rule 83 (metodo -> atributo PUNTO ID APAR CPAR .)


state 164

    (87) metodo -> atributo PUNTO funcion APAR CPAR .

    $end            reduce using rule 87 (metodo -> atributo PUNTO funcion APAR CPAR .)
    IGUALIGUAL      reduce using rule 87 (metodo -> atributo PUNTO funcion APAR CPAR .)
    TRIPLEIGUAL     reduce using rule 87 (metodo -> atributo PUNTO funcion APAR CPAR .)
    NOIGUAL         reduce using rule 87 (metodo -> atributo PUNTO funcion APAR CPAR .)
    MAYOR           reduce using rule 87 (metodo -> atributo PUNTO funcion APAR CPAR .)
    MENOR           reduce using rule 87 (metodo -> atributo PUNTO funcion APAR CPAR .)
    MAYORIGUAL      reduce using rule 87 (metodo -> atributo PUNTO funcion APAR CPAR .)
    MENORIGUAL      reduce using rule 87 (metodo -> atributo PUNTO funcion APAR CPAR .)
    AND             reduce using rule 87 (metodo -> atributo PUNTO funcion APAR CPAR .)
    OR              reduce using rule 87 (metodo -> atributo PUNTO funcion APAR CPAR .)
    CPAR            reduce using rule 87 (metodo -> atributo PUNTO funcion APAR CPAR .)
    ELSE            reduce using rule 87 (metodo -> atributo PUNTO funcion APAR CPAR .)
    CLLAVE          reduce using rule 87 (metodo -> atributo PUNTO funcion APAR CPAR .)


state 165

    (88) metodo -> atributo PUNTO funcion APAR ID . CPAR

    CPAR            shift and go to state 187


state 166

    (19) tipoDato -> LIST MENOR . tipoDato MAYOR
    (15) tipoDato -> . INT
    (16) tipoDato -> . FLOAT
    (17) tipoDato -> . BOOLEAN
    (18) tipoDato -> . STRING
    (19) tipoDato -> . LIST MENOR tipoDato MAYOR
    (20) tipoDato -> . SET MENOR tipoDato MAYOR
    (21) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (22) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 138
    FLOAT           shift and go to state 139
    BOOLEAN         shift and go to state 140
    STRING          shift and go to state 141
    LIST            shift and go to state 142
    SET             shift and go to state 143
    PAIR            shift and go to state 144
    TRIPLE          shift and go to state 145

    tipoDato                       shift and go to state 188

state 167

    (20) tipoDato -> SET MENOR . tipoDato MAYOR
    (15) tipoDato -> . INT
    (16) tipoDato -> . FLOAT
    (17) tipoDato -> . BOOLEAN
    (18) tipoDato -> . STRING
    (19) tipoDato -> . LIST MENOR tipoDato MAYOR
    (20) tipoDato -> . SET MENOR tipoDato MAYOR
    (21) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (22) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 138
    FLOAT           shift and go to state 139
    BOOLEAN         shift and go to state 140
    STRING          shift and go to state 141
    LIST            shift and go to state 142
    SET             shift and go to state 143
    PAIR            shift and go to state 144
    TRIPLE          shift and go to state 145

    tipoDato                       shift and go to state 189

state 168

    (21) tipoDato -> PAIR MENOR . tipoDato COMA tipoDato MAYOR
    (15) tipoDato -> . INT
    (16) tipoDato -> . FLOAT
    (17) tipoDato -> . BOOLEAN
    (18) tipoDato -> . STRING
    (19) tipoDato -> . LIST MENOR tipoDato MAYOR
    (20) tipoDato -> . SET MENOR tipoDato MAYOR
    (21) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (22) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 138
    FLOAT           shift and go to state 139
    BOOLEAN         shift and go to state 140
    STRING          shift and go to state 141
    LIST            shift and go to state 142
    SET             shift and go to state 143
    PAIR            shift and go to state 144
    TRIPLE          shift and go to state 145

    tipoDato                       shift and go to state 190

state 169

    (22) tipoDato -> TRIPLE MENOR . tipoDato COMA tipoDato COMA tipoDato MAYOR
    (15) tipoDato -> . INT
    (16) tipoDato -> . FLOAT
    (17) tipoDato -> . BOOLEAN
    (18) tipoDato -> . STRING
    (19) tipoDato -> . LIST MENOR tipoDato MAYOR
    (20) tipoDato -> . SET MENOR tipoDato MAYOR
    (21) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (22) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 138
    FLOAT           shift and go to state 139
    BOOLEAN         shift and go to state 140
    STRING          shift and go to state 141
    LIST            shift and go to state 142
    SET             shift and go to state 143
    PAIR            shift and go to state 144
    TRIPLE          shift and go to state 145

    tipoDato                       shift and go to state 191

state 170

    (82) metodo -> ID PUNTO ID APAR ID . CPAR

    CPAR            shift and go to state 192


state 171

    (81) metodo -> ID PUNTO ID APAR CPAR .

    $end            reduce using rule 81 (metodo -> ID PUNTO ID APAR CPAR .)
    IGUALIGUAL      reduce using rule 81 (metodo -> ID PUNTO ID APAR CPAR .)
    TRIPLEIGUAL     reduce using rule 81 (metodo -> ID PUNTO ID APAR CPAR .)
    NOIGUAL         reduce using rule 81 (metodo -> ID PUNTO ID APAR CPAR .)
    MAYOR           reduce using rule 81 (metodo -> ID PUNTO ID APAR CPAR .)
    MENOR           reduce using rule 81 (metodo -> ID PUNTO ID APAR CPAR .)
    MAYORIGUAL      reduce using rule 81 (metodo -> ID PUNTO ID APAR CPAR .)
    MENORIGUAL      reduce using rule 81 (metodo -> ID PUNTO ID APAR CPAR .)
    AND             reduce using rule 81 (metodo -> ID PUNTO ID APAR CPAR .)
    OR              reduce using rule 81 (metodo -> ID PUNTO ID APAR CPAR .)
    CPAR            reduce using rule 81 (metodo -> ID PUNTO ID APAR CPAR .)
    ELSE            reduce using rule 81 (metodo -> ID PUNTO ID APAR CPAR .)
    CLLAVE          reduce using rule 81 (metodo -> ID PUNTO ID APAR CPAR .)


state 172

    (86) metodo -> ID PUNTO funcion APAR ID . CPAR

    CPAR            shift and go to state 193


state 173

    (85) metodo -> ID PUNTO funcion APAR CPAR .

    $end            reduce using rule 85 (metodo -> ID PUNTO funcion APAR CPAR .)
    IGUALIGUAL      reduce using rule 85 (metodo -> ID PUNTO funcion APAR CPAR .)
    TRIPLEIGUAL     reduce using rule 85 (metodo -> ID PUNTO funcion APAR CPAR .)
    NOIGUAL         reduce using rule 85 (metodo -> ID PUNTO funcion APAR CPAR .)
    MAYOR           reduce using rule 85 (metodo -> ID PUNTO funcion APAR CPAR .)
    MENOR           reduce using rule 85 (metodo -> ID PUNTO funcion APAR CPAR .)
    MAYORIGUAL      reduce using rule 85 (metodo -> ID PUNTO funcion APAR CPAR .)
    MENORIGUAL      reduce using rule 85 (metodo -> ID PUNTO funcion APAR CPAR .)
    AND             reduce using rule 85 (metodo -> ID PUNTO funcion APAR CPAR .)
    OR              reduce using rule 85 (metodo -> ID PUNTO funcion APAR CPAR .)
    CPAR            reduce using rule 85 (metodo -> ID PUNTO funcion APAR CPAR .)
    ELSE            reduce using rule 85 (metodo -> ID PUNTO funcion APAR CPAR .)
    CLLAVE          reduce using rule 85 (metodo -> ID PUNTO funcion APAR CPAR .)


state 174

    (105) condicion -> compmiembro comparador compmiembro conector compmiembro . comparador compmiembro
    (90) comparador -> . IGUALIGUAL
    (91) comparador -> . TRIPLEIGUAL
    (92) comparador -> . NOIGUAL
    (93) comparador -> . MAYOR
    (94) comparador -> . MENOR
    (95) comparador -> . MAYORIGUAL
    (96) comparador -> . MENORIGUAL

    IGUALIGUAL      shift and go to state 55
    TRIPLEIGUAL     shift and go to state 56
    NOIGUAL         shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61

    comparador                     shift and go to state 194

state 175

    (40) contenido -> factorEspecial COMA contenido .

    CPAR            reduce using rule 40 (contenido -> factorEspecial COMA contenido .)


state 176

    (37) pair -> PAIR APAR factorEspecial COMA factorEspecial . CPAR

    CPAR            shift and go to state 195


state 177

    (38) triple -> TRIPLE APAR factorEspecial COMA factorEspecial . COMA factorEspecial CPAR

    COMA            shift and go to state 196


state 178

    (111) if -> IF APAR condicion CPAR cuerpo .
    (112) if -> IF APAR condicion CPAR cuerpo . ELSE cuerpo

  ! shift/reduce conflict for ELSE resolved as shift
    $end            reduce using rule 111 (if -> IF APAR condicion CPAR cuerpo .)
    CLLAVE          reduce using rule 111 (if -> IF APAR condicion CPAR cuerpo .)
    ELSE            shift and go to state 197

  ! ELSE            [ reduce using rule 111 (if -> IF APAR condicion CPAR cuerpo .) ]


state 179

    (109) cuerpo -> sentencia .

    ELSE            reduce using rule 109 (cuerpo -> sentencia .)
    $end            reduce using rule 109 (cuerpo -> sentencia .)
    CLLAVE          reduce using rule 109 (cuerpo -> sentencia .)


state 180

    (110) cuerpo -> ALLAVE . sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . valor
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion
    (23) valor -> . ENTEROEXPRESION
    (24) valor -> . flotante
    (25) valor -> . BOOLEANOEXPRESION
    (26) valor -> . CADENAEXPRESION
    (27) valor -> . list
    (28) valor -> . set
    (29) valor -> . pair
    (30) valor -> . triple
    (31) valor -> . expresion
    (32) valor -> . ID
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (106) control -> . if
    (107) control -> . for
    (108) control -> . while
    (104) condicion -> . compmiembro comparador compmiembro
    (105) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (89) atributo -> . ID PUNTO ID
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (37) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (38) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (111) if -> . IF APAR condicion CPAR cuerpo
    (112) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (113) for -> . FOR APAR ID IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (123) while -> . WHILE APAR condicion CPAR cuerpo
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR

    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 11
    BOOLEANOEXPRESION shift and go to state 13
    CADENAEXPRESION shift and go to state 14
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26
    PAIR            shift and go to state 27
    TRIPLE          shift and go to state 28
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    APAR            shift and go to state 20

    sentencia                      shift and go to state 198
    asignacion                     shift and go to state 2
    valor                          shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    flotante                       shift and go to state 12
    list                           shift and go to state 15
    set                            shift and go to state 16
    pair                           shift and go to state 17
    triple                         shift and go to state 18
    expresion                      shift and go to state 19
    if                             shift and go to state 21
    for                            shift and go to state 22
    while                          shift and go to state 23
    compmiembro                    shift and go to state 24
    termino                        shift and go to state 29
    factor                         shift and go to state 33

state 181

    (121) for -> FOR APAR APAR ID COMA . ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> FOR APAR APAR ID COMA . ID CPAR IN ID CPAR cuerpo

    ID              shift and go to state 199


state 182

    (113) for -> FOR APAR ID IN ID . CPAR cuerpo
    (119) for -> FOR APAR ID IN ID . PUNTO INDICES CPAR cuerpo
    (120) for -> FOR APAR ID IN ID . PUNTO ID CPAR cuerpo

    CPAR            shift and go to state 200
    PUNTO           shift and go to state 201


state 183

    (115) for -> FOR APAR ID IN ENTEROEXPRESION . PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> FOR APAR ID IN ENTEROEXPRESION . UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> FOR APAR ID IN ENTEROEXPRESION . UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> FOR APAR ID IN ENTEROEXPRESION . DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo

    PUNTOPUNTO      shift and go to state 202
    UNTIL           shift and go to state 203
    DOWNTO          shift and go to state 204


state 184

    (114) for -> FOR APAR ID DOSPUNTOS INT . IN ID CPAR cuerpo

    IN              shift and go to state 205


state 185

    (123) while -> WHILE APAR condicion CPAR cuerpo .

    $end            reduce using rule 123 (while -> WHILE APAR condicion CPAR cuerpo .)
    ELSE            reduce using rule 123 (while -> WHILE APAR condicion CPAR cuerpo .)
    CLLAVE          reduce using rule 123 (while -> WHILE APAR condicion CPAR cuerpo .)


state 186

    (84) metodo -> atributo PUNTO ID APAR ID CPAR .

    $end            reduce using rule 84 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    IGUALIGUAL      reduce using rule 84 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    TRIPLEIGUAL     reduce using rule 84 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    NOIGUAL         reduce using rule 84 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    MAYOR           reduce using rule 84 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    MENOR           reduce using rule 84 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    MAYORIGUAL      reduce using rule 84 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    MENORIGUAL      reduce using rule 84 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    AND             reduce using rule 84 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    OR              reduce using rule 84 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    CPAR            reduce using rule 84 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    ELSE            reduce using rule 84 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    CLLAVE          reduce using rule 84 (metodo -> atributo PUNTO ID APAR ID CPAR .)


state 187

    (88) metodo -> atributo PUNTO funcion APAR ID CPAR .

    $end            reduce using rule 88 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    IGUALIGUAL      reduce using rule 88 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    TRIPLEIGUAL     reduce using rule 88 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    NOIGUAL         reduce using rule 88 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    MAYOR           reduce using rule 88 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    MENOR           reduce using rule 88 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    MAYORIGUAL      reduce using rule 88 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    MENORIGUAL      reduce using rule 88 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    AND             reduce using rule 88 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    OR              reduce using rule 88 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    CPAR            reduce using rule 88 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    ELSE            reduce using rule 88 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    CLLAVE          reduce using rule 88 (metodo -> atributo PUNTO funcion APAR ID CPAR .)


state 188

    (19) tipoDato -> LIST MENOR tipoDato . MAYOR

    MAYOR           shift and go to state 206


state 189

    (20) tipoDato -> SET MENOR tipoDato . MAYOR

    MAYOR           shift and go to state 207


state 190

    (21) tipoDato -> PAIR MENOR tipoDato . COMA tipoDato MAYOR

    COMA            shift and go to state 208


state 191

    (22) tipoDato -> TRIPLE MENOR tipoDato . COMA tipoDato COMA tipoDato MAYOR

    COMA            shift and go to state 209


state 192

    (82) metodo -> ID PUNTO ID APAR ID CPAR .

    $end            reduce using rule 82 (metodo -> ID PUNTO ID APAR ID CPAR .)
    IGUALIGUAL      reduce using rule 82 (metodo -> ID PUNTO ID APAR ID CPAR .)
    TRIPLEIGUAL     reduce using rule 82 (metodo -> ID PUNTO ID APAR ID CPAR .)
    NOIGUAL         reduce using rule 82 (metodo -> ID PUNTO ID APAR ID CPAR .)
    MAYOR           reduce using rule 82 (metodo -> ID PUNTO ID APAR ID CPAR .)
    MENOR           reduce using rule 82 (metodo -> ID PUNTO ID APAR ID CPAR .)
    MAYORIGUAL      reduce using rule 82 (metodo -> ID PUNTO ID APAR ID CPAR .)
    MENORIGUAL      reduce using rule 82 (metodo -> ID PUNTO ID APAR ID CPAR .)
    AND             reduce using rule 82 (metodo -> ID PUNTO ID APAR ID CPAR .)
    OR              reduce using rule 82 (metodo -> ID PUNTO ID APAR ID CPAR .)
    CPAR            reduce using rule 82 (metodo -> ID PUNTO ID APAR ID CPAR .)
    ELSE            reduce using rule 82 (metodo -> ID PUNTO ID APAR ID CPAR .)
    CLLAVE          reduce using rule 82 (metodo -> ID PUNTO ID APAR ID CPAR .)


state 193

    (86) metodo -> ID PUNTO funcion APAR ID CPAR .

    $end            reduce using rule 86 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    IGUALIGUAL      reduce using rule 86 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    TRIPLEIGUAL     reduce using rule 86 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    NOIGUAL         reduce using rule 86 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    MAYOR           reduce using rule 86 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    MENOR           reduce using rule 86 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    MAYORIGUAL      reduce using rule 86 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    MENORIGUAL      reduce using rule 86 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    AND             reduce using rule 86 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    OR              reduce using rule 86 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    CPAR            reduce using rule 86 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    ELSE            reduce using rule 86 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    CLLAVE          reduce using rule 86 (metodo -> ID PUNTO funcion APAR ID CPAR .)


state 194

    (105) condicion -> compmiembro comparador compmiembro conector compmiembro comparador . compmiembro
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (89) atributo -> . ID PUNTO ID
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion

    ID              shift and go to state 108
    ENTEROEXPRESION shift and go to state 109
    VAL             shift and go to state 8
    VAR             shift and go to state 10

    compmiembro                    shift and go to state 210
    metodo                         shift and go to state 110
    atributo                       shift and go to state 111
    asignacion                     shift and go to state 112

state 195

    (37) pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .

    $end            reduce using rule 37 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    IGUALIGUAL      reduce using rule 37 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    TRIPLEIGUAL     reduce using rule 37 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    NOIGUAL         reduce using rule 37 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    MAYOR           reduce using rule 37 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    MENOR           reduce using rule 37 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    MAYORIGUAL      reduce using rule 37 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    MENORIGUAL      reduce using rule 37 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    ELSE            reduce using rule 37 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    CLLAVE          reduce using rule 37 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    AND             reduce using rule 37 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    OR              reduce using rule 37 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    CPAR            reduce using rule 37 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)


state 196

    (38) triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA . factorEspecial CPAR
    (62) factorEspecial -> . factor
    (63) factorEspecial -> . CADENAEXPRESION
    (64) factorEspecial -> . list
    (65) factorEspecial -> . set
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F

    CADENAEXPRESION shift and go to state 116
    ENTEROEXPRESION shift and go to state 119
    ID              shift and go to state 121
    APAR            shift and go to state 20
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26

    factorEspecial                 shift and go to state 211
    factor                         shift and go to state 115
    list                           shift and go to state 117
    set                            shift and go to state 118
    flotante                       shift and go to state 120

state 197

    (112) if -> IF APAR condicion CPAR cuerpo ELSE . cuerpo
    (109) cuerpo -> . sentencia
    (110) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . valor
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion
    (23) valor -> . ENTEROEXPRESION
    (24) valor -> . flotante
    (25) valor -> . BOOLEANOEXPRESION
    (26) valor -> . CADENAEXPRESION
    (27) valor -> . list
    (28) valor -> . set
    (29) valor -> . pair
    (30) valor -> . triple
    (31) valor -> . expresion
    (32) valor -> . ID
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (106) control -> . if
    (107) control -> . for
    (108) control -> . while
    (104) condicion -> . compmiembro comparador compmiembro
    (105) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (89) atributo -> . ID PUNTO ID
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (37) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (38) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (111) if -> . IF APAR condicion CPAR cuerpo
    (112) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (113) for -> . FOR APAR ID IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (123) while -> . WHILE APAR condicion CPAR cuerpo
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 180
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 11
    BOOLEANOEXPRESION shift and go to state 13
    CADENAEXPRESION shift and go to state 14
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26
    PAIR            shift and go to state 27
    TRIPLE          shift and go to state 28
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    APAR            shift and go to state 20

    condicion                      shift and go to state 6
    cuerpo                         shift and go to state 212
    sentencia                      shift and go to state 179
    asignacion                     shift and go to state 2
    valor                          shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    atributo                       shift and go to state 7
    flotante                       shift and go to state 12
    list                           shift and go to state 15
    set                            shift and go to state 16
    pair                           shift and go to state 17
    triple                         shift and go to state 18
    expresion                      shift and go to state 19
    if                             shift and go to state 21
    for                            shift and go to state 22
    while                          shift and go to state 23
    compmiembro                    shift and go to state 24
    termino                        shift and go to state 29
    factor                         shift and go to state 33

state 198

    (110) cuerpo -> ALLAVE sentencia . CLLAVE

    CLLAVE          shift and go to state 213


state 199

    (121) for -> FOR APAR APAR ID COMA ID . CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> FOR APAR APAR ID COMA ID . CPAR IN ID CPAR cuerpo

    CPAR            shift and go to state 214


state 200

    (113) for -> FOR APAR ID IN ID CPAR . cuerpo
    (109) cuerpo -> . sentencia
    (110) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . valor
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion
    (23) valor -> . ENTEROEXPRESION
    (24) valor -> . flotante
    (25) valor -> . BOOLEANOEXPRESION
    (26) valor -> . CADENAEXPRESION
    (27) valor -> . list
    (28) valor -> . set
    (29) valor -> . pair
    (30) valor -> . triple
    (31) valor -> . expresion
    (32) valor -> . ID
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (106) control -> . if
    (107) control -> . for
    (108) control -> . while
    (104) condicion -> . compmiembro comparador compmiembro
    (105) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (89) atributo -> . ID PUNTO ID
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (37) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (38) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (111) if -> . IF APAR condicion CPAR cuerpo
    (112) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (113) for -> . FOR APAR ID IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (123) while -> . WHILE APAR condicion CPAR cuerpo
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 180
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 11
    BOOLEANOEXPRESION shift and go to state 13
    CADENAEXPRESION shift and go to state 14
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26
    PAIR            shift and go to state 27
    TRIPLE          shift and go to state 28
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    APAR            shift and go to state 20

    cuerpo                         shift and go to state 215
    sentencia                      shift and go to state 179
    asignacion                     shift and go to state 2
    valor                          shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    flotante                       shift and go to state 12
    list                           shift and go to state 15
    set                            shift and go to state 16
    pair                           shift and go to state 17
    triple                         shift and go to state 18
    expresion                      shift and go to state 19
    if                             shift and go to state 21
    for                            shift and go to state 22
    while                          shift and go to state 23
    compmiembro                    shift and go to state 24
    termino                        shift and go to state 29
    factor                         shift and go to state 33

state 201

    (119) for -> FOR APAR ID IN ID PUNTO . INDICES CPAR cuerpo
    (120) for -> FOR APAR ID IN ID PUNTO . ID CPAR cuerpo

    INDICES         shift and go to state 217
    ID              shift and go to state 216


state 202

    (115) for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO . ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 218


state 203

    (116) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL . ENTEROEXPRESION CPAR cuerpo
    (117) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL . ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 219


state 204

    (118) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO . ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 220


state 205

    (114) for -> FOR APAR ID DOSPUNTOS INT IN . ID CPAR cuerpo

    ID              shift and go to state 221


state 206

    (19) tipoDato -> LIST MENOR tipoDato MAYOR .

    IGUAL           reduce using rule 19 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    $end            reduce using rule 19 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    IGUALIGUAL      reduce using rule 19 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    TRIPLEIGUAL     reduce using rule 19 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    NOIGUAL         reduce using rule 19 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    MAYOR           reduce using rule 19 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    MENOR           reduce using rule 19 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    MAYORIGUAL      reduce using rule 19 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    MENORIGUAL      reduce using rule 19 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    AND             reduce using rule 19 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    OR              reduce using rule 19 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    CPAR            reduce using rule 19 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    ELSE            reduce using rule 19 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    CLLAVE          reduce using rule 19 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    COMA            reduce using rule 19 (tipoDato -> LIST MENOR tipoDato MAYOR .)


state 207

    (20) tipoDato -> SET MENOR tipoDato MAYOR .

    IGUAL           reduce using rule 20 (tipoDato -> SET MENOR tipoDato MAYOR .)
    $end            reduce using rule 20 (tipoDato -> SET MENOR tipoDato MAYOR .)
    IGUALIGUAL      reduce using rule 20 (tipoDato -> SET MENOR tipoDato MAYOR .)
    TRIPLEIGUAL     reduce using rule 20 (tipoDato -> SET MENOR tipoDato MAYOR .)
    NOIGUAL         reduce using rule 20 (tipoDato -> SET MENOR tipoDato MAYOR .)
    MAYOR           reduce using rule 20 (tipoDato -> SET MENOR tipoDato MAYOR .)
    MENOR           reduce using rule 20 (tipoDato -> SET MENOR tipoDato MAYOR .)
    MAYORIGUAL      reduce using rule 20 (tipoDato -> SET MENOR tipoDato MAYOR .)
    MENORIGUAL      reduce using rule 20 (tipoDato -> SET MENOR tipoDato MAYOR .)
    AND             reduce using rule 20 (tipoDato -> SET MENOR tipoDato MAYOR .)
    OR              reduce using rule 20 (tipoDato -> SET MENOR tipoDato MAYOR .)
    CPAR            reduce using rule 20 (tipoDato -> SET MENOR tipoDato MAYOR .)
    ELSE            reduce using rule 20 (tipoDato -> SET MENOR tipoDato MAYOR .)
    CLLAVE          reduce using rule 20 (tipoDato -> SET MENOR tipoDato MAYOR .)
    COMA            reduce using rule 20 (tipoDato -> SET MENOR tipoDato MAYOR .)


state 208

    (21) tipoDato -> PAIR MENOR tipoDato COMA . tipoDato MAYOR
    (15) tipoDato -> . INT
    (16) tipoDato -> . FLOAT
    (17) tipoDato -> . BOOLEAN
    (18) tipoDato -> . STRING
    (19) tipoDato -> . LIST MENOR tipoDato MAYOR
    (20) tipoDato -> . SET MENOR tipoDato MAYOR
    (21) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (22) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 138
    FLOAT           shift and go to state 139
    BOOLEAN         shift and go to state 140
    STRING          shift and go to state 141
    LIST            shift and go to state 142
    SET             shift and go to state 143
    PAIR            shift and go to state 144
    TRIPLE          shift and go to state 145

    tipoDato                       shift and go to state 222

state 209

    (22) tipoDato -> TRIPLE MENOR tipoDato COMA . tipoDato COMA tipoDato MAYOR
    (15) tipoDato -> . INT
    (16) tipoDato -> . FLOAT
    (17) tipoDato -> . BOOLEAN
    (18) tipoDato -> . STRING
    (19) tipoDato -> . LIST MENOR tipoDato MAYOR
    (20) tipoDato -> . SET MENOR tipoDato MAYOR
    (21) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (22) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 138
    FLOAT           shift and go to state 139
    BOOLEAN         shift and go to state 140
    STRING          shift and go to state 141
    LIST            shift and go to state 142
    SET             shift and go to state 143
    PAIR            shift and go to state 144
    TRIPLE          shift and go to state 145

    tipoDato                       shift and go to state 223

state 210

    (105) condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .

    $end            reduce using rule 105 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    CPAR            reduce using rule 105 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    ELSE            reduce using rule 105 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    CLLAVE          reduce using rule 105 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)


state 211

    (38) triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial . CPAR

    CPAR            shift and go to state 224


state 212

    (112) if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .

    $end            reduce using rule 112 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    ELSE            reduce using rule 112 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    CLLAVE          reduce using rule 112 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)


state 213

    (110) cuerpo -> ALLAVE sentencia CLLAVE .

    ELSE            reduce using rule 110 (cuerpo -> ALLAVE sentencia CLLAVE .)
    $end            reduce using rule 110 (cuerpo -> ALLAVE sentencia CLLAVE .)
    CLLAVE          reduce using rule 110 (cuerpo -> ALLAVE sentencia CLLAVE .)


state 214

    (121) for -> FOR APAR APAR ID COMA ID CPAR . IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> FOR APAR APAR ID COMA ID CPAR . IN ID CPAR cuerpo

    IN              shift and go to state 225


state 215

    (113) for -> FOR APAR ID IN ID CPAR cuerpo .

    $end            reduce using rule 113 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    ELSE            reduce using rule 113 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    CLLAVE          reduce using rule 113 (for -> FOR APAR ID IN ID CPAR cuerpo .)


state 216

    (120) for -> FOR APAR ID IN ID PUNTO ID . CPAR cuerpo

    CPAR            shift and go to state 226


state 217

    (119) for -> FOR APAR ID IN ID PUNTO INDICES . CPAR cuerpo

    CPAR            shift and go to state 227


state 218

    (115) for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION . CPAR cuerpo

    CPAR            shift and go to state 228


state 219

    (116) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION . CPAR cuerpo
    (117) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION . STEP ENTEROEXPRESION CPAR cuerpo

    CPAR            shift and go to state 229
    STEP            shift and go to state 230


state 220

    (118) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION . STEP ENTEROEXPRESION CPAR cuerpo

    STEP            shift and go to state 231


state 221

    (114) for -> FOR APAR ID DOSPUNTOS INT IN ID . CPAR cuerpo

    CPAR            shift and go to state 232


state 222

    (21) tipoDato -> PAIR MENOR tipoDato COMA tipoDato . MAYOR

    MAYOR           shift and go to state 233


state 223

    (22) tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato . COMA tipoDato MAYOR

    COMA            shift and go to state 234


state 224

    (38) triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .

    $end            reduce using rule 38 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    IGUALIGUAL      reduce using rule 38 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    TRIPLEIGUAL     reduce using rule 38 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    NOIGUAL         reduce using rule 38 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    MAYOR           reduce using rule 38 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    MENOR           reduce using rule 38 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    MAYORIGUAL      reduce using rule 38 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    MENORIGUAL      reduce using rule 38 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    ELSE            reduce using rule 38 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    CLLAVE          reduce using rule 38 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    AND             reduce using rule 38 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    OR              reduce using rule 38 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    CPAR            reduce using rule 38 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)


state 225

    (121) for -> FOR APAR APAR ID COMA ID CPAR IN . ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> FOR APAR APAR ID COMA ID CPAR IN . ID CPAR cuerpo

    ID              shift and go to state 235


state 226

    (120) for -> FOR APAR ID IN ID PUNTO ID CPAR . cuerpo
    (109) cuerpo -> . sentencia
    (110) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . valor
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion
    (23) valor -> . ENTEROEXPRESION
    (24) valor -> . flotante
    (25) valor -> . BOOLEANOEXPRESION
    (26) valor -> . CADENAEXPRESION
    (27) valor -> . list
    (28) valor -> . set
    (29) valor -> . pair
    (30) valor -> . triple
    (31) valor -> . expresion
    (32) valor -> . ID
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (106) control -> . if
    (107) control -> . for
    (108) control -> . while
    (104) condicion -> . compmiembro comparador compmiembro
    (105) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (89) atributo -> . ID PUNTO ID
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (37) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (38) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (111) if -> . IF APAR condicion CPAR cuerpo
    (112) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (113) for -> . FOR APAR ID IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (123) while -> . WHILE APAR condicion CPAR cuerpo
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 180
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 11
    BOOLEANOEXPRESION shift and go to state 13
    CADENAEXPRESION shift and go to state 14
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26
    PAIR            shift and go to state 27
    TRIPLE          shift and go to state 28
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    APAR            shift and go to state 20

    cuerpo                         shift and go to state 236
    sentencia                      shift and go to state 179
    asignacion                     shift and go to state 2
    valor                          shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    flotante                       shift and go to state 12
    list                           shift and go to state 15
    set                            shift and go to state 16
    pair                           shift and go to state 17
    triple                         shift and go to state 18
    expresion                      shift and go to state 19
    if                             shift and go to state 21
    for                            shift and go to state 22
    while                          shift and go to state 23
    compmiembro                    shift and go to state 24
    termino                        shift and go to state 29
    factor                         shift and go to state 33

state 227

    (119) for -> FOR APAR ID IN ID PUNTO INDICES CPAR . cuerpo
    (109) cuerpo -> . sentencia
    (110) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . valor
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion
    (23) valor -> . ENTEROEXPRESION
    (24) valor -> . flotante
    (25) valor -> . BOOLEANOEXPRESION
    (26) valor -> . CADENAEXPRESION
    (27) valor -> . list
    (28) valor -> . set
    (29) valor -> . pair
    (30) valor -> . triple
    (31) valor -> . expresion
    (32) valor -> . ID
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (106) control -> . if
    (107) control -> . for
    (108) control -> . while
    (104) condicion -> . compmiembro comparador compmiembro
    (105) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (89) atributo -> . ID PUNTO ID
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (37) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (38) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (111) if -> . IF APAR condicion CPAR cuerpo
    (112) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (113) for -> . FOR APAR ID IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (123) while -> . WHILE APAR condicion CPAR cuerpo
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 180
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 11
    BOOLEANOEXPRESION shift and go to state 13
    CADENAEXPRESION shift and go to state 14
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26
    PAIR            shift and go to state 27
    TRIPLE          shift and go to state 28
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    APAR            shift and go to state 20

    cuerpo                         shift and go to state 237
    sentencia                      shift and go to state 179
    asignacion                     shift and go to state 2
    valor                          shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    flotante                       shift and go to state 12
    list                           shift and go to state 15
    set                            shift and go to state 16
    pair                           shift and go to state 17
    triple                         shift and go to state 18
    expresion                      shift and go to state 19
    if                             shift and go to state 21
    for                            shift and go to state 22
    while                          shift and go to state 23
    compmiembro                    shift and go to state 24
    termino                        shift and go to state 29
    factor                         shift and go to state 33

state 228

    (115) for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR . cuerpo
    (109) cuerpo -> . sentencia
    (110) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . valor
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion
    (23) valor -> . ENTEROEXPRESION
    (24) valor -> . flotante
    (25) valor -> . BOOLEANOEXPRESION
    (26) valor -> . CADENAEXPRESION
    (27) valor -> . list
    (28) valor -> . set
    (29) valor -> . pair
    (30) valor -> . triple
    (31) valor -> . expresion
    (32) valor -> . ID
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (106) control -> . if
    (107) control -> . for
    (108) control -> . while
    (104) condicion -> . compmiembro comparador compmiembro
    (105) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (89) atributo -> . ID PUNTO ID
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (37) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (38) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (111) if -> . IF APAR condicion CPAR cuerpo
    (112) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (113) for -> . FOR APAR ID IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (123) while -> . WHILE APAR condicion CPAR cuerpo
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 180
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 11
    BOOLEANOEXPRESION shift and go to state 13
    CADENAEXPRESION shift and go to state 14
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26
    PAIR            shift and go to state 27
    TRIPLE          shift and go to state 28
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    APAR            shift and go to state 20

    cuerpo                         shift and go to state 238
    sentencia                      shift and go to state 179
    asignacion                     shift and go to state 2
    valor                          shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    flotante                       shift and go to state 12
    list                           shift and go to state 15
    set                            shift and go to state 16
    pair                           shift and go to state 17
    triple                         shift and go to state 18
    expresion                      shift and go to state 19
    if                             shift and go to state 21
    for                            shift and go to state 22
    while                          shift and go to state 23
    compmiembro                    shift and go to state 24
    termino                        shift and go to state 29
    factor                         shift and go to state 33

state 229

    (116) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR . cuerpo
    (109) cuerpo -> . sentencia
    (110) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . valor
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion
    (23) valor -> . ENTEROEXPRESION
    (24) valor -> . flotante
    (25) valor -> . BOOLEANOEXPRESION
    (26) valor -> . CADENAEXPRESION
    (27) valor -> . list
    (28) valor -> . set
    (29) valor -> . pair
    (30) valor -> . triple
    (31) valor -> . expresion
    (32) valor -> . ID
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (106) control -> . if
    (107) control -> . for
    (108) control -> . while
    (104) condicion -> . compmiembro comparador compmiembro
    (105) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (89) atributo -> . ID PUNTO ID
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (37) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (38) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (111) if -> . IF APAR condicion CPAR cuerpo
    (112) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (113) for -> . FOR APAR ID IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (123) while -> . WHILE APAR condicion CPAR cuerpo
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 180
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 11
    BOOLEANOEXPRESION shift and go to state 13
    CADENAEXPRESION shift and go to state 14
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26
    PAIR            shift and go to state 27
    TRIPLE          shift and go to state 28
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    APAR            shift and go to state 20

    cuerpo                         shift and go to state 239
    sentencia                      shift and go to state 179
    asignacion                     shift and go to state 2
    valor                          shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    flotante                       shift and go to state 12
    list                           shift and go to state 15
    set                            shift and go to state 16
    pair                           shift and go to state 17
    triple                         shift and go to state 18
    expresion                      shift and go to state 19
    if                             shift and go to state 21
    for                            shift and go to state 22
    while                          shift and go to state 23
    compmiembro                    shift and go to state 24
    termino                        shift and go to state 29
    factor                         shift and go to state 33

state 230

    (117) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP . ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 240


state 231

    (118) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP . ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 241


state 232

    (114) for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR . cuerpo
    (109) cuerpo -> . sentencia
    (110) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . valor
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion
    (23) valor -> . ENTEROEXPRESION
    (24) valor -> . flotante
    (25) valor -> . BOOLEANOEXPRESION
    (26) valor -> . CADENAEXPRESION
    (27) valor -> . list
    (28) valor -> . set
    (29) valor -> . pair
    (30) valor -> . triple
    (31) valor -> . expresion
    (32) valor -> . ID
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (106) control -> . if
    (107) control -> . for
    (108) control -> . while
    (104) condicion -> . compmiembro comparador compmiembro
    (105) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (89) atributo -> . ID PUNTO ID
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (37) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (38) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (111) if -> . IF APAR condicion CPAR cuerpo
    (112) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (113) for -> . FOR APAR ID IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (123) while -> . WHILE APAR condicion CPAR cuerpo
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 180
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 11
    BOOLEANOEXPRESION shift and go to state 13
    CADENAEXPRESION shift and go to state 14
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26
    PAIR            shift and go to state 27
    TRIPLE          shift and go to state 28
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    APAR            shift and go to state 20

    cuerpo                         shift and go to state 242
    sentencia                      shift and go to state 179
    asignacion                     shift and go to state 2
    valor                          shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    flotante                       shift and go to state 12
    list                           shift and go to state 15
    set                            shift and go to state 16
    pair                           shift and go to state 17
    triple                         shift and go to state 18
    expresion                      shift and go to state 19
    if                             shift and go to state 21
    for                            shift and go to state 22
    while                          shift and go to state 23
    compmiembro                    shift and go to state 24
    termino                        shift and go to state 29
    factor                         shift and go to state 33

state 233

    (21) tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .

    IGUAL           reduce using rule 21 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    $end            reduce using rule 21 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    IGUALIGUAL      reduce using rule 21 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    TRIPLEIGUAL     reduce using rule 21 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    NOIGUAL         reduce using rule 21 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    MAYOR           reduce using rule 21 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    MENOR           reduce using rule 21 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    MAYORIGUAL      reduce using rule 21 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    MENORIGUAL      reduce using rule 21 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    AND             reduce using rule 21 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    OR              reduce using rule 21 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    CPAR            reduce using rule 21 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    ELSE            reduce using rule 21 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    CLLAVE          reduce using rule 21 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    COMA            reduce using rule 21 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)


state 234

    (22) tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA . tipoDato MAYOR
    (15) tipoDato -> . INT
    (16) tipoDato -> . FLOAT
    (17) tipoDato -> . BOOLEAN
    (18) tipoDato -> . STRING
    (19) tipoDato -> . LIST MENOR tipoDato MAYOR
    (20) tipoDato -> . SET MENOR tipoDato MAYOR
    (21) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (22) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 138
    FLOAT           shift and go to state 139
    BOOLEAN         shift and go to state 140
    STRING          shift and go to state 141
    LIST            shift and go to state 142
    SET             shift and go to state 143
    PAIR            shift and go to state 144
    TRIPLE          shift and go to state 145

    tipoDato                       shift and go to state 243

state 235

    (121) for -> FOR APAR APAR ID COMA ID CPAR IN ID . PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> FOR APAR APAR ID COMA ID CPAR IN ID . CPAR cuerpo

    PUNTO           shift and go to state 245
    CPAR            shift and go to state 244


state 236

    (120) for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .

    $end            reduce using rule 120 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    ELSE            reduce using rule 120 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    CLLAVE          reduce using rule 120 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)


state 237

    (119) for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .

    $end            reduce using rule 119 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    ELSE            reduce using rule 119 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    CLLAVE          reduce using rule 119 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)


state 238

    (115) for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .

    $end            reduce using rule 115 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    ELSE            reduce using rule 115 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    CLLAVE          reduce using rule 115 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)


state 239

    (116) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .

    $end            reduce using rule 116 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    ELSE            reduce using rule 116 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    CLLAVE          reduce using rule 116 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)


state 240

    (117) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION . CPAR cuerpo

    CPAR            shift and go to state 246


state 241

    (118) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION . CPAR cuerpo

    CPAR            shift and go to state 247


state 242

    (114) for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .

    $end            reduce using rule 114 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    ELSE            reduce using rule 114 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    CLLAVE          reduce using rule 114 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)


state 243

    (22) tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato . MAYOR

    MAYOR           shift and go to state 248


state 244

    (122) for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR . cuerpo
    (109) cuerpo -> . sentencia
    (110) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . valor
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion
    (23) valor -> . ENTEROEXPRESION
    (24) valor -> . flotante
    (25) valor -> . BOOLEANOEXPRESION
    (26) valor -> . CADENAEXPRESION
    (27) valor -> . list
    (28) valor -> . set
    (29) valor -> . pair
    (30) valor -> . triple
    (31) valor -> . expresion
    (32) valor -> . ID
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (106) control -> . if
    (107) control -> . for
    (108) control -> . while
    (104) condicion -> . compmiembro comparador compmiembro
    (105) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (89) atributo -> . ID PUNTO ID
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (37) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (38) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (111) if -> . IF APAR condicion CPAR cuerpo
    (112) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (113) for -> . FOR APAR ID IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (123) while -> . WHILE APAR condicion CPAR cuerpo
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 180
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 11
    BOOLEANOEXPRESION shift and go to state 13
    CADENAEXPRESION shift and go to state 14
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26
    PAIR            shift and go to state 27
    TRIPLE          shift and go to state 28
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    APAR            shift and go to state 20

    cuerpo                         shift and go to state 249
    sentencia                      shift and go to state 179
    asignacion                     shift and go to state 2
    valor                          shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    flotante                       shift and go to state 12
    list                           shift and go to state 15
    set                            shift and go to state 16
    pair                           shift and go to state 17
    triple                         shift and go to state 18
    expresion                      shift and go to state 19
    if                             shift and go to state 21
    for                            shift and go to state 22
    while                          shift and go to state 23
    compmiembro                    shift and go to state 24
    termino                        shift and go to state 29
    factor                         shift and go to state 33

state 245

    (121) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO . WITHINDEX APAR CPAR CPAR cuerpo

    WITHINDEX       shift and go to state 250


state 246

    (117) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR . cuerpo
    (109) cuerpo -> . sentencia
    (110) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . valor
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion
    (23) valor -> . ENTEROEXPRESION
    (24) valor -> . flotante
    (25) valor -> . BOOLEANOEXPRESION
    (26) valor -> . CADENAEXPRESION
    (27) valor -> . list
    (28) valor -> . set
    (29) valor -> . pair
    (30) valor -> . triple
    (31) valor -> . expresion
    (32) valor -> . ID
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (106) control -> . if
    (107) control -> . for
    (108) control -> . while
    (104) condicion -> . compmiembro comparador compmiembro
    (105) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (89) atributo -> . ID PUNTO ID
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (37) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (38) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (111) if -> . IF APAR condicion CPAR cuerpo
    (112) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (113) for -> . FOR APAR ID IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (123) while -> . WHILE APAR condicion CPAR cuerpo
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 180
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 11
    BOOLEANOEXPRESION shift and go to state 13
    CADENAEXPRESION shift and go to state 14
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26
    PAIR            shift and go to state 27
    TRIPLE          shift and go to state 28
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    APAR            shift and go to state 20

    cuerpo                         shift and go to state 251
    sentencia                      shift and go to state 179
    asignacion                     shift and go to state 2
    valor                          shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    flotante                       shift and go to state 12
    list                           shift and go to state 15
    set                            shift and go to state 16
    pair                           shift and go to state 17
    triple                         shift and go to state 18
    expresion                      shift and go to state 19
    if                             shift and go to state 21
    for                            shift and go to state 22
    while                          shift and go to state 23
    compmiembro                    shift and go to state 24
    termino                        shift and go to state 29
    factor                         shift and go to state 33

state 247

    (118) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR . cuerpo
    (109) cuerpo -> . sentencia
    (110) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . valor
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion
    (23) valor -> . ENTEROEXPRESION
    (24) valor -> . flotante
    (25) valor -> . BOOLEANOEXPRESION
    (26) valor -> . CADENAEXPRESION
    (27) valor -> . list
    (28) valor -> . set
    (29) valor -> . pair
    (30) valor -> . triple
    (31) valor -> . expresion
    (32) valor -> . ID
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (106) control -> . if
    (107) control -> . for
    (108) control -> . while
    (104) condicion -> . compmiembro comparador compmiembro
    (105) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (89) atributo -> . ID PUNTO ID
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (37) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (38) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (111) if -> . IF APAR condicion CPAR cuerpo
    (112) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (113) for -> . FOR APAR ID IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (123) while -> . WHILE APAR condicion CPAR cuerpo
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 180
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 11
    BOOLEANOEXPRESION shift and go to state 13
    CADENAEXPRESION shift and go to state 14
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26
    PAIR            shift and go to state 27
    TRIPLE          shift and go to state 28
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    APAR            shift and go to state 20

    cuerpo                         shift and go to state 252
    sentencia                      shift and go to state 179
    asignacion                     shift and go to state 2
    valor                          shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    flotante                       shift and go to state 12
    list                           shift and go to state 15
    set                            shift and go to state 16
    pair                           shift and go to state 17
    triple                         shift and go to state 18
    expresion                      shift and go to state 19
    if                             shift and go to state 21
    for                            shift and go to state 22
    while                          shift and go to state 23
    compmiembro                    shift and go to state 24
    termino                        shift and go to state 29
    factor                         shift and go to state 33

state 248

    (22) tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .

    IGUAL           reduce using rule 22 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    $end            reduce using rule 22 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    IGUALIGUAL      reduce using rule 22 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    TRIPLEIGUAL     reduce using rule 22 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    NOIGUAL         reduce using rule 22 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    MAYOR           reduce using rule 22 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    MENOR           reduce using rule 22 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    MAYORIGUAL      reduce using rule 22 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    MENORIGUAL      reduce using rule 22 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    AND             reduce using rule 22 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    OR              reduce using rule 22 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    CPAR            reduce using rule 22 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    ELSE            reduce using rule 22 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    CLLAVE          reduce using rule 22 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    COMA            reduce using rule 22 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)


state 249

    (122) for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .

    $end            reduce using rule 122 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    ELSE            reduce using rule 122 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    CLLAVE          reduce using rule 122 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)


state 250

    (121) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX . APAR CPAR CPAR cuerpo

    APAR            shift and go to state 253


state 251

    (117) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .

    $end            reduce using rule 117 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    ELSE            reduce using rule 117 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    CLLAVE          reduce using rule 117 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)


state 252

    (118) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .

    $end            reduce using rule 118 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    ELSE            reduce using rule 118 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    CLLAVE          reduce using rule 118 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)


state 253

    (121) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR . CPAR CPAR cuerpo

    CPAR            shift and go to state 254


state 254

    (121) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR . CPAR cuerpo

    CPAR            shift and go to state 255


state 255

    (121) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR . cuerpo
    (109) cuerpo -> . sentencia
    (110) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . valor
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (9) asignacion -> . ID inicializacion
    (23) valor -> . ENTEROEXPRESION
    (24) valor -> . flotante
    (25) valor -> . BOOLEANOEXPRESION
    (26) valor -> . CADENAEXPRESION
    (27) valor -> . list
    (28) valor -> . set
    (29) valor -> . pair
    (30) valor -> . triple
    (31) valor -> . expresion
    (32) valor -> . ID
    (81) metodo -> . ID PUNTO ID APAR CPAR
    (82) metodo -> . ID PUNTO ID APAR ID CPAR
    (83) metodo -> . atributo PUNTO ID APAR CPAR
    (84) metodo -> . atributo PUNTO ID APAR ID CPAR
    (85) metodo -> . ID PUNTO funcion APAR CPAR
    (86) metodo -> . ID PUNTO funcion APAR ID CPAR
    (87) metodo -> . atributo PUNTO funcion APAR CPAR
    (88) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (106) control -> . if
    (107) control -> . for
    (108) control -> . while
    (104) condicion -> . compmiembro comparador compmiembro
    (105) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (89) atributo -> . ID PUNTO ID
    (33) flotante -> . ENTEROEXPRESION F
    (34) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (35) list -> . LISTOF APAR contenido CPAR
    (36) set -> . SETOF APAR contenido CPAR
    (37) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (38) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (111) if -> . IF APAR condicion CPAR cuerpo
    (112) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (113) for -> . FOR APAR ID IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (120) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (122) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (123) while -> . WHILE APAR condicion CPAR cuerpo
    (99) compmiembro -> . ID
    (100) compmiembro -> . ENTEROEXPRESION
    (101) compmiembro -> . metodo
    (102) compmiembro -> . atributo
    (103) compmiembro -> . asignacion
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . flotante
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) termino -> . ID
    (59) factor -> . ENTEROEXPRESION
    (60) factor -> . flotante
    (61) factor -> . ID
    (66) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 180
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 11
    BOOLEANOEXPRESION shift and go to state 13
    CADENAEXPRESION shift and go to state 14
    LISTOF          shift and go to state 25
    SETOF           shift and go to state 26
    PAIR            shift and go to state 27
    TRIPLE          shift and go to state 28
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    APAR            shift and go to state 20

    cuerpo                         shift and go to state 256
    sentencia                      shift and go to state 179
    asignacion                     shift and go to state 2
    valor                          shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    flotante                       shift and go to state 12
    list                           shift and go to state 15
    set                            shift and go to state 16
    pair                           shift and go to state 17
    triple                         shift and go to state 18
    expresion                      shift and go to state 19
    if                             shift and go to state 21
    for                            shift and go to state 22
    while                          shift and go to state 23
    compmiembro                    shift and go to state 24
    termino                        shift and go to state 29
    factor                         shift and go to state 33

state 256

    (121) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .

    $end            reduce using rule 121 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    ELSE            reduce using rule 121 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    CLLAVE          reduce using rule 121 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUMA in state 29 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 29 resolved as shift
WARNING: shift/reduce conflict for MULT in state 29 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 29 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 29 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 101 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 101 resolved as shift
WARNING: shift/reduce conflict for MULT in state 101 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 101 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 101 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 102 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 102 resolved as shift
WARNING: shift/reduce conflict for MULT in state 102 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 102 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 102 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 103 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 103 resolved as shift
WARNING: shift/reduce conflict for MULT in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 103 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 103 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 104 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 104 resolved as shift
WARNING: shift/reduce conflict for MULT in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 104 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 104 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 105 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 105 resolved as shift
WARNING: shift/reduce conflict for MULT in state 105 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 105 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 105 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 178 resolved as shift
WARNING: reduce/reduce conflict in state 9 resolved using rule (valor -> ID)
WARNING: rejected rule (termino -> ID) in state 9
WARNING: reduce/reduce conflict in state 9 resolved using rule (termino -> ID)
WARNING: rejected rule (factor -> ID) in state 9
WARNING: reduce/reduce conflict in state 9 resolved using rule (valor -> ID)
WARNING: rejected rule (factor -> ID) in state 9
WARNING: reduce/reduce conflict in state 11 resolved using rule (valor -> ENTEROEXPRESION)
WARNING: rejected rule (termino -> ENTEROEXPRESION) in state 11
WARNING: reduce/reduce conflict in state 11 resolved using rule (termino -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 11
WARNING: reduce/reduce conflict in state 11 resolved using rule (valor -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 11
WARNING: reduce/reduce conflict in state 12 resolved using rule (valor -> flotante)
WARNING: rejected rule (termino -> flotante) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (termino -> flotante)
WARNING: rejected rule (factor -> flotante) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (valor -> flotante)
WARNING: rejected rule (factor -> flotante) in state 12
WARNING: reduce/reduce conflict in state 14 resolved using rule (valor -> CADENAEXPRESION)
WARNING: rejected rule (termino -> CADENAEXPRESION) in state 14
WARNING: reduce/reduce conflict in state 15 resolved using rule (valor -> list)
WARNING: rejected rule (termino -> list) in state 15
WARNING: reduce/reduce conflict in state 16 resolved using rule (valor -> set)
WARNING: rejected rule (termino -> set) in state 16
WARNING: reduce/reduce conflict in state 48 resolved using rule (termino -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 48
WARNING: reduce/reduce conflict in state 49 resolved using rule (termino -> flotante)
WARNING: rejected rule (factor -> flotante) in state 49
WARNING: reduce/reduce conflict in state 53 resolved using rule (termino -> ID)
WARNING: rejected rule (factor -> ID) in state 53
WARNING: reduce/reduce conflict in state 97 resolved using rule (valor -> ENTEROEXPRESION)
WARNING: rejected rule (termino -> ENTEROEXPRESION) in state 97
WARNING: reduce/reduce conflict in state 97 resolved using rule (termino -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 97
WARNING: reduce/reduce conflict in state 97 resolved using rule (valor -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 97
WARNING: reduce/reduce conflict in state 98 resolved using rule (valor -> ID)
WARNING: rejected rule (termino -> ID) in state 98
WARNING: reduce/reduce conflict in state 98 resolved using rule (termino -> ID)
WARNING: rejected rule (factor -> ID) in state 98
WARNING: reduce/reduce conflict in state 98 resolved using rule (valor -> ID)
WARNING: rejected rule (factor -> ID) in state 98
