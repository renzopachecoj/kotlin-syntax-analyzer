Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ACOR
    ARRAY
    ARROBA
    BOOLEAN
    BREAK
    CCOR
    COMSIMPLE
    DIVISION
    FALSE
    FLOAT
    FUN
    INICIOCOMENTARIO
    LIST
    MODULO
    MULT
    NEGACION
    PAIR
    PREGUNTA
    PUNTOCOMA
    RESTA
    SET
    SIGNODOLAR
    STRING
    TRIPLE
    TRUE

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> asignacion
Rule 2     sentencia -> expresion
Rule 3     sentencia -> metodo
Rule 4     sentencia -> control
Rule 5     sentencia -> condicion
Rule 6     sentencia -> atributo
Rule 7     asignacion -> VAL ID IGUAL NUMEROS
Rule 8     asignacion -> VAR ID IGUAL NUMEROS
Rule 9     expresion -> NUMEROS SUMA NUMEROS
Rule 10    expresion -> PRINTLN APAR COMDOBLE ID COMDOBLE CPAR
Rule 11    expresion -> PRINTLN APAR ID CPAR
Rule 12    funcion -> WITHINDEX
Rule 13    funcion -> GET
Rule 14    funcion -> SLICE
Rule 15    funcion -> COMPARETO
Rule 16    funcion -> GETINDEX
Rule 17    funcion -> HASHCODE
Rule 18    funcion -> CONTAINS
Rule 19    funcion -> SIZE
Rule 20    funcion -> ISEMPTY
Rule 21    funcion -> TOSTRING
Rule 22    funcion -> TOLIST
Rule 23    funcion -> PRINT
Rule 24    funcion -> PRINTLN
Rule 25    funcion -> INDICES
Rule 26    metodo -> ID PUNTO ID APAR CPAR
Rule 27    metodo -> ID PUNTO ID APAR ID CPAR
Rule 28    metodo -> atributo PUNTO ID APAR CPAR
Rule 29    metodo -> atributo PUNTO ID APAR ID CPAR
Rule 30    metodo -> ID PUNTO funcion APAR CPAR
Rule 31    metodo -> ID PUNTO funcion APAR ID CPAR
Rule 32    metodo -> atributo PUNTO funcion APAR CPAR
Rule 33    metodo -> atributo PUNTO funcion APAR ID CPAR
Rule 34    atributo -> ID PUNTO ID
Rule 35    comparador -> IGUALIGUAL
Rule 36    comparador -> TRIPLEIGUAL
Rule 37    comparador -> NOIGUAL
Rule 38    comparador -> MAYOR
Rule 39    comparador -> MENOR
Rule 40    comparador -> MAYORIGUAL
Rule 41    comparador -> MENORIGUAL
Rule 42    conector -> AND
Rule 43    conector -> OR
Rule 44    compmiembro -> ID
Rule 45    compmiembro -> NUMEROS
Rule 46    compmiembro -> metodo
Rule 47    compmiembro -> atributo
Rule 48    compmiembro -> asignacion
Rule 49    condicion -> compmiembro comparador compmiembro
Rule 50    condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro
Rule 51    control -> if
Rule 52    control -> for
Rule 53    control -> while
Rule 54    cuerpo -> sentencia
Rule 55    cuerpo -> ALLAVE sentencia CLLAVE
Rule 56    if -> IF APAR condicion CPAR cuerpo
Rule 57    if -> IF APAR condicion CPAR cuerpo ELSE cuerpo
Rule 58    for -> FOR APAR ID IN ID CPAR cuerpo
Rule 59    for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
Rule 60    for -> FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
Rule 61    for -> FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
Rule 62    for -> FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
Rule 63    for -> FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
Rule 64    for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
Rule 65    for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo
Rule 66    for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
Rule 67    for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
Rule 68    while -> WHILE APAR condicion CPAR cuerpo

Terminals, with rules where they appear

ACOR                 : 
ALLAVE               : 55
AND                  : 42
APAR                 : 10 11 26 27 28 29 30 31 32 33 56 57 58 59 60 61 62 63 64 65 66 66 66 67 67 68
ARRAY                : 
ARROBA               : 
BOOLEAN              : 
BREAK                : 
CCOR                 : 
CLLAVE               : 55
COMA                 : 66 67
COMDOBLE             : 10 10
COMPARETO            : 15
COMSIMPLE            : 
CONTAINS             : 18
CPAR                 : 10 11 26 27 28 29 30 31 32 33 56 57 58 59 60 61 62 63 64 65 66 66 66 67 67 68
DIVISION             : 
DOSPUNTOS            : 59
DOWNTO               : 63
ELSE                 : 57
FALSE                : 
FLOAT                : 
FOR                  : 58 59 60 61 62 63 64 65 66 67
FUN                  : 
GET                  : 13
GETINDEX             : 16
HASHCODE             : 17
ID                   : 7 8 10 11 26 26 27 27 27 28 29 29 30 31 31 33 34 34 44 58 58 59 59 60 61 62 63 64 64 65 65 65 66 66 66 67 67 67
IF                   : 56 57
IGUAL                : 7 8
IGUALIGUAL           : 35
IN                   : 58 59 60 61 62 63 64 65 66 67
INDICES              : 25 64
INICIOCOMENTARIO     : 
INT                  : 59
ISEMPTY              : 20
LIST                 : 
MAYOR                : 38
MAYORIGUAL           : 40
MENOR                : 39
MENORIGUAL           : 41
MODULO               : 
MULT                 : 
NEGACION             : 
NOIGUAL              : 37
NUMEROS              : 7 8 9 9 45 60 60 61 61 62 62 62 63 63 63
OR                   : 43
PAIR                 : 
PREGUNTA             : 
PRINT                : 23
PRINTLN              : 10 11 24
PUNTO                : 26 27 28 29 30 31 32 33 34 64 65 66
PUNTOCOMA            : 
PUNTOPUNTO           : 60
RESTA                : 
SET                  : 
SIGNODOLAR           : 
SIZE                 : 19
SLICE                : 14
STEP                 : 62 63
STRING               : 
SUMA                 : 9
TOLIST               : 22
TOSTRING             : 21
TRIPLE               : 
TRIPLEIGUAL          : 36
TRUE                 : 
UNTIL                : 61 62
VAL                  : 7
VAR                  : 8
WHILE                : 68
WITHINDEX            : 12 66
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 48
atributo             : 6 28 29 32 33 47
comparador           : 49 50 50
compmiembro          : 49 49 50 50 50 50
condicion            : 5 56 57 68
conector             : 50
control              : 4
cuerpo               : 56 57 57 58 59 60 61 62 63 64 65 66 67 68
expresion            : 2
for                  : 52
funcion              : 30 31 32 33
if                   : 51
metodo               : 3 46
sentencia            : 54 55 0
while                : 53

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS
    (9) expresion -> . NUMEROS SUMA NUMEROS
    (10) expresion -> . PRINTLN APAR COMDOBLE ID COMDOBLE CPAR
    (11) expresion -> . PRINTLN APAR ID CPAR
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (51) control -> . if
    (52) control -> . for
    (53) control -> . while
    (49) condicion -> . compmiembro comparador compmiembro
    (50) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (34) atributo -> . ID PUNTO ID
    (56) if -> . IF APAR condicion CPAR cuerpo
    (57) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (58) for -> . FOR APAR ID IN ID CPAR cuerpo
    (59) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> . FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> . FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (66) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (68) while -> . WHILE APAR condicion CPAR cuerpo
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion

    VAL             shift and go to state 8
    VAR             shift and go to state 11
    NUMEROS         shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 9
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    sentencia                      shift and go to state 1
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> asignacion .
    (48) compmiembro -> asignacion .

    $end            reduce using rule 1 (sentencia -> asignacion .)
    ELSE            reduce using rule 1 (sentencia -> asignacion .)
    CLLAVE          reduce using rule 1 (sentencia -> asignacion .)
    IGUALIGUAL      reduce using rule 48 (compmiembro -> asignacion .)
    TRIPLEIGUAL     reduce using rule 48 (compmiembro -> asignacion .)
    NOIGUAL         reduce using rule 48 (compmiembro -> asignacion .)
    MAYOR           reduce using rule 48 (compmiembro -> asignacion .)
    MENOR           reduce using rule 48 (compmiembro -> asignacion .)
    MAYORIGUAL      reduce using rule 48 (compmiembro -> asignacion .)
    MENORIGUAL      reduce using rule 48 (compmiembro -> asignacion .)


state 3

    (2) sentencia -> expresion .

    $end            reduce using rule 2 (sentencia -> expresion .)
    ELSE            reduce using rule 2 (sentencia -> expresion .)
    CLLAVE          reduce using rule 2 (sentencia -> expresion .)


state 4

    (3) sentencia -> metodo .
    (46) compmiembro -> metodo .

    $end            reduce using rule 3 (sentencia -> metodo .)
    ELSE            reduce using rule 3 (sentencia -> metodo .)
    CLLAVE          reduce using rule 3 (sentencia -> metodo .)
    IGUALIGUAL      reduce using rule 46 (compmiembro -> metodo .)
    TRIPLEIGUAL     reduce using rule 46 (compmiembro -> metodo .)
    NOIGUAL         reduce using rule 46 (compmiembro -> metodo .)
    MAYOR           reduce using rule 46 (compmiembro -> metodo .)
    MENOR           reduce using rule 46 (compmiembro -> metodo .)
    MAYORIGUAL      reduce using rule 46 (compmiembro -> metodo .)
    MENORIGUAL      reduce using rule 46 (compmiembro -> metodo .)


state 5

    (4) sentencia -> control .

    $end            reduce using rule 4 (sentencia -> control .)
    ELSE            reduce using rule 4 (sentencia -> control .)
    CLLAVE          reduce using rule 4 (sentencia -> control .)


state 6

    (5) sentencia -> condicion .

    $end            reduce using rule 5 (sentencia -> condicion .)
    ELSE            reduce using rule 5 (sentencia -> condicion .)
    CLLAVE          reduce using rule 5 (sentencia -> condicion .)


state 7

    (6) sentencia -> atributo .
    (28) metodo -> atributo . PUNTO ID APAR CPAR
    (29) metodo -> atributo . PUNTO ID APAR ID CPAR
    (32) metodo -> atributo . PUNTO funcion APAR CPAR
    (33) metodo -> atributo . PUNTO funcion APAR ID CPAR
    (47) compmiembro -> atributo .

    $end            reduce using rule 6 (sentencia -> atributo .)
    ELSE            reduce using rule 6 (sentencia -> atributo .)
    CLLAVE          reduce using rule 6 (sentencia -> atributo .)
    PUNTO           shift and go to state 20
    IGUALIGUAL      reduce using rule 47 (compmiembro -> atributo .)
    TRIPLEIGUAL     reduce using rule 47 (compmiembro -> atributo .)
    NOIGUAL         reduce using rule 47 (compmiembro -> atributo .)
    MAYOR           reduce using rule 47 (compmiembro -> atributo .)
    MENOR           reduce using rule 47 (compmiembro -> atributo .)
    MAYORIGUAL      reduce using rule 47 (compmiembro -> atributo .)
    MENORIGUAL      reduce using rule 47 (compmiembro -> atributo .)


state 8

    (7) asignacion -> VAL . ID IGUAL NUMEROS

    ID              shift and go to state 21


state 9

    (26) metodo -> ID . PUNTO ID APAR CPAR
    (27) metodo -> ID . PUNTO ID APAR ID CPAR
    (30) metodo -> ID . PUNTO funcion APAR CPAR
    (31) metodo -> ID . PUNTO funcion APAR ID CPAR
    (34) atributo -> ID . PUNTO ID
    (44) compmiembro -> ID .

    PUNTO           shift and go to state 22
    IGUALIGUAL      reduce using rule 44 (compmiembro -> ID .)
    TRIPLEIGUAL     reduce using rule 44 (compmiembro -> ID .)
    NOIGUAL         reduce using rule 44 (compmiembro -> ID .)
    MAYOR           reduce using rule 44 (compmiembro -> ID .)
    MENOR           reduce using rule 44 (compmiembro -> ID .)
    MAYORIGUAL      reduce using rule 44 (compmiembro -> ID .)
    MENORIGUAL      reduce using rule 44 (compmiembro -> ID .)


state 10

    (9) expresion -> NUMEROS . SUMA NUMEROS
    (45) compmiembro -> NUMEROS .

    SUMA            shift and go to state 23
    IGUALIGUAL      reduce using rule 45 (compmiembro -> NUMEROS .)
    TRIPLEIGUAL     reduce using rule 45 (compmiembro -> NUMEROS .)
    NOIGUAL         reduce using rule 45 (compmiembro -> NUMEROS .)
    MAYOR           reduce using rule 45 (compmiembro -> NUMEROS .)
    MENOR           reduce using rule 45 (compmiembro -> NUMEROS .)
    MAYORIGUAL      reduce using rule 45 (compmiembro -> NUMEROS .)
    MENORIGUAL      reduce using rule 45 (compmiembro -> NUMEROS .)


state 11

    (8) asignacion -> VAR . ID IGUAL NUMEROS

    ID              shift and go to state 24


state 12

    (10) expresion -> PRINTLN . APAR COMDOBLE ID COMDOBLE CPAR
    (11) expresion -> PRINTLN . APAR ID CPAR

    APAR            shift and go to state 25


state 13

    (51) control -> if .

    $end            reduce using rule 51 (control -> if .)
    ELSE            reduce using rule 51 (control -> if .)
    CLLAVE          reduce using rule 51 (control -> if .)


state 14

    (52) control -> for .

    $end            reduce using rule 52 (control -> for .)
    ELSE            reduce using rule 52 (control -> for .)
    CLLAVE          reduce using rule 52 (control -> for .)


state 15

    (53) control -> while .

    $end            reduce using rule 53 (control -> while .)
    ELSE            reduce using rule 53 (control -> while .)
    CLLAVE          reduce using rule 53 (control -> while .)


state 16

    (49) condicion -> compmiembro . comparador compmiembro
    (50) condicion -> compmiembro . comparador compmiembro conector compmiembro comparador compmiembro
    (35) comparador -> . IGUALIGUAL
    (36) comparador -> . TRIPLEIGUAL
    (37) comparador -> . NOIGUAL
    (38) comparador -> . MAYOR
    (39) comparador -> . MENOR
    (40) comparador -> . MAYORIGUAL
    (41) comparador -> . MENORIGUAL

    IGUALIGUAL      shift and go to state 27
    TRIPLEIGUAL     shift and go to state 28
    NOIGUAL         shift and go to state 29
    MAYOR           shift and go to state 30
    MENOR           shift and go to state 31
    MAYORIGUAL      shift and go to state 32
    MENORIGUAL      shift and go to state 33

    comparador                     shift and go to state 26

state 17

    (56) if -> IF . APAR condicion CPAR cuerpo
    (57) if -> IF . APAR condicion CPAR cuerpo ELSE cuerpo

    APAR            shift and go to state 34


state 18

    (58) for -> FOR . APAR ID IN ID CPAR cuerpo
    (59) for -> FOR . APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> FOR . APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> FOR . APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> FOR . APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> FOR . APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> FOR . APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> FOR . APAR ID IN ID PUNTO ID CPAR cuerpo
    (66) for -> FOR . APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> FOR . APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo

    APAR            shift and go to state 35


state 19

    (68) while -> WHILE . APAR condicion CPAR cuerpo

    APAR            shift and go to state 36


state 20

    (28) metodo -> atributo PUNTO . ID APAR CPAR
    (29) metodo -> atributo PUNTO . ID APAR ID CPAR
    (32) metodo -> atributo PUNTO . funcion APAR CPAR
    (33) metodo -> atributo PUNTO . funcion APAR ID CPAR
    (12) funcion -> . WITHINDEX
    (13) funcion -> . GET
    (14) funcion -> . SLICE
    (15) funcion -> . COMPARETO
    (16) funcion -> . GETINDEX
    (17) funcion -> . HASHCODE
    (18) funcion -> . CONTAINS
    (19) funcion -> . SIZE
    (20) funcion -> . ISEMPTY
    (21) funcion -> . TOSTRING
    (22) funcion -> . TOLIST
    (23) funcion -> . PRINT
    (24) funcion -> . PRINTLN
    (25) funcion -> . INDICES

    ID              shift and go to state 37
    WITHINDEX       shift and go to state 39
    GET             shift and go to state 40
    SLICE           shift and go to state 41
    COMPARETO       shift and go to state 42
    GETINDEX        shift and go to state 43
    HASHCODE        shift and go to state 44
    CONTAINS        shift and go to state 45
    SIZE            shift and go to state 46
    ISEMPTY         shift and go to state 47
    TOSTRING        shift and go to state 48
    TOLIST          shift and go to state 49
    PRINT           shift and go to state 50
    PRINTLN         shift and go to state 51
    INDICES         shift and go to state 52

    funcion                        shift and go to state 38

state 21

    (7) asignacion -> VAL ID . IGUAL NUMEROS

    IGUAL           shift and go to state 53


state 22

    (26) metodo -> ID PUNTO . ID APAR CPAR
    (27) metodo -> ID PUNTO . ID APAR ID CPAR
    (30) metodo -> ID PUNTO . funcion APAR CPAR
    (31) metodo -> ID PUNTO . funcion APAR ID CPAR
    (34) atributo -> ID PUNTO . ID
    (12) funcion -> . WITHINDEX
    (13) funcion -> . GET
    (14) funcion -> . SLICE
    (15) funcion -> . COMPARETO
    (16) funcion -> . GETINDEX
    (17) funcion -> . HASHCODE
    (18) funcion -> . CONTAINS
    (19) funcion -> . SIZE
    (20) funcion -> . ISEMPTY
    (21) funcion -> . TOSTRING
    (22) funcion -> . TOLIST
    (23) funcion -> . PRINT
    (24) funcion -> . PRINTLN
    (25) funcion -> . INDICES

    ID              shift and go to state 54
    WITHINDEX       shift and go to state 39
    GET             shift and go to state 40
    SLICE           shift and go to state 41
    COMPARETO       shift and go to state 42
    GETINDEX        shift and go to state 43
    HASHCODE        shift and go to state 44
    CONTAINS        shift and go to state 45
    SIZE            shift and go to state 46
    ISEMPTY         shift and go to state 47
    TOSTRING        shift and go to state 48
    TOLIST          shift and go to state 49
    PRINT           shift and go to state 50
    PRINTLN         shift and go to state 51
    INDICES         shift and go to state 52

    funcion                        shift and go to state 55

state 23

    (9) expresion -> NUMEROS SUMA . NUMEROS

    NUMEROS         shift and go to state 56


state 24

    (8) asignacion -> VAR ID . IGUAL NUMEROS

    IGUAL           shift and go to state 57


state 25

    (10) expresion -> PRINTLN APAR . COMDOBLE ID COMDOBLE CPAR
    (11) expresion -> PRINTLN APAR . ID CPAR

    COMDOBLE        shift and go to state 58
    ID              shift and go to state 59


state 26

    (49) condicion -> compmiembro comparador . compmiembro
    (50) condicion -> compmiembro comparador . compmiembro conector compmiembro comparador compmiembro
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (34) atributo -> . ID PUNTO ID
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS

    ID              shift and go to state 61
    NUMEROS         shift and go to state 62
    VAL             shift and go to state 8
    VAR             shift and go to state 11

    compmiembro                    shift and go to state 60
    metodo                         shift and go to state 63
    atributo                       shift and go to state 64
    asignacion                     shift and go to state 65

state 27

    (35) comparador -> IGUALIGUAL .

    ID              reduce using rule 35 (comparador -> IGUALIGUAL .)
    NUMEROS         reduce using rule 35 (comparador -> IGUALIGUAL .)
    VAL             reduce using rule 35 (comparador -> IGUALIGUAL .)
    VAR             reduce using rule 35 (comparador -> IGUALIGUAL .)


state 28

    (36) comparador -> TRIPLEIGUAL .

    ID              reduce using rule 36 (comparador -> TRIPLEIGUAL .)
    NUMEROS         reduce using rule 36 (comparador -> TRIPLEIGUAL .)
    VAL             reduce using rule 36 (comparador -> TRIPLEIGUAL .)
    VAR             reduce using rule 36 (comparador -> TRIPLEIGUAL .)


state 29

    (37) comparador -> NOIGUAL .

    ID              reduce using rule 37 (comparador -> NOIGUAL .)
    NUMEROS         reduce using rule 37 (comparador -> NOIGUAL .)
    VAL             reduce using rule 37 (comparador -> NOIGUAL .)
    VAR             reduce using rule 37 (comparador -> NOIGUAL .)


state 30

    (38) comparador -> MAYOR .

    ID              reduce using rule 38 (comparador -> MAYOR .)
    NUMEROS         reduce using rule 38 (comparador -> MAYOR .)
    VAL             reduce using rule 38 (comparador -> MAYOR .)
    VAR             reduce using rule 38 (comparador -> MAYOR .)


state 31

    (39) comparador -> MENOR .

    ID              reduce using rule 39 (comparador -> MENOR .)
    NUMEROS         reduce using rule 39 (comparador -> MENOR .)
    VAL             reduce using rule 39 (comparador -> MENOR .)
    VAR             reduce using rule 39 (comparador -> MENOR .)


state 32

    (40) comparador -> MAYORIGUAL .

    ID              reduce using rule 40 (comparador -> MAYORIGUAL .)
    NUMEROS         reduce using rule 40 (comparador -> MAYORIGUAL .)
    VAL             reduce using rule 40 (comparador -> MAYORIGUAL .)
    VAR             reduce using rule 40 (comparador -> MAYORIGUAL .)


state 33

    (41) comparador -> MENORIGUAL .

    ID              reduce using rule 41 (comparador -> MENORIGUAL .)
    NUMEROS         reduce using rule 41 (comparador -> MENORIGUAL .)
    VAL             reduce using rule 41 (comparador -> MENORIGUAL .)
    VAR             reduce using rule 41 (comparador -> MENORIGUAL .)


state 34

    (56) if -> IF APAR . condicion CPAR cuerpo
    (57) if -> IF APAR . condicion CPAR cuerpo ELSE cuerpo
    (49) condicion -> . compmiembro comparador compmiembro
    (50) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (34) atributo -> . ID PUNTO ID
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS

    ID              shift and go to state 61
    NUMEROS         shift and go to state 62
    VAL             shift and go to state 8
    VAR             shift and go to state 11

    condicion                      shift and go to state 66
    compmiembro                    shift and go to state 16
    metodo                         shift and go to state 63
    atributo                       shift and go to state 64
    asignacion                     shift and go to state 65

state 35

    (58) for -> FOR APAR . ID IN ID CPAR cuerpo
    (59) for -> FOR APAR . ID DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> FOR APAR . ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> FOR APAR . ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> FOR APAR . ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> FOR APAR . ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> FOR APAR . ID IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> FOR APAR . ID IN ID PUNTO ID CPAR cuerpo
    (66) for -> FOR APAR . APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> FOR APAR . APAR ID COMA ID CPAR IN ID CPAR cuerpo

    ID              shift and go to state 68
    APAR            shift and go to state 67


state 36

    (68) while -> WHILE APAR . condicion CPAR cuerpo
    (49) condicion -> . compmiembro comparador compmiembro
    (50) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (34) atributo -> . ID PUNTO ID
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS

    ID              shift and go to state 61
    NUMEROS         shift and go to state 62
    VAL             shift and go to state 8
    VAR             shift and go to state 11

    condicion                      shift and go to state 69
    compmiembro                    shift and go to state 16
    metodo                         shift and go to state 63
    atributo                       shift and go to state 64
    asignacion                     shift and go to state 65

state 37

    (28) metodo -> atributo PUNTO ID . APAR CPAR
    (29) metodo -> atributo PUNTO ID . APAR ID CPAR

    APAR            shift and go to state 70


state 38

    (32) metodo -> atributo PUNTO funcion . APAR CPAR
    (33) metodo -> atributo PUNTO funcion . APAR ID CPAR

    APAR            shift and go to state 71


state 39

    (12) funcion -> WITHINDEX .

    APAR            reduce using rule 12 (funcion -> WITHINDEX .)


state 40

    (13) funcion -> GET .

    APAR            reduce using rule 13 (funcion -> GET .)


state 41

    (14) funcion -> SLICE .

    APAR            reduce using rule 14 (funcion -> SLICE .)


state 42

    (15) funcion -> COMPARETO .

    APAR            reduce using rule 15 (funcion -> COMPARETO .)


state 43

    (16) funcion -> GETINDEX .

    APAR            reduce using rule 16 (funcion -> GETINDEX .)


state 44

    (17) funcion -> HASHCODE .

    APAR            reduce using rule 17 (funcion -> HASHCODE .)


state 45

    (18) funcion -> CONTAINS .

    APAR            reduce using rule 18 (funcion -> CONTAINS .)


state 46

    (19) funcion -> SIZE .

    APAR            reduce using rule 19 (funcion -> SIZE .)


state 47

    (20) funcion -> ISEMPTY .

    APAR            reduce using rule 20 (funcion -> ISEMPTY .)


state 48

    (21) funcion -> TOSTRING .

    APAR            reduce using rule 21 (funcion -> TOSTRING .)


state 49

    (22) funcion -> TOLIST .

    APAR            reduce using rule 22 (funcion -> TOLIST .)


state 50

    (23) funcion -> PRINT .

    APAR            reduce using rule 23 (funcion -> PRINT .)


state 51

    (24) funcion -> PRINTLN .

    APAR            reduce using rule 24 (funcion -> PRINTLN .)


state 52

    (25) funcion -> INDICES .

    APAR            reduce using rule 25 (funcion -> INDICES .)


state 53

    (7) asignacion -> VAL ID IGUAL . NUMEROS

    NUMEROS         shift and go to state 72


state 54

    (26) metodo -> ID PUNTO ID . APAR CPAR
    (27) metodo -> ID PUNTO ID . APAR ID CPAR
    (34) atributo -> ID PUNTO ID .

    APAR            shift and go to state 73
    PUNTO           reduce using rule 34 (atributo -> ID PUNTO ID .)
    $end            reduce using rule 34 (atributo -> ID PUNTO ID .)
    IGUALIGUAL      reduce using rule 34 (atributo -> ID PUNTO ID .)
    TRIPLEIGUAL     reduce using rule 34 (atributo -> ID PUNTO ID .)
    NOIGUAL         reduce using rule 34 (atributo -> ID PUNTO ID .)
    MAYOR           reduce using rule 34 (atributo -> ID PUNTO ID .)
    MENOR           reduce using rule 34 (atributo -> ID PUNTO ID .)
    MAYORIGUAL      reduce using rule 34 (atributo -> ID PUNTO ID .)
    MENORIGUAL      reduce using rule 34 (atributo -> ID PUNTO ID .)
    AND             reduce using rule 34 (atributo -> ID PUNTO ID .)
    OR              reduce using rule 34 (atributo -> ID PUNTO ID .)
    CPAR            reduce using rule 34 (atributo -> ID PUNTO ID .)
    ELSE            reduce using rule 34 (atributo -> ID PUNTO ID .)
    CLLAVE          reduce using rule 34 (atributo -> ID PUNTO ID .)


state 55

    (30) metodo -> ID PUNTO funcion . APAR CPAR
    (31) metodo -> ID PUNTO funcion . APAR ID CPAR

    APAR            shift and go to state 74


state 56

    (9) expresion -> NUMEROS SUMA NUMEROS .

    $end            reduce using rule 9 (expresion -> NUMEROS SUMA NUMEROS .)
    ELSE            reduce using rule 9 (expresion -> NUMEROS SUMA NUMEROS .)
    CLLAVE          reduce using rule 9 (expresion -> NUMEROS SUMA NUMEROS .)


state 57

    (8) asignacion -> VAR ID IGUAL . NUMEROS

    NUMEROS         shift and go to state 75


state 58

    (10) expresion -> PRINTLN APAR COMDOBLE . ID COMDOBLE CPAR

    ID              shift and go to state 76


state 59

    (11) expresion -> PRINTLN APAR ID . CPAR

    CPAR            shift and go to state 77


state 60

    (49) condicion -> compmiembro comparador compmiembro .
    (50) condicion -> compmiembro comparador compmiembro . conector compmiembro comparador compmiembro
    (42) conector -> . AND
    (43) conector -> . OR

    $end            reduce using rule 49 (condicion -> compmiembro comparador compmiembro .)
    CPAR            reduce using rule 49 (condicion -> compmiembro comparador compmiembro .)
    ELSE            reduce using rule 49 (condicion -> compmiembro comparador compmiembro .)
    CLLAVE          reduce using rule 49 (condicion -> compmiembro comparador compmiembro .)
    AND             shift and go to state 79
    OR              shift and go to state 80

    conector                       shift and go to state 78

state 61

    (44) compmiembro -> ID .
    (26) metodo -> ID . PUNTO ID APAR CPAR
    (27) metodo -> ID . PUNTO ID APAR ID CPAR
    (30) metodo -> ID . PUNTO funcion APAR CPAR
    (31) metodo -> ID . PUNTO funcion APAR ID CPAR
    (34) atributo -> ID . PUNTO ID

    AND             reduce using rule 44 (compmiembro -> ID .)
    OR              reduce using rule 44 (compmiembro -> ID .)
    $end            reduce using rule 44 (compmiembro -> ID .)
    CPAR            reduce using rule 44 (compmiembro -> ID .)
    ELSE            reduce using rule 44 (compmiembro -> ID .)
    CLLAVE          reduce using rule 44 (compmiembro -> ID .)
    IGUALIGUAL      reduce using rule 44 (compmiembro -> ID .)
    TRIPLEIGUAL     reduce using rule 44 (compmiembro -> ID .)
    NOIGUAL         reduce using rule 44 (compmiembro -> ID .)
    MAYOR           reduce using rule 44 (compmiembro -> ID .)
    MENOR           reduce using rule 44 (compmiembro -> ID .)
    MAYORIGUAL      reduce using rule 44 (compmiembro -> ID .)
    MENORIGUAL      reduce using rule 44 (compmiembro -> ID .)
    PUNTO           shift and go to state 22


state 62

    (45) compmiembro -> NUMEROS .

    AND             reduce using rule 45 (compmiembro -> NUMEROS .)
    OR              reduce using rule 45 (compmiembro -> NUMEROS .)
    $end            reduce using rule 45 (compmiembro -> NUMEROS .)
    CPAR            reduce using rule 45 (compmiembro -> NUMEROS .)
    ELSE            reduce using rule 45 (compmiembro -> NUMEROS .)
    CLLAVE          reduce using rule 45 (compmiembro -> NUMEROS .)
    IGUALIGUAL      reduce using rule 45 (compmiembro -> NUMEROS .)
    TRIPLEIGUAL     reduce using rule 45 (compmiembro -> NUMEROS .)
    NOIGUAL         reduce using rule 45 (compmiembro -> NUMEROS .)
    MAYOR           reduce using rule 45 (compmiembro -> NUMEROS .)
    MENOR           reduce using rule 45 (compmiembro -> NUMEROS .)
    MAYORIGUAL      reduce using rule 45 (compmiembro -> NUMEROS .)
    MENORIGUAL      reduce using rule 45 (compmiembro -> NUMEROS .)


state 63

    (46) compmiembro -> metodo .

    AND             reduce using rule 46 (compmiembro -> metodo .)
    OR              reduce using rule 46 (compmiembro -> metodo .)
    $end            reduce using rule 46 (compmiembro -> metodo .)
    CPAR            reduce using rule 46 (compmiembro -> metodo .)
    ELSE            reduce using rule 46 (compmiembro -> metodo .)
    CLLAVE          reduce using rule 46 (compmiembro -> metodo .)
    IGUALIGUAL      reduce using rule 46 (compmiembro -> metodo .)
    TRIPLEIGUAL     reduce using rule 46 (compmiembro -> metodo .)
    NOIGUAL         reduce using rule 46 (compmiembro -> metodo .)
    MAYOR           reduce using rule 46 (compmiembro -> metodo .)
    MENOR           reduce using rule 46 (compmiembro -> metodo .)
    MAYORIGUAL      reduce using rule 46 (compmiembro -> metodo .)
    MENORIGUAL      reduce using rule 46 (compmiembro -> metodo .)


state 64

    (47) compmiembro -> atributo .
    (28) metodo -> atributo . PUNTO ID APAR CPAR
    (29) metodo -> atributo . PUNTO ID APAR ID CPAR
    (32) metodo -> atributo . PUNTO funcion APAR CPAR
    (33) metodo -> atributo . PUNTO funcion APAR ID CPAR

    AND             reduce using rule 47 (compmiembro -> atributo .)
    OR              reduce using rule 47 (compmiembro -> atributo .)
    $end            reduce using rule 47 (compmiembro -> atributo .)
    CPAR            reduce using rule 47 (compmiembro -> atributo .)
    ELSE            reduce using rule 47 (compmiembro -> atributo .)
    CLLAVE          reduce using rule 47 (compmiembro -> atributo .)
    IGUALIGUAL      reduce using rule 47 (compmiembro -> atributo .)
    TRIPLEIGUAL     reduce using rule 47 (compmiembro -> atributo .)
    NOIGUAL         reduce using rule 47 (compmiembro -> atributo .)
    MAYOR           reduce using rule 47 (compmiembro -> atributo .)
    MENOR           reduce using rule 47 (compmiembro -> atributo .)
    MAYORIGUAL      reduce using rule 47 (compmiembro -> atributo .)
    MENORIGUAL      reduce using rule 47 (compmiembro -> atributo .)
    PUNTO           shift and go to state 20


state 65

    (48) compmiembro -> asignacion .

    AND             reduce using rule 48 (compmiembro -> asignacion .)
    OR              reduce using rule 48 (compmiembro -> asignacion .)
    $end            reduce using rule 48 (compmiembro -> asignacion .)
    CPAR            reduce using rule 48 (compmiembro -> asignacion .)
    ELSE            reduce using rule 48 (compmiembro -> asignacion .)
    CLLAVE          reduce using rule 48 (compmiembro -> asignacion .)
    IGUALIGUAL      reduce using rule 48 (compmiembro -> asignacion .)
    TRIPLEIGUAL     reduce using rule 48 (compmiembro -> asignacion .)
    NOIGUAL         reduce using rule 48 (compmiembro -> asignacion .)
    MAYOR           reduce using rule 48 (compmiembro -> asignacion .)
    MENOR           reduce using rule 48 (compmiembro -> asignacion .)
    MAYORIGUAL      reduce using rule 48 (compmiembro -> asignacion .)
    MENORIGUAL      reduce using rule 48 (compmiembro -> asignacion .)


state 66

    (56) if -> IF APAR condicion . CPAR cuerpo
    (57) if -> IF APAR condicion . CPAR cuerpo ELSE cuerpo

    CPAR            shift and go to state 81


state 67

    (66) for -> FOR APAR APAR . ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> FOR APAR APAR . ID COMA ID CPAR IN ID CPAR cuerpo

    ID              shift and go to state 82


state 68

    (58) for -> FOR APAR ID . IN ID CPAR cuerpo
    (59) for -> FOR APAR ID . DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> FOR APAR ID . IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> FOR APAR ID . IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> FOR APAR ID . IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> FOR APAR ID . IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> FOR APAR ID . IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> FOR APAR ID . IN ID PUNTO ID CPAR cuerpo

    IN              shift and go to state 83
    DOSPUNTOS       shift and go to state 84


state 69

    (68) while -> WHILE APAR condicion . CPAR cuerpo

    CPAR            shift and go to state 85


state 70

    (28) metodo -> atributo PUNTO ID APAR . CPAR
    (29) metodo -> atributo PUNTO ID APAR . ID CPAR

    CPAR            shift and go to state 87
    ID              shift and go to state 86


state 71

    (32) metodo -> atributo PUNTO funcion APAR . CPAR
    (33) metodo -> atributo PUNTO funcion APAR . ID CPAR

    CPAR            shift and go to state 88
    ID              shift and go to state 89


state 72

    (7) asignacion -> VAL ID IGUAL NUMEROS .

    $end            reduce using rule 7 (asignacion -> VAL ID IGUAL NUMEROS .)
    IGUALIGUAL      reduce using rule 7 (asignacion -> VAL ID IGUAL NUMEROS .)
    TRIPLEIGUAL     reduce using rule 7 (asignacion -> VAL ID IGUAL NUMEROS .)
    NOIGUAL         reduce using rule 7 (asignacion -> VAL ID IGUAL NUMEROS .)
    MAYOR           reduce using rule 7 (asignacion -> VAL ID IGUAL NUMEROS .)
    MENOR           reduce using rule 7 (asignacion -> VAL ID IGUAL NUMEROS .)
    MAYORIGUAL      reduce using rule 7 (asignacion -> VAL ID IGUAL NUMEROS .)
    MENORIGUAL      reduce using rule 7 (asignacion -> VAL ID IGUAL NUMEROS .)
    AND             reduce using rule 7 (asignacion -> VAL ID IGUAL NUMEROS .)
    OR              reduce using rule 7 (asignacion -> VAL ID IGUAL NUMEROS .)
    CPAR            reduce using rule 7 (asignacion -> VAL ID IGUAL NUMEROS .)
    ELSE            reduce using rule 7 (asignacion -> VAL ID IGUAL NUMEROS .)
    CLLAVE          reduce using rule 7 (asignacion -> VAL ID IGUAL NUMEROS .)


state 73

    (26) metodo -> ID PUNTO ID APAR . CPAR
    (27) metodo -> ID PUNTO ID APAR . ID CPAR

    CPAR            shift and go to state 91
    ID              shift and go to state 90


state 74

    (30) metodo -> ID PUNTO funcion APAR . CPAR
    (31) metodo -> ID PUNTO funcion APAR . ID CPAR

    CPAR            shift and go to state 93
    ID              shift and go to state 92


state 75

    (8) asignacion -> VAR ID IGUAL NUMEROS .

    $end            reduce using rule 8 (asignacion -> VAR ID IGUAL NUMEROS .)
    IGUALIGUAL      reduce using rule 8 (asignacion -> VAR ID IGUAL NUMEROS .)
    TRIPLEIGUAL     reduce using rule 8 (asignacion -> VAR ID IGUAL NUMEROS .)
    NOIGUAL         reduce using rule 8 (asignacion -> VAR ID IGUAL NUMEROS .)
    MAYOR           reduce using rule 8 (asignacion -> VAR ID IGUAL NUMEROS .)
    MENOR           reduce using rule 8 (asignacion -> VAR ID IGUAL NUMEROS .)
    MAYORIGUAL      reduce using rule 8 (asignacion -> VAR ID IGUAL NUMEROS .)
    MENORIGUAL      reduce using rule 8 (asignacion -> VAR ID IGUAL NUMEROS .)
    AND             reduce using rule 8 (asignacion -> VAR ID IGUAL NUMEROS .)
    OR              reduce using rule 8 (asignacion -> VAR ID IGUAL NUMEROS .)
    CPAR            reduce using rule 8 (asignacion -> VAR ID IGUAL NUMEROS .)
    ELSE            reduce using rule 8 (asignacion -> VAR ID IGUAL NUMEROS .)
    CLLAVE          reduce using rule 8 (asignacion -> VAR ID IGUAL NUMEROS .)


state 76

    (10) expresion -> PRINTLN APAR COMDOBLE ID . COMDOBLE CPAR

    COMDOBLE        shift and go to state 94


state 77

    (11) expresion -> PRINTLN APAR ID CPAR .

    $end            reduce using rule 11 (expresion -> PRINTLN APAR ID CPAR .)
    ELSE            reduce using rule 11 (expresion -> PRINTLN APAR ID CPAR .)
    CLLAVE          reduce using rule 11 (expresion -> PRINTLN APAR ID CPAR .)


state 78

    (50) condicion -> compmiembro comparador compmiembro conector . compmiembro comparador compmiembro
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (34) atributo -> . ID PUNTO ID
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS

    ID              shift and go to state 61
    NUMEROS         shift and go to state 62
    VAL             shift and go to state 8
    VAR             shift and go to state 11

    compmiembro                    shift and go to state 95
    metodo                         shift and go to state 63
    atributo                       shift and go to state 64
    asignacion                     shift and go to state 65

state 79

    (42) conector -> AND .

    ID              reduce using rule 42 (conector -> AND .)
    NUMEROS         reduce using rule 42 (conector -> AND .)
    VAL             reduce using rule 42 (conector -> AND .)
    VAR             reduce using rule 42 (conector -> AND .)


state 80

    (43) conector -> OR .

    ID              reduce using rule 43 (conector -> OR .)
    NUMEROS         reduce using rule 43 (conector -> OR .)
    VAL             reduce using rule 43 (conector -> OR .)
    VAR             reduce using rule 43 (conector -> OR .)


state 81

    (56) if -> IF APAR condicion CPAR . cuerpo
    (57) if -> IF APAR condicion CPAR . cuerpo ELSE cuerpo
    (54) cuerpo -> . sentencia
    (55) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS
    (9) expresion -> . NUMEROS SUMA NUMEROS
    (10) expresion -> . PRINTLN APAR COMDOBLE ID COMDOBLE CPAR
    (11) expresion -> . PRINTLN APAR ID CPAR
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (51) control -> . if
    (52) control -> . for
    (53) control -> . while
    (49) condicion -> . compmiembro comparador compmiembro
    (50) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (34) atributo -> . ID PUNTO ID
    (56) if -> . IF APAR condicion CPAR cuerpo
    (57) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (58) for -> . FOR APAR ID IN ID CPAR cuerpo
    (59) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> . FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> . FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (66) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (68) while -> . WHILE APAR condicion CPAR cuerpo
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion

    ALLAVE          shift and go to state 98
    VAL             shift and go to state 8
    VAR             shift and go to state 11
    NUMEROS         shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 9
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    condicion                      shift and go to state 6
    cuerpo                         shift and go to state 96
    sentencia                      shift and go to state 97
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    atributo                       shift and go to state 7
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16

state 82

    (66) for -> FOR APAR APAR ID . COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> FOR APAR APAR ID . COMA ID CPAR IN ID CPAR cuerpo

    COMA            shift and go to state 99


state 83

    (58) for -> FOR APAR ID IN . ID CPAR cuerpo
    (60) for -> FOR APAR ID IN . NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> FOR APAR ID IN . NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> FOR APAR ID IN . NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> FOR APAR ID IN . NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> FOR APAR ID IN . ID PUNTO INDICES CPAR cuerpo
    (65) for -> FOR APAR ID IN . ID PUNTO ID CPAR cuerpo

    ID              shift and go to state 100
    NUMEROS         shift and go to state 101


state 84

    (59) for -> FOR APAR ID DOSPUNTOS . INT IN ID CPAR cuerpo

    INT             shift and go to state 102


state 85

    (68) while -> WHILE APAR condicion CPAR . cuerpo
    (54) cuerpo -> . sentencia
    (55) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS
    (9) expresion -> . NUMEROS SUMA NUMEROS
    (10) expresion -> . PRINTLN APAR COMDOBLE ID COMDOBLE CPAR
    (11) expresion -> . PRINTLN APAR ID CPAR
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (51) control -> . if
    (52) control -> . for
    (53) control -> . while
    (49) condicion -> . compmiembro comparador compmiembro
    (50) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (34) atributo -> . ID PUNTO ID
    (56) if -> . IF APAR condicion CPAR cuerpo
    (57) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (58) for -> . FOR APAR ID IN ID CPAR cuerpo
    (59) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> . FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> . FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (66) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (68) while -> . WHILE APAR condicion CPAR cuerpo
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion

    ALLAVE          shift and go to state 98
    VAL             shift and go to state 8
    VAR             shift and go to state 11
    NUMEROS         shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 9
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    condicion                      shift and go to state 6
    cuerpo                         shift and go to state 103
    sentencia                      shift and go to state 97
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    atributo                       shift and go to state 7
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16

state 86

    (29) metodo -> atributo PUNTO ID APAR ID . CPAR

    CPAR            shift and go to state 104


state 87

    (28) metodo -> atributo PUNTO ID APAR CPAR .

    $end            reduce using rule 28 (metodo -> atributo PUNTO ID APAR CPAR .)
    IGUALIGUAL      reduce using rule 28 (metodo -> atributo PUNTO ID APAR CPAR .)
    TRIPLEIGUAL     reduce using rule 28 (metodo -> atributo PUNTO ID APAR CPAR .)
    NOIGUAL         reduce using rule 28 (metodo -> atributo PUNTO ID APAR CPAR .)
    MAYOR           reduce using rule 28 (metodo -> atributo PUNTO ID APAR CPAR .)
    MENOR           reduce using rule 28 (metodo -> atributo PUNTO ID APAR CPAR .)
    MAYORIGUAL      reduce using rule 28 (metodo -> atributo PUNTO ID APAR CPAR .)
    MENORIGUAL      reduce using rule 28 (metodo -> atributo PUNTO ID APAR CPAR .)
    AND             reduce using rule 28 (metodo -> atributo PUNTO ID APAR CPAR .)
    OR              reduce using rule 28 (metodo -> atributo PUNTO ID APAR CPAR .)
    CPAR            reduce using rule 28 (metodo -> atributo PUNTO ID APAR CPAR .)
    ELSE            reduce using rule 28 (metodo -> atributo PUNTO ID APAR CPAR .)
    CLLAVE          reduce using rule 28 (metodo -> atributo PUNTO ID APAR CPAR .)


state 88

    (32) metodo -> atributo PUNTO funcion APAR CPAR .

    $end            reduce using rule 32 (metodo -> atributo PUNTO funcion APAR CPAR .)
    IGUALIGUAL      reduce using rule 32 (metodo -> atributo PUNTO funcion APAR CPAR .)
    TRIPLEIGUAL     reduce using rule 32 (metodo -> atributo PUNTO funcion APAR CPAR .)
    NOIGUAL         reduce using rule 32 (metodo -> atributo PUNTO funcion APAR CPAR .)
    MAYOR           reduce using rule 32 (metodo -> atributo PUNTO funcion APAR CPAR .)
    MENOR           reduce using rule 32 (metodo -> atributo PUNTO funcion APAR CPAR .)
    MAYORIGUAL      reduce using rule 32 (metodo -> atributo PUNTO funcion APAR CPAR .)
    MENORIGUAL      reduce using rule 32 (metodo -> atributo PUNTO funcion APAR CPAR .)
    AND             reduce using rule 32 (metodo -> atributo PUNTO funcion APAR CPAR .)
    OR              reduce using rule 32 (metodo -> atributo PUNTO funcion APAR CPAR .)
    CPAR            reduce using rule 32 (metodo -> atributo PUNTO funcion APAR CPAR .)
    ELSE            reduce using rule 32 (metodo -> atributo PUNTO funcion APAR CPAR .)
    CLLAVE          reduce using rule 32 (metodo -> atributo PUNTO funcion APAR CPAR .)


state 89

    (33) metodo -> atributo PUNTO funcion APAR ID . CPAR

    CPAR            shift and go to state 105


state 90

    (27) metodo -> ID PUNTO ID APAR ID . CPAR

    CPAR            shift and go to state 106


state 91

    (26) metodo -> ID PUNTO ID APAR CPAR .

    $end            reduce using rule 26 (metodo -> ID PUNTO ID APAR CPAR .)
    IGUALIGUAL      reduce using rule 26 (metodo -> ID PUNTO ID APAR CPAR .)
    TRIPLEIGUAL     reduce using rule 26 (metodo -> ID PUNTO ID APAR CPAR .)
    NOIGUAL         reduce using rule 26 (metodo -> ID PUNTO ID APAR CPAR .)
    MAYOR           reduce using rule 26 (metodo -> ID PUNTO ID APAR CPAR .)
    MENOR           reduce using rule 26 (metodo -> ID PUNTO ID APAR CPAR .)
    MAYORIGUAL      reduce using rule 26 (metodo -> ID PUNTO ID APAR CPAR .)
    MENORIGUAL      reduce using rule 26 (metodo -> ID PUNTO ID APAR CPAR .)
    AND             reduce using rule 26 (metodo -> ID PUNTO ID APAR CPAR .)
    OR              reduce using rule 26 (metodo -> ID PUNTO ID APAR CPAR .)
    CPAR            reduce using rule 26 (metodo -> ID PUNTO ID APAR CPAR .)
    ELSE            reduce using rule 26 (metodo -> ID PUNTO ID APAR CPAR .)
    CLLAVE          reduce using rule 26 (metodo -> ID PUNTO ID APAR CPAR .)


state 92

    (31) metodo -> ID PUNTO funcion APAR ID . CPAR

    CPAR            shift and go to state 107


state 93

    (30) metodo -> ID PUNTO funcion APAR CPAR .

    $end            reduce using rule 30 (metodo -> ID PUNTO funcion APAR CPAR .)
    IGUALIGUAL      reduce using rule 30 (metodo -> ID PUNTO funcion APAR CPAR .)
    TRIPLEIGUAL     reduce using rule 30 (metodo -> ID PUNTO funcion APAR CPAR .)
    NOIGUAL         reduce using rule 30 (metodo -> ID PUNTO funcion APAR CPAR .)
    MAYOR           reduce using rule 30 (metodo -> ID PUNTO funcion APAR CPAR .)
    MENOR           reduce using rule 30 (metodo -> ID PUNTO funcion APAR CPAR .)
    MAYORIGUAL      reduce using rule 30 (metodo -> ID PUNTO funcion APAR CPAR .)
    MENORIGUAL      reduce using rule 30 (metodo -> ID PUNTO funcion APAR CPAR .)
    AND             reduce using rule 30 (metodo -> ID PUNTO funcion APAR CPAR .)
    OR              reduce using rule 30 (metodo -> ID PUNTO funcion APAR CPAR .)
    CPAR            reduce using rule 30 (metodo -> ID PUNTO funcion APAR CPAR .)
    ELSE            reduce using rule 30 (metodo -> ID PUNTO funcion APAR CPAR .)
    CLLAVE          reduce using rule 30 (metodo -> ID PUNTO funcion APAR CPAR .)


state 94

    (10) expresion -> PRINTLN APAR COMDOBLE ID COMDOBLE . CPAR

    CPAR            shift and go to state 108


state 95

    (50) condicion -> compmiembro comparador compmiembro conector compmiembro . comparador compmiembro
    (35) comparador -> . IGUALIGUAL
    (36) comparador -> . TRIPLEIGUAL
    (37) comparador -> . NOIGUAL
    (38) comparador -> . MAYOR
    (39) comparador -> . MENOR
    (40) comparador -> . MAYORIGUAL
    (41) comparador -> . MENORIGUAL

    IGUALIGUAL      shift and go to state 27
    TRIPLEIGUAL     shift and go to state 28
    NOIGUAL         shift and go to state 29
    MAYOR           shift and go to state 30
    MENOR           shift and go to state 31
    MAYORIGUAL      shift and go to state 32
    MENORIGUAL      shift and go to state 33

    comparador                     shift and go to state 109

state 96

    (56) if -> IF APAR condicion CPAR cuerpo .
    (57) if -> IF APAR condicion CPAR cuerpo . ELSE cuerpo

  ! shift/reduce conflict for ELSE resolved as shift
    $end            reduce using rule 56 (if -> IF APAR condicion CPAR cuerpo .)
    CLLAVE          reduce using rule 56 (if -> IF APAR condicion CPAR cuerpo .)
    ELSE            shift and go to state 110

  ! ELSE            [ reduce using rule 56 (if -> IF APAR condicion CPAR cuerpo .) ]


state 97

    (54) cuerpo -> sentencia .

    ELSE            reduce using rule 54 (cuerpo -> sentencia .)
    $end            reduce using rule 54 (cuerpo -> sentencia .)
    CLLAVE          reduce using rule 54 (cuerpo -> sentencia .)


state 98

    (55) cuerpo -> ALLAVE . sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS
    (9) expresion -> . NUMEROS SUMA NUMEROS
    (10) expresion -> . PRINTLN APAR COMDOBLE ID COMDOBLE CPAR
    (11) expresion -> . PRINTLN APAR ID CPAR
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (51) control -> . if
    (52) control -> . for
    (53) control -> . while
    (49) condicion -> . compmiembro comparador compmiembro
    (50) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (34) atributo -> . ID PUNTO ID
    (56) if -> . IF APAR condicion CPAR cuerpo
    (57) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (58) for -> . FOR APAR ID IN ID CPAR cuerpo
    (59) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> . FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> . FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (66) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (68) while -> . WHILE APAR condicion CPAR cuerpo
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion

    VAL             shift and go to state 8
    VAR             shift and go to state 11
    NUMEROS         shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 9
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    sentencia                      shift and go to state 111
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16

state 99

    (66) for -> FOR APAR APAR ID COMA . ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> FOR APAR APAR ID COMA . ID CPAR IN ID CPAR cuerpo

    ID              shift and go to state 112


state 100

    (58) for -> FOR APAR ID IN ID . CPAR cuerpo
    (64) for -> FOR APAR ID IN ID . PUNTO INDICES CPAR cuerpo
    (65) for -> FOR APAR ID IN ID . PUNTO ID CPAR cuerpo

    CPAR            shift and go to state 113
    PUNTO           shift and go to state 114


state 101

    (60) for -> FOR APAR ID IN NUMEROS . PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> FOR APAR ID IN NUMEROS . UNTIL NUMEROS CPAR cuerpo
    (62) for -> FOR APAR ID IN NUMEROS . UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> FOR APAR ID IN NUMEROS . DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo

    PUNTOPUNTO      shift and go to state 115
    UNTIL           shift and go to state 116
    DOWNTO          shift and go to state 117


state 102

    (59) for -> FOR APAR ID DOSPUNTOS INT . IN ID CPAR cuerpo

    IN              shift and go to state 118


state 103

    (68) while -> WHILE APAR condicion CPAR cuerpo .

    $end            reduce using rule 68 (while -> WHILE APAR condicion CPAR cuerpo .)
    ELSE            reduce using rule 68 (while -> WHILE APAR condicion CPAR cuerpo .)
    CLLAVE          reduce using rule 68 (while -> WHILE APAR condicion CPAR cuerpo .)


state 104

    (29) metodo -> atributo PUNTO ID APAR ID CPAR .

    $end            reduce using rule 29 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    IGUALIGUAL      reduce using rule 29 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    TRIPLEIGUAL     reduce using rule 29 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    NOIGUAL         reduce using rule 29 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    MAYOR           reduce using rule 29 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    MENOR           reduce using rule 29 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    MAYORIGUAL      reduce using rule 29 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    MENORIGUAL      reduce using rule 29 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    AND             reduce using rule 29 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    OR              reduce using rule 29 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    CPAR            reduce using rule 29 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    ELSE            reduce using rule 29 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    CLLAVE          reduce using rule 29 (metodo -> atributo PUNTO ID APAR ID CPAR .)


state 105

    (33) metodo -> atributo PUNTO funcion APAR ID CPAR .

    $end            reduce using rule 33 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    IGUALIGUAL      reduce using rule 33 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    TRIPLEIGUAL     reduce using rule 33 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    NOIGUAL         reduce using rule 33 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    MAYOR           reduce using rule 33 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    MENOR           reduce using rule 33 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    MAYORIGUAL      reduce using rule 33 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    MENORIGUAL      reduce using rule 33 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    AND             reduce using rule 33 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    OR              reduce using rule 33 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    CPAR            reduce using rule 33 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    ELSE            reduce using rule 33 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    CLLAVE          reduce using rule 33 (metodo -> atributo PUNTO funcion APAR ID CPAR .)


state 106

    (27) metodo -> ID PUNTO ID APAR ID CPAR .

    $end            reduce using rule 27 (metodo -> ID PUNTO ID APAR ID CPAR .)
    IGUALIGUAL      reduce using rule 27 (metodo -> ID PUNTO ID APAR ID CPAR .)
    TRIPLEIGUAL     reduce using rule 27 (metodo -> ID PUNTO ID APAR ID CPAR .)
    NOIGUAL         reduce using rule 27 (metodo -> ID PUNTO ID APAR ID CPAR .)
    MAYOR           reduce using rule 27 (metodo -> ID PUNTO ID APAR ID CPAR .)
    MENOR           reduce using rule 27 (metodo -> ID PUNTO ID APAR ID CPAR .)
    MAYORIGUAL      reduce using rule 27 (metodo -> ID PUNTO ID APAR ID CPAR .)
    MENORIGUAL      reduce using rule 27 (metodo -> ID PUNTO ID APAR ID CPAR .)
    AND             reduce using rule 27 (metodo -> ID PUNTO ID APAR ID CPAR .)
    OR              reduce using rule 27 (metodo -> ID PUNTO ID APAR ID CPAR .)
    CPAR            reduce using rule 27 (metodo -> ID PUNTO ID APAR ID CPAR .)
    ELSE            reduce using rule 27 (metodo -> ID PUNTO ID APAR ID CPAR .)
    CLLAVE          reduce using rule 27 (metodo -> ID PUNTO ID APAR ID CPAR .)


state 107

    (31) metodo -> ID PUNTO funcion APAR ID CPAR .

    $end            reduce using rule 31 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    IGUALIGUAL      reduce using rule 31 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    TRIPLEIGUAL     reduce using rule 31 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    NOIGUAL         reduce using rule 31 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    MAYOR           reduce using rule 31 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    MENOR           reduce using rule 31 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    MAYORIGUAL      reduce using rule 31 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    MENORIGUAL      reduce using rule 31 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    AND             reduce using rule 31 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    OR              reduce using rule 31 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    CPAR            reduce using rule 31 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    ELSE            reduce using rule 31 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    CLLAVE          reduce using rule 31 (metodo -> ID PUNTO funcion APAR ID CPAR .)


state 108

    (10) expresion -> PRINTLN APAR COMDOBLE ID COMDOBLE CPAR .

    $end            reduce using rule 10 (expresion -> PRINTLN APAR COMDOBLE ID COMDOBLE CPAR .)
    ELSE            reduce using rule 10 (expresion -> PRINTLN APAR COMDOBLE ID COMDOBLE CPAR .)
    CLLAVE          reduce using rule 10 (expresion -> PRINTLN APAR COMDOBLE ID COMDOBLE CPAR .)


state 109

    (50) condicion -> compmiembro comparador compmiembro conector compmiembro comparador . compmiembro
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (34) atributo -> . ID PUNTO ID
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS

    ID              shift and go to state 61
    NUMEROS         shift and go to state 62
    VAL             shift and go to state 8
    VAR             shift and go to state 11

    compmiembro                    shift and go to state 119
    metodo                         shift and go to state 63
    atributo                       shift and go to state 64
    asignacion                     shift and go to state 65

state 110

    (57) if -> IF APAR condicion CPAR cuerpo ELSE . cuerpo
    (54) cuerpo -> . sentencia
    (55) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS
    (9) expresion -> . NUMEROS SUMA NUMEROS
    (10) expresion -> . PRINTLN APAR COMDOBLE ID COMDOBLE CPAR
    (11) expresion -> . PRINTLN APAR ID CPAR
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (51) control -> . if
    (52) control -> . for
    (53) control -> . while
    (49) condicion -> . compmiembro comparador compmiembro
    (50) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (34) atributo -> . ID PUNTO ID
    (56) if -> . IF APAR condicion CPAR cuerpo
    (57) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (58) for -> . FOR APAR ID IN ID CPAR cuerpo
    (59) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> . FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> . FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (66) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (68) while -> . WHILE APAR condicion CPAR cuerpo
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion

    ALLAVE          shift and go to state 98
    VAL             shift and go to state 8
    VAR             shift and go to state 11
    NUMEROS         shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 9
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    condicion                      shift and go to state 6
    cuerpo                         shift and go to state 120
    sentencia                      shift and go to state 97
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    atributo                       shift and go to state 7
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16

state 111

    (55) cuerpo -> ALLAVE sentencia . CLLAVE

    CLLAVE          shift and go to state 121


state 112

    (66) for -> FOR APAR APAR ID COMA ID . CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> FOR APAR APAR ID COMA ID . CPAR IN ID CPAR cuerpo

    CPAR            shift and go to state 122


state 113

    (58) for -> FOR APAR ID IN ID CPAR . cuerpo
    (54) cuerpo -> . sentencia
    (55) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS
    (9) expresion -> . NUMEROS SUMA NUMEROS
    (10) expresion -> . PRINTLN APAR COMDOBLE ID COMDOBLE CPAR
    (11) expresion -> . PRINTLN APAR ID CPAR
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (51) control -> . if
    (52) control -> . for
    (53) control -> . while
    (49) condicion -> . compmiembro comparador compmiembro
    (50) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (34) atributo -> . ID PUNTO ID
    (56) if -> . IF APAR condicion CPAR cuerpo
    (57) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (58) for -> . FOR APAR ID IN ID CPAR cuerpo
    (59) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> . FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> . FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (66) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (68) while -> . WHILE APAR condicion CPAR cuerpo
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion

    ALLAVE          shift and go to state 98
    VAL             shift and go to state 8
    VAR             shift and go to state 11
    NUMEROS         shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 9
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    cuerpo                         shift and go to state 123
    sentencia                      shift and go to state 97
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16

state 114

    (64) for -> FOR APAR ID IN ID PUNTO . INDICES CPAR cuerpo
    (65) for -> FOR APAR ID IN ID PUNTO . ID CPAR cuerpo

    INDICES         shift and go to state 125
    ID              shift and go to state 124


state 115

    (60) for -> FOR APAR ID IN NUMEROS PUNTOPUNTO . NUMEROS CPAR cuerpo

    NUMEROS         shift and go to state 126


state 116

    (61) for -> FOR APAR ID IN NUMEROS UNTIL . NUMEROS CPAR cuerpo
    (62) for -> FOR APAR ID IN NUMEROS UNTIL . NUMEROS STEP NUMEROS CPAR cuerpo

    NUMEROS         shift and go to state 127


state 117

    (63) for -> FOR APAR ID IN NUMEROS DOWNTO . NUMEROS STEP NUMEROS CPAR cuerpo

    NUMEROS         shift and go to state 128


state 118

    (59) for -> FOR APAR ID DOSPUNTOS INT IN . ID CPAR cuerpo

    ID              shift and go to state 129


state 119

    (50) condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .

    $end            reduce using rule 50 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    CPAR            reduce using rule 50 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    ELSE            reduce using rule 50 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    CLLAVE          reduce using rule 50 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)


state 120

    (57) if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .

    $end            reduce using rule 57 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    ELSE            reduce using rule 57 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    CLLAVE          reduce using rule 57 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)


state 121

    (55) cuerpo -> ALLAVE sentencia CLLAVE .

    ELSE            reduce using rule 55 (cuerpo -> ALLAVE sentencia CLLAVE .)
    $end            reduce using rule 55 (cuerpo -> ALLAVE sentencia CLLAVE .)
    CLLAVE          reduce using rule 55 (cuerpo -> ALLAVE sentencia CLLAVE .)


state 122

    (66) for -> FOR APAR APAR ID COMA ID CPAR . IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> FOR APAR APAR ID COMA ID CPAR . IN ID CPAR cuerpo

    IN              shift and go to state 130


state 123

    (58) for -> FOR APAR ID IN ID CPAR cuerpo .

    $end            reduce using rule 58 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    ELSE            reduce using rule 58 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    CLLAVE          reduce using rule 58 (for -> FOR APAR ID IN ID CPAR cuerpo .)


state 124

    (65) for -> FOR APAR ID IN ID PUNTO ID . CPAR cuerpo

    CPAR            shift and go to state 131


state 125

    (64) for -> FOR APAR ID IN ID PUNTO INDICES . CPAR cuerpo

    CPAR            shift and go to state 132


state 126

    (60) for -> FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS . CPAR cuerpo

    CPAR            shift and go to state 133


state 127

    (61) for -> FOR APAR ID IN NUMEROS UNTIL NUMEROS . CPAR cuerpo
    (62) for -> FOR APAR ID IN NUMEROS UNTIL NUMEROS . STEP NUMEROS CPAR cuerpo

    CPAR            shift and go to state 134
    STEP            shift and go to state 135


state 128

    (63) for -> FOR APAR ID IN NUMEROS DOWNTO NUMEROS . STEP NUMEROS CPAR cuerpo

    STEP            shift and go to state 136


state 129

    (59) for -> FOR APAR ID DOSPUNTOS INT IN ID . CPAR cuerpo

    CPAR            shift and go to state 137


state 130

    (66) for -> FOR APAR APAR ID COMA ID CPAR IN . ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> FOR APAR APAR ID COMA ID CPAR IN . ID CPAR cuerpo

    ID              shift and go to state 138


state 131

    (65) for -> FOR APAR ID IN ID PUNTO ID CPAR . cuerpo
    (54) cuerpo -> . sentencia
    (55) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS
    (9) expresion -> . NUMEROS SUMA NUMEROS
    (10) expresion -> . PRINTLN APAR COMDOBLE ID COMDOBLE CPAR
    (11) expresion -> . PRINTLN APAR ID CPAR
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (51) control -> . if
    (52) control -> . for
    (53) control -> . while
    (49) condicion -> . compmiembro comparador compmiembro
    (50) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (34) atributo -> . ID PUNTO ID
    (56) if -> . IF APAR condicion CPAR cuerpo
    (57) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (58) for -> . FOR APAR ID IN ID CPAR cuerpo
    (59) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> . FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> . FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (66) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (68) while -> . WHILE APAR condicion CPAR cuerpo
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion

    ALLAVE          shift and go to state 98
    VAL             shift and go to state 8
    VAR             shift and go to state 11
    NUMEROS         shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 9
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    cuerpo                         shift and go to state 139
    sentencia                      shift and go to state 97
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16

state 132

    (64) for -> FOR APAR ID IN ID PUNTO INDICES CPAR . cuerpo
    (54) cuerpo -> . sentencia
    (55) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS
    (9) expresion -> . NUMEROS SUMA NUMEROS
    (10) expresion -> . PRINTLN APAR COMDOBLE ID COMDOBLE CPAR
    (11) expresion -> . PRINTLN APAR ID CPAR
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (51) control -> . if
    (52) control -> . for
    (53) control -> . while
    (49) condicion -> . compmiembro comparador compmiembro
    (50) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (34) atributo -> . ID PUNTO ID
    (56) if -> . IF APAR condicion CPAR cuerpo
    (57) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (58) for -> . FOR APAR ID IN ID CPAR cuerpo
    (59) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> . FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> . FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (66) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (68) while -> . WHILE APAR condicion CPAR cuerpo
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion

    ALLAVE          shift and go to state 98
    VAL             shift and go to state 8
    VAR             shift and go to state 11
    NUMEROS         shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 9
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    cuerpo                         shift and go to state 140
    sentencia                      shift and go to state 97
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16

state 133

    (60) for -> FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR . cuerpo
    (54) cuerpo -> . sentencia
    (55) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS
    (9) expresion -> . NUMEROS SUMA NUMEROS
    (10) expresion -> . PRINTLN APAR COMDOBLE ID COMDOBLE CPAR
    (11) expresion -> . PRINTLN APAR ID CPAR
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (51) control -> . if
    (52) control -> . for
    (53) control -> . while
    (49) condicion -> . compmiembro comparador compmiembro
    (50) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (34) atributo -> . ID PUNTO ID
    (56) if -> . IF APAR condicion CPAR cuerpo
    (57) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (58) for -> . FOR APAR ID IN ID CPAR cuerpo
    (59) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> . FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> . FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (66) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (68) while -> . WHILE APAR condicion CPAR cuerpo
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion

    ALLAVE          shift and go to state 98
    VAL             shift and go to state 8
    VAR             shift and go to state 11
    NUMEROS         shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 9
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    cuerpo                         shift and go to state 141
    sentencia                      shift and go to state 97
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16

state 134

    (61) for -> FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR . cuerpo
    (54) cuerpo -> . sentencia
    (55) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS
    (9) expresion -> . NUMEROS SUMA NUMEROS
    (10) expresion -> . PRINTLN APAR COMDOBLE ID COMDOBLE CPAR
    (11) expresion -> . PRINTLN APAR ID CPAR
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (51) control -> . if
    (52) control -> . for
    (53) control -> . while
    (49) condicion -> . compmiembro comparador compmiembro
    (50) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (34) atributo -> . ID PUNTO ID
    (56) if -> . IF APAR condicion CPAR cuerpo
    (57) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (58) for -> . FOR APAR ID IN ID CPAR cuerpo
    (59) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> . FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> . FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (66) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (68) while -> . WHILE APAR condicion CPAR cuerpo
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion

    ALLAVE          shift and go to state 98
    VAL             shift and go to state 8
    VAR             shift and go to state 11
    NUMEROS         shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 9
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    cuerpo                         shift and go to state 142
    sentencia                      shift and go to state 97
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16

state 135

    (62) for -> FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP . NUMEROS CPAR cuerpo

    NUMEROS         shift and go to state 143


state 136

    (63) for -> FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP . NUMEROS CPAR cuerpo

    NUMEROS         shift and go to state 144


state 137

    (59) for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR . cuerpo
    (54) cuerpo -> . sentencia
    (55) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS
    (9) expresion -> . NUMEROS SUMA NUMEROS
    (10) expresion -> . PRINTLN APAR COMDOBLE ID COMDOBLE CPAR
    (11) expresion -> . PRINTLN APAR ID CPAR
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (51) control -> . if
    (52) control -> . for
    (53) control -> . while
    (49) condicion -> . compmiembro comparador compmiembro
    (50) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (34) atributo -> . ID PUNTO ID
    (56) if -> . IF APAR condicion CPAR cuerpo
    (57) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (58) for -> . FOR APAR ID IN ID CPAR cuerpo
    (59) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> . FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> . FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (66) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (68) while -> . WHILE APAR condicion CPAR cuerpo
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion

    ALLAVE          shift and go to state 98
    VAL             shift and go to state 8
    VAR             shift and go to state 11
    NUMEROS         shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 9
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    cuerpo                         shift and go to state 145
    sentencia                      shift and go to state 97
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16

state 138

    (66) for -> FOR APAR APAR ID COMA ID CPAR IN ID . PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> FOR APAR APAR ID COMA ID CPAR IN ID . CPAR cuerpo

    PUNTO           shift and go to state 147
    CPAR            shift and go to state 146


state 139

    (65) for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .

    $end            reduce using rule 65 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    ELSE            reduce using rule 65 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    CLLAVE          reduce using rule 65 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)


state 140

    (64) for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .

    $end            reduce using rule 64 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    ELSE            reduce using rule 64 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    CLLAVE          reduce using rule 64 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)


state 141

    (60) for -> FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo .

    $end            reduce using rule 60 (for -> FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo .)
    ELSE            reduce using rule 60 (for -> FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo .)
    CLLAVE          reduce using rule 60 (for -> FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo .)


state 142

    (61) for -> FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo .

    $end            reduce using rule 61 (for -> FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo .)
    ELSE            reduce using rule 61 (for -> FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo .)
    CLLAVE          reduce using rule 61 (for -> FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo .)


state 143

    (62) for -> FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS . CPAR cuerpo

    CPAR            shift and go to state 148


state 144

    (63) for -> FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS . CPAR cuerpo

    CPAR            shift and go to state 149


state 145

    (59) for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .

    $end            reduce using rule 59 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    ELSE            reduce using rule 59 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    CLLAVE          reduce using rule 59 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)


state 146

    (67) for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR . cuerpo
    (54) cuerpo -> . sentencia
    (55) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS
    (9) expresion -> . NUMEROS SUMA NUMEROS
    (10) expresion -> . PRINTLN APAR COMDOBLE ID COMDOBLE CPAR
    (11) expresion -> . PRINTLN APAR ID CPAR
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (51) control -> . if
    (52) control -> . for
    (53) control -> . while
    (49) condicion -> . compmiembro comparador compmiembro
    (50) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (34) atributo -> . ID PUNTO ID
    (56) if -> . IF APAR condicion CPAR cuerpo
    (57) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (58) for -> . FOR APAR ID IN ID CPAR cuerpo
    (59) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> . FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> . FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (66) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (68) while -> . WHILE APAR condicion CPAR cuerpo
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion

    ALLAVE          shift and go to state 98
    VAL             shift and go to state 8
    VAR             shift and go to state 11
    NUMEROS         shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 9
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    cuerpo                         shift and go to state 150
    sentencia                      shift and go to state 97
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16

state 147

    (66) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO . WITHINDEX APAR CPAR CPAR cuerpo

    WITHINDEX       shift and go to state 151


state 148

    (62) for -> FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR . cuerpo
    (54) cuerpo -> . sentencia
    (55) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS
    (9) expresion -> . NUMEROS SUMA NUMEROS
    (10) expresion -> . PRINTLN APAR COMDOBLE ID COMDOBLE CPAR
    (11) expresion -> . PRINTLN APAR ID CPAR
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (51) control -> . if
    (52) control -> . for
    (53) control -> . while
    (49) condicion -> . compmiembro comparador compmiembro
    (50) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (34) atributo -> . ID PUNTO ID
    (56) if -> . IF APAR condicion CPAR cuerpo
    (57) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (58) for -> . FOR APAR ID IN ID CPAR cuerpo
    (59) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> . FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> . FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (66) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (68) while -> . WHILE APAR condicion CPAR cuerpo
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion

    ALLAVE          shift and go to state 98
    VAL             shift and go to state 8
    VAR             shift and go to state 11
    NUMEROS         shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 9
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    cuerpo                         shift and go to state 152
    sentencia                      shift and go to state 97
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16

state 149

    (63) for -> FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR . cuerpo
    (54) cuerpo -> . sentencia
    (55) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS
    (9) expresion -> . NUMEROS SUMA NUMEROS
    (10) expresion -> . PRINTLN APAR COMDOBLE ID COMDOBLE CPAR
    (11) expresion -> . PRINTLN APAR ID CPAR
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (51) control -> . if
    (52) control -> . for
    (53) control -> . while
    (49) condicion -> . compmiembro comparador compmiembro
    (50) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (34) atributo -> . ID PUNTO ID
    (56) if -> . IF APAR condicion CPAR cuerpo
    (57) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (58) for -> . FOR APAR ID IN ID CPAR cuerpo
    (59) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> . FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> . FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (66) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (68) while -> . WHILE APAR condicion CPAR cuerpo
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion

    ALLAVE          shift and go to state 98
    VAL             shift and go to state 8
    VAR             shift and go to state 11
    NUMEROS         shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 9
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    cuerpo                         shift and go to state 153
    sentencia                      shift and go to state 97
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16

state 150

    (67) for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .

    $end            reduce using rule 67 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    ELSE            reduce using rule 67 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    CLLAVE          reduce using rule 67 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)


state 151

    (66) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX . APAR CPAR CPAR cuerpo

    APAR            shift and go to state 154


state 152

    (62) for -> FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo .

    $end            reduce using rule 62 (for -> FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo .)
    ELSE            reduce using rule 62 (for -> FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo .)
    CLLAVE          reduce using rule 62 (for -> FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo .)


state 153

    (63) for -> FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo .

    $end            reduce using rule 63 (for -> FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo .)
    ELSE            reduce using rule 63 (for -> FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo .)
    CLLAVE          reduce using rule 63 (for -> FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo .)


state 154

    (66) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR . CPAR CPAR cuerpo

    CPAR            shift and go to state 155


state 155

    (66) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR . CPAR cuerpo

    CPAR            shift and go to state 156


state 156

    (66) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR . cuerpo
    (54) cuerpo -> . sentencia
    (55) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID IGUAL NUMEROS
    (8) asignacion -> . VAR ID IGUAL NUMEROS
    (9) expresion -> . NUMEROS SUMA NUMEROS
    (10) expresion -> . PRINTLN APAR COMDOBLE ID COMDOBLE CPAR
    (11) expresion -> . PRINTLN APAR ID CPAR
    (26) metodo -> . ID PUNTO ID APAR CPAR
    (27) metodo -> . ID PUNTO ID APAR ID CPAR
    (28) metodo -> . atributo PUNTO ID APAR CPAR
    (29) metodo -> . atributo PUNTO ID APAR ID CPAR
    (30) metodo -> . ID PUNTO funcion APAR CPAR
    (31) metodo -> . ID PUNTO funcion APAR ID CPAR
    (32) metodo -> . atributo PUNTO funcion APAR CPAR
    (33) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (51) control -> . if
    (52) control -> . for
    (53) control -> . while
    (49) condicion -> . compmiembro comparador compmiembro
    (50) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (34) atributo -> . ID PUNTO ID
    (56) if -> . IF APAR condicion CPAR cuerpo
    (57) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (58) for -> . FOR APAR ID IN ID CPAR cuerpo
    (59) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (60) for -> . FOR APAR ID IN NUMEROS PUNTOPUNTO NUMEROS CPAR cuerpo
    (61) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS CPAR cuerpo
    (62) for -> . FOR APAR ID IN NUMEROS UNTIL NUMEROS STEP NUMEROS CPAR cuerpo
    (63) for -> . FOR APAR ID IN NUMEROS DOWNTO NUMEROS STEP NUMEROS CPAR cuerpo
    (64) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (65) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (66) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (67) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (68) while -> . WHILE APAR condicion CPAR cuerpo
    (44) compmiembro -> . ID
    (45) compmiembro -> . NUMEROS
    (46) compmiembro -> . metodo
    (47) compmiembro -> . atributo
    (48) compmiembro -> . asignacion

    ALLAVE          shift and go to state 98
    VAL             shift and go to state 8
    VAR             shift and go to state 11
    NUMEROS         shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 9
    IF              shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19

    cuerpo                         shift and go to state 157
    sentencia                      shift and go to state 97
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16

state 157

    (66) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .

    $end            reduce using rule 66 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    ELSE            reduce using rule 66 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    CLLAVE          reduce using rule 66 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 96 resolved as shift
