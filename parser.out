Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    GETINDEX

Grammar

Rule 0     S' -> todos
Rule 1     todos -> sentencia PUNTOCOMA
Rule 2     todos -> sentencia
Rule 3     todos -> todos sentencia
Rule 4     todos -> todos sentencia PUNTOCOMA
Rule 5     sentencia -> asignacion
Rule 6     sentencia -> valor
Rule 7     sentencia -> funcion
Rule 8     sentencia -> control
Rule 9     sentencia -> condicion
Rule 10    sentencia -> print
Rule 11    print -> printType APAR CADENAEXPRESION CPAR
Rule 12    print -> printType APAR CPAR
Rule 13    print -> printType APAR ID CPAR
Rule 14    print -> printType APAR funcion CPAR
Rule 15    print -> printType APAR condicion CPAR
Rule 16    print -> printType APAR expresion CPAR
Rule 17    print -> printType APAR error CPAR
Rule 18    printType -> PRINT
Rule 19    printType -> PRINTLN
Rule 20    funcion -> funcionCompare
Rule 21    funcion -> funcionGet
Rule 22    funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
Rule 23    funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
Rule 24    funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
Rule 25    funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR
Rule 26    funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR
Rule 27    funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR
Rule 28    funcion -> ID PUNTO CONTAINS APAR ID CPAR
Rule 29    funcion -> ID PUNTO SIZE
Rule 30    funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR
Rule 31    funcion -> ID PUNTO SET APAR factorEspecial CPAR
Rule 32    funcion -> ID PUNTO ISEMPTY APAR CPAR
Rule 33    funcion -> ID PUNTO TOLIST APAR CPAR
Rule 34    funcion -> ID PUNTO TOSTRING APAR CPAR
Rule 35    funcion -> ID PUNTO SLICE APAR contentSlice CPAR
Rule 36    contentSlice -> ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION
Rule 37    contentSlice -> ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION STEP ENTEROEXPRESION
Rule 38    funcion -> ID PUNTO SLICE APAR error CPAR
Rule 39    funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR
Rule 40    asignacion -> VAL ID tipoAsignacion
Rule 41    asignacion -> VAR ID tipoAsignacion
Rule 42    asignacion -> ID inicializacion
Rule 43    tipoAsignacion -> declaracion
Rule 44    tipoAsignacion -> inicializacion
Rule 45    tipoAsignacion -> declaracion inicializacion
Rule 46    declaracion -> DOSPUNTOS tipoDato
Rule 47    inicializacion -> IGUAL valor
Rule 48    tipoDato -> INT
Rule 49    tipoDato -> FLOAT
Rule 50    tipoDato -> BOOLEAN
Rule 51    tipoDato -> STRING
Rule 52    tipoDato -> LIST MENOR tipoDato MAYOR
Rule 53    tipoDato -> SET MENOR tipoDato MAYOR
Rule 54    tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR
Rule 55    tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR
Rule 56    valor -> ENTEROEXPRESION
Rule 57    valor -> flotante
Rule 58    valor -> expresionBooleano
Rule 59    valor -> CADENAEXPRESION
Rule 60    valor -> list
Rule 61    valor -> set
Rule 62    valor -> pair
Rule 63    valor -> triple
Rule 64    valor -> expresion
Rule 65    valor -> ID
Rule 66    valor -> if
Rule 67    valor -> NEGACION ID
Rule 68    expresionBooleano -> TRUE
Rule 69    expresionBooleano -> FALSE
Rule 70    flotante -> ENTEROEXPRESION F
Rule 71    flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F
Rule 72    flotante -> ENTEROEXPRESION error F
Rule 73    list -> LISTOF APAR contenido CPAR
Rule 74    list -> LISTOF APAR error CPAR
Rule 75    set -> SETOF APAR contenido CPAR
Rule 76    set -> LISTOF APAR error CPAR
Rule 77    pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR
Rule 78    pair -> LISTOF APAR error CPAR
Rule 79    triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
Rule 80    triple -> LISTOF APAR error CPAR
Rule 81    contenido -> factorEspecial
Rule 82    contenido -> factorEspecial COMA contenido
Rule 83    expresion -> expresion SUMA termino
Rule 84    expresion -> expresion RESTA termino
Rule 85    expresion -> expresion DIVISION termino
Rule 86    expresion -> expresion MULT termino
Rule 87    expresion -> expresion MODULO termino
Rule 88    expresion -> termino
Rule 89    termino -> termino SUMA factorEspecial
Rule 90    termino -> termino RESTA factor
Rule 91    termino -> termino MULT factor
Rule 92    termino -> termino DIVISION factor
Rule 93    termino -> termino MODULO factor
Rule 94    termino -> factor
Rule 95    termino -> ENTEROEXPRESION
Rule 96    termino -> flotante
Rule 97    termino -> CADENAEXPRESION
Rule 98    termino -> list
Rule 99    termino -> set
Rule 100   termino -> ID
Rule 101   factor -> ENTEROEXPRESION
Rule 102   factor -> flotante
Rule 103   factor -> ID
Rule 104   factorEspecial -> factor
Rule 105   factorEspecial -> CADENAEXPRESION
Rule 106   factorEspecial -> list
Rule 107   factorEspecial -> set
Rule 108   factor -> APAR expresion CPAR
Rule 109   comparador -> IGUALIGUAL
Rule 110   comparador -> NOIGUAL
Rule 111   comparador -> MAYOR
Rule 112   comparador -> MENOR
Rule 113   comparador -> MAYORIGUAL
Rule 114   comparador -> MENORIGUAL
Rule 115   conector -> AND
Rule 116   conector -> OR
Rule 117   compmiembro -> ID
Rule 118   compmiembro -> CADENAEXPRESION
Rule 119   compmiembro -> ENTEROEXPRESION
Rule 120   compmiembro -> funcion
Rule 121   compmiembro -> expresionBooleano
Rule 122   compmiembro -> NEGACION compmiembro
Rule 123   compsolo -> ID
Rule 124   compsolo -> expresionBooleano
Rule 125   compsolo -> funcion
Rule 126   compsolo -> NEGACION compsolo
Rule 127   condicion -> compmiembro comparador compmiembro
Rule 128   condicion -> compsolo
Rule 129   condicion -> NEGACION condicion
Rule 130   condicion -> condicion conector condicion
Rule 131   condicion -> APAR condicion CPAR
Rule 132   control -> if
Rule 133   control -> for
Rule 134   control -> while
Rule 135   cuerpo -> sentencia
Rule 136   cuerpo -> ALLAVE todos CLLAVE
Rule 137   if -> IF APAR condicion CPAR cuerpo
Rule 138   if -> IF APAR condicion CPAR cuerpo ELSE cuerpo
Rule 139   for -> FOR APAR ID IN ID CPAR cuerpo
Rule 140   for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
Rule 141   for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
Rule 142   for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
Rule 143   for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
Rule 144   for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
Rule 145   for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
Rule 146   for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo
Rule 147   for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
Rule 148   for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
Rule 149   while -> WHILE APAR condicion CPAR cuerpo
Rule 150   CADENAEXPRESION -> COMDOBLE content COMDOBLE
Rule 151   CADENAEXPRESION -> COMDOBLE COMDOBLE
Rule 152   content -> SIGNODOLAR ID
Rule 153   content -> ID
Rule 154   content -> ENTEROEXPRESION
Rule 155   content -> PUNTO
Rule 156   content -> PUNTOPUNTO
Rule 157   content -> comparador
Rule 158   content -> SYMBOL
Rule 159   content -> COMA
Rule 160   content -> PUNTOCOMA
Rule 161   content -> DOSPUNTOS
Rule 162   content -> content content

Terminals, with rules where they appear

ALLAVE               : 136
AND                  : 115
APAR                 : 11 12 13 14 15 16 17 22 23 24 25 26 27 28 30 31 32 33 34 35 38 39 73 74 75 76 77 78 79 80 108 131 137 138 139 140 141 142 143 144 145 146 147 147 147 148 148 149
BOOLEAN              : 50
CLLAVE               : 136
COMA                 : 54 55 55 77 79 79 82 147 148 159
COMDOBLE             : 150 150 151 151
COMPARETO            : 22 23
CONTAINS             : 27 28
CPAR                 : 11 12 13 14 15 16 17 22 23 24 25 26 27 28 30 31 32 33 34 35 38 39 73 74 75 76 77 78 79 80 108 131 137 138 139 140 141 142 143 144 145 146 147 147 147 148 148 149
DIVISION             : 85 92
DOSPUNTOS            : 46 140 161
DOWNTO               : 144
ELSE                 : 138
ENTEROEXPRESION      : 24 30 36 36 37 37 37 56 70 71 71 72 95 101 119 141 141 142 142 143 143 143 144 144 144 154
F                    : 70 71 72
FALSE                : 69
FLOAT                : 49
FOR                  : 139 140 141 142 143 144 145 146 147 148
GET                  : 24 25 30
GETINDEX             : 
HASHCODE             : 26
ID                   : 13 27 28 28 29 30 31 32 33 34 35 38 39 40 41 42 65 67 100 103 117 123 139 139 140 140 141 142 143 144 145 145 146 146 146 147 147 147 148 148 148 152 153
IF                   : 137 138
IGUAL                : 47
IGUALIGUAL           : 109
IN                   : 139 140 141 142 143 144 145 146 147 148
INDEXOF              : 39
INDICES              : 145
INT                  : 48 140
ISEMPTY              : 32
LIST                 : 52
LISTOF               : 73 74 76 78 80
MAYOR                : 52 53 54 55 111
MAYORIGUAL           : 113
MENOR                : 52 53 54 55 112
MENORIGUAL           : 114
MODULO               : 87 93
MULT                 : 86 91
NEGACION             : 67 122 126 129
NOIGUAL              : 110
OR                   : 116
PAIR                 : 54 77
PRINT                : 18
PRINTLN              : 19
PUNTO                : 22 23 24 25 26 27 28 29 30 31 32 33 34 35 38 39 71 145 146 147 155
PUNTOCOMA            : 1 4 160
PUNTOPUNTO           : 36 37 141 156
RESTA                : 84 90
SET                  : 31 53
SETOF                : 75
SIGNODOLAR           : 152
SIZE                 : 29
SLICE                : 35 38
STEP                 : 37 143 144
STRING               : 51
SUMA                 : 83 89
SYMBOL               : 158
TOLIST               : 33
TOSTRING             : 34
TRIPLE               : 55 79
TRUE                 : 68
UNTIL                : 142 143
VAL                  : 40
VAR                  : 41
WHILE                : 149
WITHINDEX            : 147
error                : 17 23 25 38 72 74 76 78 80

Nonterminals, with rules where they appear

CADENAEXPRESION      : 11 22 22 23 24 25 26 59 97 105 118
asignacion           : 5
comparador           : 127 157
compmiembro          : 122 127 127
compsolo             : 126 128
condicion            : 9 15 129 130 130 131 137 138 149
conector             : 130
contenido            : 73 75 82
content              : 150 162 162
contentSlice         : 35
control              : 8
cuerpo               : 137 138 138 139 140 141 142 143 144 145 146 147 148 149
declaracion          : 43 45
expresion            : 16 64 83 84 85 86 87 108
expresionBooleano    : 58 121 124
factor               : 90 91 92 93 94 104
factorEspecial       : 27 31 39 77 77 79 79 79 81 82 89
flotante             : 57 96 102
for                  : 133
funcion              : 7 14 120 125
funcionCompare       : 20
funcionGet           : 21
if                   : 66 132
inicializacion       : 42 44 45
list                 : 60 98 106
pair                 : 62
print                : 10
printType            : 11 12 13 14 15 16 17
sentencia            : 1 2 3 4 135
set                  : 61 99 107
termino              : 83 84 85 86 87 88 89 90 91 92 93
tipoAsignacion       : 40 41
tipoDato             : 46 52 53 54 54 55 55 55
todos                : 3 4 136 0
triple               : 63
valor                : 6 47
while                : 134

Parsing method: LALR

state 0

    (0) S' -> . todos
    (1) todos -> . sentencia PUNTOCOMA
    (2) todos -> . sentencia
    (3) todos -> . todos sentencia
    (4) todos -> . todos sentencia PUNTOCOMA
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (40) asignacion -> . VAL ID tipoAsignacion
    (41) asignacion -> . VAR ID tipoAsignacion
    (42) asignacion -> . ID inicializacion
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (132) control -> . if
    (133) control -> . for
    (134) control -> . while
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR condicion CPAR
    (16) print -> . printType APAR expresion CPAR
    (17) print -> . printType APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (139) for -> . FOR APAR ID IN ID CPAR cuerpo
    (140) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (149) while -> . WHILE APAR condicion CPAR cuerpo
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (18) printType -> . PRINT
    (19) printType -> . PRINTLN
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    NEGACION        shift and go to state 22
    APAR            shift and go to state 25
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    PRINT           shift and go to state 42
    PRINTLN         shift and go to state 43

    todos                          shift and go to state 1
    sentencia                      shift and go to state 2
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    CADENAEXPRESION                shift and go to state 15
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    for                            shift and go to state 26
    while                          shift and go to state 27
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    printType                      shift and go to state 30
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 1

    (0) S' -> todos .
    (3) todos -> todos . sentencia
    (4) todos -> todos . sentencia PUNTOCOMA
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (40) asignacion -> . VAL ID tipoAsignacion
    (41) asignacion -> . VAR ID tipoAsignacion
    (42) asignacion -> . ID inicializacion
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (132) control -> . if
    (133) control -> . for
    (134) control -> . while
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR condicion CPAR
    (16) print -> . printType APAR expresion CPAR
    (17) print -> . printType APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (139) for -> . FOR APAR ID IN ID CPAR cuerpo
    (140) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (149) while -> . WHILE APAR condicion CPAR cuerpo
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (18) printType -> . PRINT
    (19) printType -> . PRINTLN
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    NEGACION        shift and go to state 22
    APAR            shift and go to state 25
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    PRINT           shift and go to state 42
    PRINTLN         shift and go to state 43

    sentencia                      shift and go to state 45
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    CADENAEXPRESION                shift and go to state 15
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    for                            shift and go to state 26
    while                          shift and go to state 27
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    printType                      shift and go to state 30
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 2

    (1) todos -> sentencia . PUNTOCOMA
    (2) todos -> sentencia .

    PUNTOCOMA       shift and go to state 46
    VAL             reduce using rule 2 (todos -> sentencia .)
    VAR             reduce using rule 2 (todos -> sentencia .)
    ID              reduce using rule 2 (todos -> sentencia .)
    ENTEROEXPRESION reduce using rule 2 (todos -> sentencia .)
    NEGACION        reduce using rule 2 (todos -> sentencia .)
    APAR            reduce using rule 2 (todos -> sentencia .)
    TRUE            reduce using rule 2 (todos -> sentencia .)
    FALSE           reduce using rule 2 (todos -> sentencia .)
    COMDOBLE        reduce using rule 2 (todos -> sentencia .)
    LISTOF          reduce using rule 2 (todos -> sentencia .)
    SETOF           reduce using rule 2 (todos -> sentencia .)
    PAIR            reduce using rule 2 (todos -> sentencia .)
    TRIPLE          reduce using rule 2 (todos -> sentencia .)
    IF              reduce using rule 2 (todos -> sentencia .)
    FOR             reduce using rule 2 (todos -> sentencia .)
    WHILE           reduce using rule 2 (todos -> sentencia .)
    PRINT           reduce using rule 2 (todos -> sentencia .)
    PRINTLN         reduce using rule 2 (todos -> sentencia .)
    $end            reduce using rule 2 (todos -> sentencia .)
    CLLAVE          reduce using rule 2 (todos -> sentencia .)


state 3

    (5) sentencia -> asignacion .

    PUNTOCOMA       reduce using rule 5 (sentencia -> asignacion .)
    VAL             reduce using rule 5 (sentencia -> asignacion .)
    VAR             reduce using rule 5 (sentencia -> asignacion .)
    ID              reduce using rule 5 (sentencia -> asignacion .)
    ENTEROEXPRESION reduce using rule 5 (sentencia -> asignacion .)
    NEGACION        reduce using rule 5 (sentencia -> asignacion .)
    APAR            reduce using rule 5 (sentencia -> asignacion .)
    TRUE            reduce using rule 5 (sentencia -> asignacion .)
    FALSE           reduce using rule 5 (sentencia -> asignacion .)
    COMDOBLE        reduce using rule 5 (sentencia -> asignacion .)
    LISTOF          reduce using rule 5 (sentencia -> asignacion .)
    SETOF           reduce using rule 5 (sentencia -> asignacion .)
    PAIR            reduce using rule 5 (sentencia -> asignacion .)
    TRIPLE          reduce using rule 5 (sentencia -> asignacion .)
    IF              reduce using rule 5 (sentencia -> asignacion .)
    FOR             reduce using rule 5 (sentencia -> asignacion .)
    WHILE           reduce using rule 5 (sentencia -> asignacion .)
    PRINT           reduce using rule 5 (sentencia -> asignacion .)
    PRINTLN         reduce using rule 5 (sentencia -> asignacion .)
    $end            reduce using rule 5 (sentencia -> asignacion .)
    ELSE            reduce using rule 5 (sentencia -> asignacion .)
    CLLAVE          reduce using rule 5 (sentencia -> asignacion .)


state 4

    (6) sentencia -> valor .

    PUNTOCOMA       reduce using rule 6 (sentencia -> valor .)
    VAL             reduce using rule 6 (sentencia -> valor .)
    VAR             reduce using rule 6 (sentencia -> valor .)
    ID              reduce using rule 6 (sentencia -> valor .)
    ENTEROEXPRESION reduce using rule 6 (sentencia -> valor .)
    NEGACION        reduce using rule 6 (sentencia -> valor .)
    APAR            reduce using rule 6 (sentencia -> valor .)
    TRUE            reduce using rule 6 (sentencia -> valor .)
    FALSE           reduce using rule 6 (sentencia -> valor .)
    COMDOBLE        reduce using rule 6 (sentencia -> valor .)
    LISTOF          reduce using rule 6 (sentencia -> valor .)
    SETOF           reduce using rule 6 (sentencia -> valor .)
    PAIR            reduce using rule 6 (sentencia -> valor .)
    TRIPLE          reduce using rule 6 (sentencia -> valor .)
    IF              reduce using rule 6 (sentencia -> valor .)
    FOR             reduce using rule 6 (sentencia -> valor .)
    WHILE           reduce using rule 6 (sentencia -> valor .)
    PRINT           reduce using rule 6 (sentencia -> valor .)
    PRINTLN         reduce using rule 6 (sentencia -> valor .)
    $end            reduce using rule 6 (sentencia -> valor .)
    ELSE            reduce using rule 6 (sentencia -> valor .)
    CLLAVE          reduce using rule 6 (sentencia -> valor .)


state 5

    (7) sentencia -> funcion .
    (120) compmiembro -> funcion .
    (125) compsolo -> funcion .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for VAL resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for VAR resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for ID resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for NEGACION resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for APAR resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for TRUE resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for FALSE resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for LISTOF resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for SETOF resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for PAIR resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for IF resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for FOR resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for WHILE resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for PRINT resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for $end resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for ELSE resolved using rule 7 (sentencia -> funcion .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 7 (sentencia -> funcion .)
    PUNTOCOMA       reduce using rule 7 (sentencia -> funcion .)
    VAL             reduce using rule 7 (sentencia -> funcion .)
    VAR             reduce using rule 7 (sentencia -> funcion .)
    ID              reduce using rule 7 (sentencia -> funcion .)
    ENTEROEXPRESION reduce using rule 7 (sentencia -> funcion .)
    NEGACION        reduce using rule 7 (sentencia -> funcion .)
    APAR            reduce using rule 7 (sentencia -> funcion .)
    TRUE            reduce using rule 7 (sentencia -> funcion .)
    FALSE           reduce using rule 7 (sentencia -> funcion .)
    COMDOBLE        reduce using rule 7 (sentencia -> funcion .)
    LISTOF          reduce using rule 7 (sentencia -> funcion .)
    SETOF           reduce using rule 7 (sentencia -> funcion .)
    PAIR            reduce using rule 7 (sentencia -> funcion .)
    TRIPLE          reduce using rule 7 (sentencia -> funcion .)
    IF              reduce using rule 7 (sentencia -> funcion .)
    FOR             reduce using rule 7 (sentencia -> funcion .)
    WHILE           reduce using rule 7 (sentencia -> funcion .)
    PRINT           reduce using rule 7 (sentencia -> funcion .)
    PRINTLN         reduce using rule 7 (sentencia -> funcion .)
    $end            reduce using rule 7 (sentencia -> funcion .)
    ELSE            reduce using rule 7 (sentencia -> funcion .)
    CLLAVE          reduce using rule 7 (sentencia -> funcion .)
    IGUALIGUAL      reduce using rule 120 (compmiembro -> funcion .)
    NOIGUAL         reduce using rule 120 (compmiembro -> funcion .)
    MAYOR           reduce using rule 120 (compmiembro -> funcion .)
    MENOR           reduce using rule 120 (compmiembro -> funcion .)
    MAYORIGUAL      reduce using rule 120 (compmiembro -> funcion .)
    MENORIGUAL      reduce using rule 120 (compmiembro -> funcion .)
    AND             reduce using rule 125 (compsolo -> funcion .)
    OR              reduce using rule 125 (compsolo -> funcion .)

  ! PUNTOCOMA       [ reduce using rule 125 (compsolo -> funcion .) ]
  ! VAL             [ reduce using rule 125 (compsolo -> funcion .) ]
  ! VAR             [ reduce using rule 125 (compsolo -> funcion .) ]
  ! ID              [ reduce using rule 125 (compsolo -> funcion .) ]
  ! ENTEROEXPRESION [ reduce using rule 125 (compsolo -> funcion .) ]
  ! NEGACION        [ reduce using rule 125 (compsolo -> funcion .) ]
  ! APAR            [ reduce using rule 125 (compsolo -> funcion .) ]
  ! TRUE            [ reduce using rule 125 (compsolo -> funcion .) ]
  ! FALSE           [ reduce using rule 125 (compsolo -> funcion .) ]
  ! COMDOBLE        [ reduce using rule 125 (compsolo -> funcion .) ]
  ! LISTOF          [ reduce using rule 125 (compsolo -> funcion .) ]
  ! SETOF           [ reduce using rule 125 (compsolo -> funcion .) ]
  ! PAIR            [ reduce using rule 125 (compsolo -> funcion .) ]
  ! TRIPLE          [ reduce using rule 125 (compsolo -> funcion .) ]
  ! IF              [ reduce using rule 125 (compsolo -> funcion .) ]
  ! FOR             [ reduce using rule 125 (compsolo -> funcion .) ]
  ! WHILE           [ reduce using rule 125 (compsolo -> funcion .) ]
  ! PRINT           [ reduce using rule 125 (compsolo -> funcion .) ]
  ! PRINTLN         [ reduce using rule 125 (compsolo -> funcion .) ]
  ! $end            [ reduce using rule 125 (compsolo -> funcion .) ]
  ! ELSE            [ reduce using rule 125 (compsolo -> funcion .) ]
  ! CLLAVE          [ reduce using rule 125 (compsolo -> funcion .) ]


state 6

    (8) sentencia -> control .

    PUNTOCOMA       reduce using rule 8 (sentencia -> control .)
    VAL             reduce using rule 8 (sentencia -> control .)
    VAR             reduce using rule 8 (sentencia -> control .)
    ID              reduce using rule 8 (sentencia -> control .)
    ENTEROEXPRESION reduce using rule 8 (sentencia -> control .)
    NEGACION        reduce using rule 8 (sentencia -> control .)
    APAR            reduce using rule 8 (sentencia -> control .)
    TRUE            reduce using rule 8 (sentencia -> control .)
    FALSE           reduce using rule 8 (sentencia -> control .)
    COMDOBLE        reduce using rule 8 (sentencia -> control .)
    LISTOF          reduce using rule 8 (sentencia -> control .)
    SETOF           reduce using rule 8 (sentencia -> control .)
    PAIR            reduce using rule 8 (sentencia -> control .)
    TRIPLE          reduce using rule 8 (sentencia -> control .)
    IF              reduce using rule 8 (sentencia -> control .)
    FOR             reduce using rule 8 (sentencia -> control .)
    WHILE           reduce using rule 8 (sentencia -> control .)
    PRINT           reduce using rule 8 (sentencia -> control .)
    PRINTLN         reduce using rule 8 (sentencia -> control .)
    $end            reduce using rule 8 (sentencia -> control .)
    ELSE            reduce using rule 8 (sentencia -> control .)
    CLLAVE          reduce using rule 8 (sentencia -> control .)


state 7

    (9) sentencia -> condicion .
    (130) condicion -> condicion . conector condicion
    (115) conector -> . AND
    (116) conector -> . OR

    PUNTOCOMA       reduce using rule 9 (sentencia -> condicion .)
    VAL             reduce using rule 9 (sentencia -> condicion .)
    VAR             reduce using rule 9 (sentencia -> condicion .)
    ID              reduce using rule 9 (sentencia -> condicion .)
    ENTEROEXPRESION reduce using rule 9 (sentencia -> condicion .)
    NEGACION        reduce using rule 9 (sentencia -> condicion .)
    APAR            reduce using rule 9 (sentencia -> condicion .)
    TRUE            reduce using rule 9 (sentencia -> condicion .)
    FALSE           reduce using rule 9 (sentencia -> condicion .)
    COMDOBLE        reduce using rule 9 (sentencia -> condicion .)
    LISTOF          reduce using rule 9 (sentencia -> condicion .)
    SETOF           reduce using rule 9 (sentencia -> condicion .)
    PAIR            reduce using rule 9 (sentencia -> condicion .)
    TRIPLE          reduce using rule 9 (sentencia -> condicion .)
    IF              reduce using rule 9 (sentencia -> condicion .)
    FOR             reduce using rule 9 (sentencia -> condicion .)
    WHILE           reduce using rule 9 (sentencia -> condicion .)
    PRINT           reduce using rule 9 (sentencia -> condicion .)
    PRINTLN         reduce using rule 9 (sentencia -> condicion .)
    $end            reduce using rule 9 (sentencia -> condicion .)
    ELSE            reduce using rule 9 (sentencia -> condicion .)
    CLLAVE          reduce using rule 9 (sentencia -> condicion .)
    AND             shift and go to state 48
    OR              shift and go to state 49

    conector                       shift and go to state 47

state 8

    (10) sentencia -> print .

    PUNTOCOMA       reduce using rule 10 (sentencia -> print .)
    VAL             reduce using rule 10 (sentencia -> print .)
    VAR             reduce using rule 10 (sentencia -> print .)
    ID              reduce using rule 10 (sentencia -> print .)
    ENTEROEXPRESION reduce using rule 10 (sentencia -> print .)
    NEGACION        reduce using rule 10 (sentencia -> print .)
    APAR            reduce using rule 10 (sentencia -> print .)
    TRUE            reduce using rule 10 (sentencia -> print .)
    FALSE           reduce using rule 10 (sentencia -> print .)
    COMDOBLE        reduce using rule 10 (sentencia -> print .)
    LISTOF          reduce using rule 10 (sentencia -> print .)
    SETOF           reduce using rule 10 (sentencia -> print .)
    PAIR            reduce using rule 10 (sentencia -> print .)
    TRIPLE          reduce using rule 10 (sentencia -> print .)
    IF              reduce using rule 10 (sentencia -> print .)
    FOR             reduce using rule 10 (sentencia -> print .)
    WHILE           reduce using rule 10 (sentencia -> print .)
    PRINT           reduce using rule 10 (sentencia -> print .)
    PRINTLN         reduce using rule 10 (sentencia -> print .)
    $end            reduce using rule 10 (sentencia -> print .)
    ELSE            reduce using rule 10 (sentencia -> print .)
    CLLAVE          reduce using rule 10 (sentencia -> print .)


state 9

    (40) asignacion -> VAL . ID tipoAsignacion

    ID              shift and go to state 50


state 10

    (42) asignacion -> ID . inicializacion
    (65) valor -> ID .
    (27) funcion -> ID . PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> ID . PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> ID . PUNTO SIZE
    (30) funcion -> ID . PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> ID . PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> ID . PUNTO ISEMPTY APAR CPAR
    (33) funcion -> ID . PUNTO TOLIST APAR CPAR
    (34) funcion -> ID . PUNTO TOSTRING APAR CPAR
    (35) funcion -> ID . PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> ID . PUNTO SLICE APAR error CPAR
    (39) funcion -> ID . PUNTO INDEXOF APAR factorEspecial CPAR
    (117) compmiembro -> ID .
    (123) compsolo -> ID .
    (100) termino -> ID .
    (103) factor -> ID .
    (47) inicializacion -> . IGUAL valor

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for VAL resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for VAR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for NEGACION resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for APAR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for LISTOF resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for SETOF resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for PAIR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for VAL resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for VAR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for NEGACION resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for APAR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for LISTOF resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for SETOF resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for PAIR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for SUMA resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for RESTA resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for MULT resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for DIVISION resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for VAL resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for VAR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for NEGACION resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for APAR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for LISTOF resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for SETOF resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for PAIR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 65 (valor -> ID .)
    PUNTOCOMA       reduce using rule 65 (valor -> ID .)
    VAL             reduce using rule 65 (valor -> ID .)
    VAR             reduce using rule 65 (valor -> ID .)
    ID              reduce using rule 65 (valor -> ID .)
    ENTEROEXPRESION reduce using rule 65 (valor -> ID .)
    NEGACION        reduce using rule 65 (valor -> ID .)
    APAR            reduce using rule 65 (valor -> ID .)
    TRUE            reduce using rule 65 (valor -> ID .)
    FALSE           reduce using rule 65 (valor -> ID .)
    COMDOBLE        reduce using rule 65 (valor -> ID .)
    LISTOF          reduce using rule 65 (valor -> ID .)
    SETOF           reduce using rule 65 (valor -> ID .)
    PAIR            reduce using rule 65 (valor -> ID .)
    TRIPLE          reduce using rule 65 (valor -> ID .)
    IF              reduce using rule 65 (valor -> ID .)
    FOR             reduce using rule 65 (valor -> ID .)
    WHILE           reduce using rule 65 (valor -> ID .)
    PRINT           reduce using rule 65 (valor -> ID .)
    PRINTLN         reduce using rule 65 (valor -> ID .)
    $end            reduce using rule 65 (valor -> ID .)
    ELSE            reduce using rule 65 (valor -> ID .)
    CLLAVE          reduce using rule 65 (valor -> ID .)
    PUNTO           shift and go to state 52
    IGUALIGUAL      reduce using rule 117 (compmiembro -> ID .)
    NOIGUAL         reduce using rule 117 (compmiembro -> ID .)
    MAYOR           reduce using rule 117 (compmiembro -> ID .)
    MENOR           reduce using rule 117 (compmiembro -> ID .)
    MAYORIGUAL      reduce using rule 117 (compmiembro -> ID .)
    MENORIGUAL      reduce using rule 117 (compmiembro -> ID .)
    AND             reduce using rule 123 (compsolo -> ID .)
    OR              reduce using rule 123 (compsolo -> ID .)
    SUMA            reduce using rule 100 (termino -> ID .)
    RESTA           reduce using rule 100 (termino -> ID .)
    MULT            reduce using rule 100 (termino -> ID .)
    DIVISION        reduce using rule 100 (termino -> ID .)
    MODULO          reduce using rule 100 (termino -> ID .)
    IGUAL           shift and go to state 53

  ! PUNTOCOMA       [ reduce using rule 123 (compsolo -> ID .) ]
  ! VAL             [ reduce using rule 123 (compsolo -> ID .) ]
  ! VAR             [ reduce using rule 123 (compsolo -> ID .) ]
  ! ID              [ reduce using rule 123 (compsolo -> ID .) ]
  ! ENTEROEXPRESION [ reduce using rule 123 (compsolo -> ID .) ]
  ! NEGACION        [ reduce using rule 123 (compsolo -> ID .) ]
  ! APAR            [ reduce using rule 123 (compsolo -> ID .) ]
  ! TRUE            [ reduce using rule 123 (compsolo -> ID .) ]
  ! FALSE           [ reduce using rule 123 (compsolo -> ID .) ]
  ! COMDOBLE        [ reduce using rule 123 (compsolo -> ID .) ]
  ! LISTOF          [ reduce using rule 123 (compsolo -> ID .) ]
  ! SETOF           [ reduce using rule 123 (compsolo -> ID .) ]
  ! PAIR            [ reduce using rule 123 (compsolo -> ID .) ]
  ! TRIPLE          [ reduce using rule 123 (compsolo -> ID .) ]
  ! IF              [ reduce using rule 123 (compsolo -> ID .) ]
  ! FOR             [ reduce using rule 123 (compsolo -> ID .) ]
  ! WHILE           [ reduce using rule 123 (compsolo -> ID .) ]
  ! PRINT           [ reduce using rule 123 (compsolo -> ID .) ]
  ! PRINTLN         [ reduce using rule 123 (compsolo -> ID .) ]
  ! $end            [ reduce using rule 123 (compsolo -> ID .) ]
  ! ELSE            [ reduce using rule 123 (compsolo -> ID .) ]
  ! CLLAVE          [ reduce using rule 123 (compsolo -> ID .) ]
  ! PUNTOCOMA       [ reduce using rule 100 (termino -> ID .) ]
  ! VAL             [ reduce using rule 100 (termino -> ID .) ]
  ! VAR             [ reduce using rule 100 (termino -> ID .) ]
  ! ID              [ reduce using rule 100 (termino -> ID .) ]
  ! ENTEROEXPRESION [ reduce using rule 100 (termino -> ID .) ]
  ! NEGACION        [ reduce using rule 100 (termino -> ID .) ]
  ! APAR            [ reduce using rule 100 (termino -> ID .) ]
  ! TRUE            [ reduce using rule 100 (termino -> ID .) ]
  ! FALSE           [ reduce using rule 100 (termino -> ID .) ]
  ! COMDOBLE        [ reduce using rule 100 (termino -> ID .) ]
  ! LISTOF          [ reduce using rule 100 (termino -> ID .) ]
  ! SETOF           [ reduce using rule 100 (termino -> ID .) ]
  ! PAIR            [ reduce using rule 100 (termino -> ID .) ]
  ! TRIPLE          [ reduce using rule 100 (termino -> ID .) ]
  ! IF              [ reduce using rule 100 (termino -> ID .) ]
  ! FOR             [ reduce using rule 100 (termino -> ID .) ]
  ! WHILE           [ reduce using rule 100 (termino -> ID .) ]
  ! PRINT           [ reduce using rule 100 (termino -> ID .) ]
  ! PRINTLN         [ reduce using rule 100 (termino -> ID .) ]
  ! $end            [ reduce using rule 100 (termino -> ID .) ]
  ! ELSE            [ reduce using rule 100 (termino -> ID .) ]
  ! CLLAVE          [ reduce using rule 100 (termino -> ID .) ]
  ! SUMA            [ reduce using rule 103 (factor -> ID .) ]
  ! RESTA           [ reduce using rule 103 (factor -> ID .) ]
  ! MULT            [ reduce using rule 103 (factor -> ID .) ]
  ! DIVISION        [ reduce using rule 103 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 103 (factor -> ID .) ]
  ! PUNTOCOMA       [ reduce using rule 103 (factor -> ID .) ]
  ! VAL             [ reduce using rule 103 (factor -> ID .) ]
  ! VAR             [ reduce using rule 103 (factor -> ID .) ]
  ! ID              [ reduce using rule 103 (factor -> ID .) ]
  ! ENTEROEXPRESION [ reduce using rule 103 (factor -> ID .) ]
  ! NEGACION        [ reduce using rule 103 (factor -> ID .) ]
  ! APAR            [ reduce using rule 103 (factor -> ID .) ]
  ! TRUE            [ reduce using rule 103 (factor -> ID .) ]
  ! FALSE           [ reduce using rule 103 (factor -> ID .) ]
  ! COMDOBLE        [ reduce using rule 103 (factor -> ID .) ]
  ! LISTOF          [ reduce using rule 103 (factor -> ID .) ]
  ! SETOF           [ reduce using rule 103 (factor -> ID .) ]
  ! PAIR            [ reduce using rule 103 (factor -> ID .) ]
  ! TRIPLE          [ reduce using rule 103 (factor -> ID .) ]
  ! IF              [ reduce using rule 103 (factor -> ID .) ]
  ! FOR             [ reduce using rule 103 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 103 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 103 (factor -> ID .) ]
  ! PRINTLN         [ reduce using rule 103 (factor -> ID .) ]
  ! $end            [ reduce using rule 103 (factor -> ID .) ]
  ! ELSE            [ reduce using rule 103 (factor -> ID .) ]
  ! CLLAVE          [ reduce using rule 103 (factor -> ID .) ]

    inicializacion                 shift and go to state 51

state 11

    (41) asignacion -> VAR . ID tipoAsignacion

    ID              shift and go to state 54


state 12

    (56) valor -> ENTEROEXPRESION .
    (70) flotante -> ENTEROEXPRESION . F
    (71) flotante -> ENTEROEXPRESION . PUNTO ENTEROEXPRESION F
    (72) flotante -> ENTEROEXPRESION . error F
    (119) compmiembro -> ENTEROEXPRESION .
    (95) termino -> ENTEROEXPRESION .
    (101) factor -> ENTEROEXPRESION .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAL resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAR resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ID resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for NEGACION resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRUE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FALSE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for LISTOF resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for SETOF resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PAIR resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IF resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FOR resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for WHILE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINT resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for SUMA resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for RESTA resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MULT resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for DIVISION resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MODULO resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAL resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAR resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ID resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for NEGACION resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRUE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FALSE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for LISTOF resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for SETOF resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PAIR resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IF resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FOR resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for WHILE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINT resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 56 (valor -> ENTEROEXPRESION .)
    PUNTOCOMA       reduce using rule 56 (valor -> ENTEROEXPRESION .)
    VAL             reduce using rule 56 (valor -> ENTEROEXPRESION .)
    VAR             reduce using rule 56 (valor -> ENTEROEXPRESION .)
    ID              reduce using rule 56 (valor -> ENTEROEXPRESION .)
    ENTEROEXPRESION reduce using rule 56 (valor -> ENTEROEXPRESION .)
    NEGACION        reduce using rule 56 (valor -> ENTEROEXPRESION .)
    APAR            reduce using rule 56 (valor -> ENTEROEXPRESION .)
    TRUE            reduce using rule 56 (valor -> ENTEROEXPRESION .)
    FALSE           reduce using rule 56 (valor -> ENTEROEXPRESION .)
    COMDOBLE        reduce using rule 56 (valor -> ENTEROEXPRESION .)
    LISTOF          reduce using rule 56 (valor -> ENTEROEXPRESION .)
    SETOF           reduce using rule 56 (valor -> ENTEROEXPRESION .)
    PAIR            reduce using rule 56 (valor -> ENTEROEXPRESION .)
    TRIPLE          reduce using rule 56 (valor -> ENTEROEXPRESION .)
    IF              reduce using rule 56 (valor -> ENTEROEXPRESION .)
    FOR             reduce using rule 56 (valor -> ENTEROEXPRESION .)
    WHILE           reduce using rule 56 (valor -> ENTEROEXPRESION .)
    PRINT           reduce using rule 56 (valor -> ENTEROEXPRESION .)
    PRINTLN         reduce using rule 56 (valor -> ENTEROEXPRESION .)
    $end            reduce using rule 56 (valor -> ENTEROEXPRESION .)
    ELSE            reduce using rule 56 (valor -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 56 (valor -> ENTEROEXPRESION .)
    F               shift and go to state 55
    PUNTO           shift and go to state 56
    error           shift and go to state 57
    IGUALIGUAL      reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    NOIGUAL         reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    MAYOR           reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    MENOR           reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    MAYORIGUAL      reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    MENORIGUAL      reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    SUMA            reduce using rule 95 (termino -> ENTEROEXPRESION .)
    RESTA           reduce using rule 95 (termino -> ENTEROEXPRESION .)
    MULT            reduce using rule 95 (termino -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 95 (termino -> ENTEROEXPRESION .)
    MODULO          reduce using rule 95 (termino -> ENTEROEXPRESION .)

  ! PUNTOCOMA       [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! VAL             [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! VAR             [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! ID              [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! NEGACION        [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! APAR            [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! TRUE            [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! FALSE           [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! COMDOBLE        [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! LISTOF          [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! SETOF           [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! PAIR            [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! TRIPLE          [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! IF              [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! FOR             [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! WHILE           [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! PRINT           [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! PRINTLN         [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! $end            [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! ELSE            [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! SUMA            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! RESTA           [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! MULT            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! DIVISION        [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! MODULO          [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! PUNTOCOMA       [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! VAL             [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! VAR             [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! ID              [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! NEGACION        [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! APAR            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! TRUE            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! FALSE           [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! COMDOBLE        [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! LISTOF          [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! SETOF           [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! PAIR            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! TRIPLE          [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! IF              [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! FOR             [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! WHILE           [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! PRINT           [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! PRINTLN         [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! $end            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! ELSE            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]


state 13

    (57) valor -> flotante .
    (96) termino -> flotante .
    (102) factor -> flotante .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for VAL resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for VAR resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for ID resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for NEGACION resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for APAR resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for TRUE resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for FALSE resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for LISTOF resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for SETOF resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for PAIR resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for IF resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for FOR resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for WHILE resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for PRINT resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for $end resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for ELSE resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for SUMA resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for RESTA resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for MULT resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for DIVISION resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for MODULO resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for VAL resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for VAR resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for ID resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for NEGACION resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for APAR resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for TRUE resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for FALSE resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for LISTOF resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for SETOF resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for PAIR resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for IF resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for FOR resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for WHILE resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for PRINT resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for $end resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for ELSE resolved using rule 57 (valor -> flotante .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 57 (valor -> flotante .)
    PUNTOCOMA       reduce using rule 57 (valor -> flotante .)
    VAL             reduce using rule 57 (valor -> flotante .)
    VAR             reduce using rule 57 (valor -> flotante .)
    ID              reduce using rule 57 (valor -> flotante .)
    ENTEROEXPRESION reduce using rule 57 (valor -> flotante .)
    NEGACION        reduce using rule 57 (valor -> flotante .)
    APAR            reduce using rule 57 (valor -> flotante .)
    TRUE            reduce using rule 57 (valor -> flotante .)
    FALSE           reduce using rule 57 (valor -> flotante .)
    COMDOBLE        reduce using rule 57 (valor -> flotante .)
    LISTOF          reduce using rule 57 (valor -> flotante .)
    SETOF           reduce using rule 57 (valor -> flotante .)
    PAIR            reduce using rule 57 (valor -> flotante .)
    TRIPLE          reduce using rule 57 (valor -> flotante .)
    IF              reduce using rule 57 (valor -> flotante .)
    FOR             reduce using rule 57 (valor -> flotante .)
    WHILE           reduce using rule 57 (valor -> flotante .)
    PRINT           reduce using rule 57 (valor -> flotante .)
    PRINTLN         reduce using rule 57 (valor -> flotante .)
    $end            reduce using rule 57 (valor -> flotante .)
    ELSE            reduce using rule 57 (valor -> flotante .)
    CLLAVE          reduce using rule 57 (valor -> flotante .)
    SUMA            reduce using rule 96 (termino -> flotante .)
    RESTA           reduce using rule 96 (termino -> flotante .)
    MULT            reduce using rule 96 (termino -> flotante .)
    DIVISION        reduce using rule 96 (termino -> flotante .)
    MODULO          reduce using rule 96 (termino -> flotante .)

  ! PUNTOCOMA       [ reduce using rule 96 (termino -> flotante .) ]
  ! VAL             [ reduce using rule 96 (termino -> flotante .) ]
  ! VAR             [ reduce using rule 96 (termino -> flotante .) ]
  ! ID              [ reduce using rule 96 (termino -> flotante .) ]
  ! ENTEROEXPRESION [ reduce using rule 96 (termino -> flotante .) ]
  ! NEGACION        [ reduce using rule 96 (termino -> flotante .) ]
  ! APAR            [ reduce using rule 96 (termino -> flotante .) ]
  ! TRUE            [ reduce using rule 96 (termino -> flotante .) ]
  ! FALSE           [ reduce using rule 96 (termino -> flotante .) ]
  ! COMDOBLE        [ reduce using rule 96 (termino -> flotante .) ]
  ! LISTOF          [ reduce using rule 96 (termino -> flotante .) ]
  ! SETOF           [ reduce using rule 96 (termino -> flotante .) ]
  ! PAIR            [ reduce using rule 96 (termino -> flotante .) ]
  ! TRIPLE          [ reduce using rule 96 (termino -> flotante .) ]
  ! IF              [ reduce using rule 96 (termino -> flotante .) ]
  ! FOR             [ reduce using rule 96 (termino -> flotante .) ]
  ! WHILE           [ reduce using rule 96 (termino -> flotante .) ]
  ! PRINT           [ reduce using rule 96 (termino -> flotante .) ]
  ! PRINTLN         [ reduce using rule 96 (termino -> flotante .) ]
  ! $end            [ reduce using rule 96 (termino -> flotante .) ]
  ! ELSE            [ reduce using rule 96 (termino -> flotante .) ]
  ! CLLAVE          [ reduce using rule 96 (termino -> flotante .) ]
  ! SUMA            [ reduce using rule 102 (factor -> flotante .) ]
  ! RESTA           [ reduce using rule 102 (factor -> flotante .) ]
  ! MULT            [ reduce using rule 102 (factor -> flotante .) ]
  ! DIVISION        [ reduce using rule 102 (factor -> flotante .) ]
  ! MODULO          [ reduce using rule 102 (factor -> flotante .) ]
  ! PUNTOCOMA       [ reduce using rule 102 (factor -> flotante .) ]
  ! VAL             [ reduce using rule 102 (factor -> flotante .) ]
  ! VAR             [ reduce using rule 102 (factor -> flotante .) ]
  ! ID              [ reduce using rule 102 (factor -> flotante .) ]
  ! ENTEROEXPRESION [ reduce using rule 102 (factor -> flotante .) ]
  ! NEGACION        [ reduce using rule 102 (factor -> flotante .) ]
  ! APAR            [ reduce using rule 102 (factor -> flotante .) ]
  ! TRUE            [ reduce using rule 102 (factor -> flotante .) ]
  ! FALSE           [ reduce using rule 102 (factor -> flotante .) ]
  ! COMDOBLE        [ reduce using rule 102 (factor -> flotante .) ]
  ! LISTOF          [ reduce using rule 102 (factor -> flotante .) ]
  ! SETOF           [ reduce using rule 102 (factor -> flotante .) ]
  ! PAIR            [ reduce using rule 102 (factor -> flotante .) ]
  ! TRIPLE          [ reduce using rule 102 (factor -> flotante .) ]
  ! IF              [ reduce using rule 102 (factor -> flotante .) ]
  ! FOR             [ reduce using rule 102 (factor -> flotante .) ]
  ! WHILE           [ reduce using rule 102 (factor -> flotante .) ]
  ! PRINT           [ reduce using rule 102 (factor -> flotante .) ]
  ! PRINTLN         [ reduce using rule 102 (factor -> flotante .) ]
  ! $end            [ reduce using rule 102 (factor -> flotante .) ]
  ! ELSE            [ reduce using rule 102 (factor -> flotante .) ]
  ! CLLAVE          [ reduce using rule 102 (factor -> flotante .) ]


state 14

    (58) valor -> expresionBooleano .
    (121) compmiembro -> expresionBooleano .
    (124) compsolo -> expresionBooleano .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for VAL resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for VAR resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for ID resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for NEGACION resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for APAR resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for TRUE resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for FALSE resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for LISTOF resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for SETOF resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for PAIR resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for IF resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for FOR resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for WHILE resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for PRINT resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for $end resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for ELSE resolved using rule 58 (valor -> expresionBooleano .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 58 (valor -> expresionBooleano .)
    PUNTOCOMA       reduce using rule 58 (valor -> expresionBooleano .)
    VAL             reduce using rule 58 (valor -> expresionBooleano .)
    VAR             reduce using rule 58 (valor -> expresionBooleano .)
    ID              reduce using rule 58 (valor -> expresionBooleano .)
    ENTEROEXPRESION reduce using rule 58 (valor -> expresionBooleano .)
    NEGACION        reduce using rule 58 (valor -> expresionBooleano .)
    APAR            reduce using rule 58 (valor -> expresionBooleano .)
    TRUE            reduce using rule 58 (valor -> expresionBooleano .)
    FALSE           reduce using rule 58 (valor -> expresionBooleano .)
    COMDOBLE        reduce using rule 58 (valor -> expresionBooleano .)
    LISTOF          reduce using rule 58 (valor -> expresionBooleano .)
    SETOF           reduce using rule 58 (valor -> expresionBooleano .)
    PAIR            reduce using rule 58 (valor -> expresionBooleano .)
    TRIPLE          reduce using rule 58 (valor -> expresionBooleano .)
    IF              reduce using rule 58 (valor -> expresionBooleano .)
    FOR             reduce using rule 58 (valor -> expresionBooleano .)
    WHILE           reduce using rule 58 (valor -> expresionBooleano .)
    PRINT           reduce using rule 58 (valor -> expresionBooleano .)
    PRINTLN         reduce using rule 58 (valor -> expresionBooleano .)
    $end            reduce using rule 58 (valor -> expresionBooleano .)
    ELSE            reduce using rule 58 (valor -> expresionBooleano .)
    CLLAVE          reduce using rule 58 (valor -> expresionBooleano .)
    IGUALIGUAL      reduce using rule 121 (compmiembro -> expresionBooleano .)
    NOIGUAL         reduce using rule 121 (compmiembro -> expresionBooleano .)
    MAYOR           reduce using rule 121 (compmiembro -> expresionBooleano .)
    MENOR           reduce using rule 121 (compmiembro -> expresionBooleano .)
    MAYORIGUAL      reduce using rule 121 (compmiembro -> expresionBooleano .)
    MENORIGUAL      reduce using rule 121 (compmiembro -> expresionBooleano .)
    AND             reduce using rule 124 (compsolo -> expresionBooleano .)
    OR              reduce using rule 124 (compsolo -> expresionBooleano .)

  ! PUNTOCOMA       [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! VAL             [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! VAR             [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! ID              [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! ENTEROEXPRESION [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! NEGACION        [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! APAR            [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! TRUE            [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! FALSE           [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! COMDOBLE        [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! LISTOF          [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! SETOF           [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! PAIR            [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! TRIPLE          [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! IF              [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! FOR             [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! WHILE           [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! PRINT           [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! PRINTLN         [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! $end            [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! ELSE            [ reduce using rule 124 (compsolo -> expresionBooleano .) ]
  ! CLLAVE          [ reduce using rule 124 (compsolo -> expresionBooleano .) ]


state 15

    (59) valor -> CADENAEXPRESION .
    (26) funcion -> CADENAEXPRESION . PUNTO HASHCODE APAR CPAR
    (22) funcionCompare -> CADENAEXPRESION . PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> CADENAEXPRESION . PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> CADENAEXPRESION . PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> CADENAEXPRESION . PUNTO GET APAR error CPAR
    (118) compmiembro -> CADENAEXPRESION .
    (97) termino -> CADENAEXPRESION .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for VAL resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for VAR resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for ID resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for NEGACION resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for TRUE resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for FALSE resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for LISTOF resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for SETOF resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for PAIR resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for IF resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for FOR resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for WHILE resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for PRINT resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 59 (valor -> CADENAEXPRESION .)
    PUNTOCOMA       reduce using rule 59 (valor -> CADENAEXPRESION .)
    VAL             reduce using rule 59 (valor -> CADENAEXPRESION .)
    VAR             reduce using rule 59 (valor -> CADENAEXPRESION .)
    ID              reduce using rule 59 (valor -> CADENAEXPRESION .)
    ENTEROEXPRESION reduce using rule 59 (valor -> CADENAEXPRESION .)
    NEGACION        reduce using rule 59 (valor -> CADENAEXPRESION .)
    APAR            reduce using rule 59 (valor -> CADENAEXPRESION .)
    TRUE            reduce using rule 59 (valor -> CADENAEXPRESION .)
    FALSE           reduce using rule 59 (valor -> CADENAEXPRESION .)
    COMDOBLE        reduce using rule 59 (valor -> CADENAEXPRESION .)
    LISTOF          reduce using rule 59 (valor -> CADENAEXPRESION .)
    SETOF           reduce using rule 59 (valor -> CADENAEXPRESION .)
    PAIR            reduce using rule 59 (valor -> CADENAEXPRESION .)
    TRIPLE          reduce using rule 59 (valor -> CADENAEXPRESION .)
    IF              reduce using rule 59 (valor -> CADENAEXPRESION .)
    FOR             reduce using rule 59 (valor -> CADENAEXPRESION .)
    WHILE           reduce using rule 59 (valor -> CADENAEXPRESION .)
    PRINT           reduce using rule 59 (valor -> CADENAEXPRESION .)
    PRINTLN         reduce using rule 59 (valor -> CADENAEXPRESION .)
    $end            reduce using rule 59 (valor -> CADENAEXPRESION .)
    ELSE            reduce using rule 59 (valor -> CADENAEXPRESION .)
    CLLAVE          reduce using rule 59 (valor -> CADENAEXPRESION .)
    PUNTO           shift and go to state 58
    IGUALIGUAL      reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    NOIGUAL         reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    MAYOR           reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    MENOR           reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    MAYORIGUAL      reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    MENORIGUAL      reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    SUMA            reduce using rule 97 (termino -> CADENAEXPRESION .)
    RESTA           reduce using rule 97 (termino -> CADENAEXPRESION .)
    MULT            reduce using rule 97 (termino -> CADENAEXPRESION .)
    DIVISION        reduce using rule 97 (termino -> CADENAEXPRESION .)
    MODULO          reduce using rule 97 (termino -> CADENAEXPRESION .)

  ! PUNTOCOMA       [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! VAL             [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! VAR             [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! ID              [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! NEGACION        [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! APAR            [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! TRUE            [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! FALSE           [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! COMDOBLE        [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! LISTOF          [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! SETOF           [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! PAIR            [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! TRIPLE          [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! IF              [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! FOR             [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! WHILE           [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! PRINT           [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! PRINTLN         [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! $end            [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! ELSE            [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]


state 16

    (60) valor -> list .
    (98) termino -> list .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for VAL resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for VAR resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for ID resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for NEGACION resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for APAR resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for TRUE resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for FALSE resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for LISTOF resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for SETOF resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for PAIR resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for IF resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for FOR resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for WHILE resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for PRINT resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for $end resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for ELSE resolved using rule 60 (valor -> list .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 60 (valor -> list .)
    PUNTOCOMA       reduce using rule 60 (valor -> list .)
    VAL             reduce using rule 60 (valor -> list .)
    VAR             reduce using rule 60 (valor -> list .)
    ID              reduce using rule 60 (valor -> list .)
    ENTEROEXPRESION reduce using rule 60 (valor -> list .)
    NEGACION        reduce using rule 60 (valor -> list .)
    APAR            reduce using rule 60 (valor -> list .)
    TRUE            reduce using rule 60 (valor -> list .)
    FALSE           reduce using rule 60 (valor -> list .)
    COMDOBLE        reduce using rule 60 (valor -> list .)
    LISTOF          reduce using rule 60 (valor -> list .)
    SETOF           reduce using rule 60 (valor -> list .)
    PAIR            reduce using rule 60 (valor -> list .)
    TRIPLE          reduce using rule 60 (valor -> list .)
    IF              reduce using rule 60 (valor -> list .)
    FOR             reduce using rule 60 (valor -> list .)
    WHILE           reduce using rule 60 (valor -> list .)
    PRINT           reduce using rule 60 (valor -> list .)
    PRINTLN         reduce using rule 60 (valor -> list .)
    $end            reduce using rule 60 (valor -> list .)
    ELSE            reduce using rule 60 (valor -> list .)
    CLLAVE          reduce using rule 60 (valor -> list .)
    SUMA            reduce using rule 98 (termino -> list .)
    RESTA           reduce using rule 98 (termino -> list .)
    MULT            reduce using rule 98 (termino -> list .)
    DIVISION        reduce using rule 98 (termino -> list .)
    MODULO          reduce using rule 98 (termino -> list .)

  ! PUNTOCOMA       [ reduce using rule 98 (termino -> list .) ]
  ! VAL             [ reduce using rule 98 (termino -> list .) ]
  ! VAR             [ reduce using rule 98 (termino -> list .) ]
  ! ID              [ reduce using rule 98 (termino -> list .) ]
  ! ENTEROEXPRESION [ reduce using rule 98 (termino -> list .) ]
  ! NEGACION        [ reduce using rule 98 (termino -> list .) ]
  ! APAR            [ reduce using rule 98 (termino -> list .) ]
  ! TRUE            [ reduce using rule 98 (termino -> list .) ]
  ! FALSE           [ reduce using rule 98 (termino -> list .) ]
  ! COMDOBLE        [ reduce using rule 98 (termino -> list .) ]
  ! LISTOF          [ reduce using rule 98 (termino -> list .) ]
  ! SETOF           [ reduce using rule 98 (termino -> list .) ]
  ! PAIR            [ reduce using rule 98 (termino -> list .) ]
  ! TRIPLE          [ reduce using rule 98 (termino -> list .) ]
  ! IF              [ reduce using rule 98 (termino -> list .) ]
  ! FOR             [ reduce using rule 98 (termino -> list .) ]
  ! WHILE           [ reduce using rule 98 (termino -> list .) ]
  ! PRINT           [ reduce using rule 98 (termino -> list .) ]
  ! PRINTLN         [ reduce using rule 98 (termino -> list .) ]
  ! $end            [ reduce using rule 98 (termino -> list .) ]
  ! ELSE            [ reduce using rule 98 (termino -> list .) ]
  ! CLLAVE          [ reduce using rule 98 (termino -> list .) ]


state 17

    (61) valor -> set .
    (99) termino -> set .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for VAL resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for VAR resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for ID resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for NEGACION resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for APAR resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for TRUE resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for FALSE resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for LISTOF resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for SETOF resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for PAIR resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for IF resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for FOR resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for WHILE resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for PRINT resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for $end resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for ELSE resolved using rule 61 (valor -> set .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 61 (valor -> set .)
    PUNTOCOMA       reduce using rule 61 (valor -> set .)
    VAL             reduce using rule 61 (valor -> set .)
    VAR             reduce using rule 61 (valor -> set .)
    ID              reduce using rule 61 (valor -> set .)
    ENTEROEXPRESION reduce using rule 61 (valor -> set .)
    NEGACION        reduce using rule 61 (valor -> set .)
    APAR            reduce using rule 61 (valor -> set .)
    TRUE            reduce using rule 61 (valor -> set .)
    FALSE           reduce using rule 61 (valor -> set .)
    COMDOBLE        reduce using rule 61 (valor -> set .)
    LISTOF          reduce using rule 61 (valor -> set .)
    SETOF           reduce using rule 61 (valor -> set .)
    PAIR            reduce using rule 61 (valor -> set .)
    TRIPLE          reduce using rule 61 (valor -> set .)
    IF              reduce using rule 61 (valor -> set .)
    FOR             reduce using rule 61 (valor -> set .)
    WHILE           reduce using rule 61 (valor -> set .)
    PRINT           reduce using rule 61 (valor -> set .)
    PRINTLN         reduce using rule 61 (valor -> set .)
    $end            reduce using rule 61 (valor -> set .)
    ELSE            reduce using rule 61 (valor -> set .)
    CLLAVE          reduce using rule 61 (valor -> set .)
    SUMA            reduce using rule 99 (termino -> set .)
    RESTA           reduce using rule 99 (termino -> set .)
    MULT            reduce using rule 99 (termino -> set .)
    DIVISION        reduce using rule 99 (termino -> set .)
    MODULO          reduce using rule 99 (termino -> set .)

  ! PUNTOCOMA       [ reduce using rule 99 (termino -> set .) ]
  ! VAL             [ reduce using rule 99 (termino -> set .) ]
  ! VAR             [ reduce using rule 99 (termino -> set .) ]
  ! ID              [ reduce using rule 99 (termino -> set .) ]
  ! ENTEROEXPRESION [ reduce using rule 99 (termino -> set .) ]
  ! NEGACION        [ reduce using rule 99 (termino -> set .) ]
  ! APAR            [ reduce using rule 99 (termino -> set .) ]
  ! TRUE            [ reduce using rule 99 (termino -> set .) ]
  ! FALSE           [ reduce using rule 99 (termino -> set .) ]
  ! COMDOBLE        [ reduce using rule 99 (termino -> set .) ]
  ! LISTOF          [ reduce using rule 99 (termino -> set .) ]
  ! SETOF           [ reduce using rule 99 (termino -> set .) ]
  ! PAIR            [ reduce using rule 99 (termino -> set .) ]
  ! TRIPLE          [ reduce using rule 99 (termino -> set .) ]
  ! IF              [ reduce using rule 99 (termino -> set .) ]
  ! FOR             [ reduce using rule 99 (termino -> set .) ]
  ! WHILE           [ reduce using rule 99 (termino -> set .) ]
  ! PRINT           [ reduce using rule 99 (termino -> set .) ]
  ! PRINTLN         [ reduce using rule 99 (termino -> set .) ]
  ! $end            [ reduce using rule 99 (termino -> set .) ]
  ! ELSE            [ reduce using rule 99 (termino -> set .) ]
  ! CLLAVE          [ reduce using rule 99 (termino -> set .) ]


state 18

    (62) valor -> pair .

    PUNTOCOMA       reduce using rule 62 (valor -> pair .)
    VAL             reduce using rule 62 (valor -> pair .)
    VAR             reduce using rule 62 (valor -> pair .)
    ID              reduce using rule 62 (valor -> pair .)
    ENTEROEXPRESION reduce using rule 62 (valor -> pair .)
    NEGACION        reduce using rule 62 (valor -> pair .)
    APAR            reduce using rule 62 (valor -> pair .)
    TRUE            reduce using rule 62 (valor -> pair .)
    FALSE           reduce using rule 62 (valor -> pair .)
    COMDOBLE        reduce using rule 62 (valor -> pair .)
    LISTOF          reduce using rule 62 (valor -> pair .)
    SETOF           reduce using rule 62 (valor -> pair .)
    PAIR            reduce using rule 62 (valor -> pair .)
    TRIPLE          reduce using rule 62 (valor -> pair .)
    IF              reduce using rule 62 (valor -> pair .)
    FOR             reduce using rule 62 (valor -> pair .)
    WHILE           reduce using rule 62 (valor -> pair .)
    PRINT           reduce using rule 62 (valor -> pair .)
    PRINTLN         reduce using rule 62 (valor -> pair .)
    $end            reduce using rule 62 (valor -> pair .)
    ELSE            reduce using rule 62 (valor -> pair .)
    CLLAVE          reduce using rule 62 (valor -> pair .)


state 19

    (63) valor -> triple .

    PUNTOCOMA       reduce using rule 63 (valor -> triple .)
    VAL             reduce using rule 63 (valor -> triple .)
    VAR             reduce using rule 63 (valor -> triple .)
    ID              reduce using rule 63 (valor -> triple .)
    ENTEROEXPRESION reduce using rule 63 (valor -> triple .)
    NEGACION        reduce using rule 63 (valor -> triple .)
    APAR            reduce using rule 63 (valor -> triple .)
    TRUE            reduce using rule 63 (valor -> triple .)
    FALSE           reduce using rule 63 (valor -> triple .)
    COMDOBLE        reduce using rule 63 (valor -> triple .)
    LISTOF          reduce using rule 63 (valor -> triple .)
    SETOF           reduce using rule 63 (valor -> triple .)
    PAIR            reduce using rule 63 (valor -> triple .)
    TRIPLE          reduce using rule 63 (valor -> triple .)
    IF              reduce using rule 63 (valor -> triple .)
    FOR             reduce using rule 63 (valor -> triple .)
    WHILE           reduce using rule 63 (valor -> triple .)
    PRINT           reduce using rule 63 (valor -> triple .)
    PRINTLN         reduce using rule 63 (valor -> triple .)
    $end            reduce using rule 63 (valor -> triple .)
    ELSE            reduce using rule 63 (valor -> triple .)
    CLLAVE          reduce using rule 63 (valor -> triple .)


state 20

    (64) valor -> expresion .
    (83) expresion -> expresion . SUMA termino
    (84) expresion -> expresion . RESTA termino
    (85) expresion -> expresion . DIVISION termino
    (86) expresion -> expresion . MULT termino
    (87) expresion -> expresion . MODULO termino

    PUNTOCOMA       reduce using rule 64 (valor -> expresion .)
    VAL             reduce using rule 64 (valor -> expresion .)
    VAR             reduce using rule 64 (valor -> expresion .)
    ID              reduce using rule 64 (valor -> expresion .)
    ENTEROEXPRESION reduce using rule 64 (valor -> expresion .)
    NEGACION        reduce using rule 64 (valor -> expresion .)
    APAR            reduce using rule 64 (valor -> expresion .)
    TRUE            reduce using rule 64 (valor -> expresion .)
    FALSE           reduce using rule 64 (valor -> expresion .)
    COMDOBLE        reduce using rule 64 (valor -> expresion .)
    LISTOF          reduce using rule 64 (valor -> expresion .)
    SETOF           reduce using rule 64 (valor -> expresion .)
    PAIR            reduce using rule 64 (valor -> expresion .)
    TRIPLE          reduce using rule 64 (valor -> expresion .)
    IF              reduce using rule 64 (valor -> expresion .)
    FOR             reduce using rule 64 (valor -> expresion .)
    WHILE           reduce using rule 64 (valor -> expresion .)
    PRINT           reduce using rule 64 (valor -> expresion .)
    PRINTLN         reduce using rule 64 (valor -> expresion .)
    $end            reduce using rule 64 (valor -> expresion .)
    ELSE            reduce using rule 64 (valor -> expresion .)
    CLLAVE          reduce using rule 64 (valor -> expresion .)
    SUMA            shift and go to state 59
    RESTA           shift and go to state 60
    DIVISION        shift and go to state 61
    MULT            shift and go to state 62
    MODULO          shift and go to state 63


state 21

    (66) valor -> if .
    (132) control -> if .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for VAL resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for VAR resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for ID resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for NEGACION resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for APAR resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for TRUE resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for FALSE resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for LISTOF resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for SETOF resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for PAIR resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for IF resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for FOR resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for WHILE resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for PRINT resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for $end resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for ELSE resolved using rule 66 (valor -> if .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 66 (valor -> if .)
    PUNTOCOMA       reduce using rule 66 (valor -> if .)
    VAL             reduce using rule 66 (valor -> if .)
    VAR             reduce using rule 66 (valor -> if .)
    ID              reduce using rule 66 (valor -> if .)
    ENTEROEXPRESION reduce using rule 66 (valor -> if .)
    NEGACION        reduce using rule 66 (valor -> if .)
    APAR            reduce using rule 66 (valor -> if .)
    TRUE            reduce using rule 66 (valor -> if .)
    FALSE           reduce using rule 66 (valor -> if .)
    COMDOBLE        reduce using rule 66 (valor -> if .)
    LISTOF          reduce using rule 66 (valor -> if .)
    SETOF           reduce using rule 66 (valor -> if .)
    PAIR            reduce using rule 66 (valor -> if .)
    TRIPLE          reduce using rule 66 (valor -> if .)
    IF              reduce using rule 66 (valor -> if .)
    FOR             reduce using rule 66 (valor -> if .)
    WHILE           reduce using rule 66 (valor -> if .)
    PRINT           reduce using rule 66 (valor -> if .)
    PRINTLN         reduce using rule 66 (valor -> if .)
    $end            reduce using rule 66 (valor -> if .)
    ELSE            reduce using rule 66 (valor -> if .)
    CLLAVE          reduce using rule 66 (valor -> if .)

  ! PUNTOCOMA       [ reduce using rule 132 (control -> if .) ]
  ! VAL             [ reduce using rule 132 (control -> if .) ]
  ! VAR             [ reduce using rule 132 (control -> if .) ]
  ! ID              [ reduce using rule 132 (control -> if .) ]
  ! ENTEROEXPRESION [ reduce using rule 132 (control -> if .) ]
  ! NEGACION        [ reduce using rule 132 (control -> if .) ]
  ! APAR            [ reduce using rule 132 (control -> if .) ]
  ! TRUE            [ reduce using rule 132 (control -> if .) ]
  ! FALSE           [ reduce using rule 132 (control -> if .) ]
  ! COMDOBLE        [ reduce using rule 132 (control -> if .) ]
  ! LISTOF          [ reduce using rule 132 (control -> if .) ]
  ! SETOF           [ reduce using rule 132 (control -> if .) ]
  ! PAIR            [ reduce using rule 132 (control -> if .) ]
  ! TRIPLE          [ reduce using rule 132 (control -> if .) ]
  ! IF              [ reduce using rule 132 (control -> if .) ]
  ! FOR             [ reduce using rule 132 (control -> if .) ]
  ! WHILE           [ reduce using rule 132 (control -> if .) ]
  ! PRINT           [ reduce using rule 132 (control -> if .) ]
  ! PRINTLN         [ reduce using rule 132 (control -> if .) ]
  ! $end            [ reduce using rule 132 (control -> if .) ]
  ! ELSE            [ reduce using rule 132 (control -> if .) ]
  ! CLLAVE          [ reduce using rule 132 (control -> if .) ]


state 22

    (67) valor -> NEGACION . ID
    (129) condicion -> NEGACION . condicion
    (122) compmiembro -> NEGACION . compmiembro
    (126) compsolo -> NEGACION . compsolo
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR

    ID              shift and go to state 65
    NEGACION        shift and go to state 64
    APAR            shift and go to state 69
    ENTEROEXPRESION shift and go to state 71
    COMDOBLE        shift and go to state 33
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    condicion                      shift and go to state 66
    compmiembro                    shift and go to state 67
    compsolo                       shift and go to state 68
    CADENAEXPRESION                shift and go to state 70
    funcion                        shift and go to state 72
    expresionBooleano              shift and go to state 73
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24

state 23

    (20) funcion -> funcionCompare .

    PUNTOCOMA       reduce using rule 20 (funcion -> funcionCompare .)
    VAL             reduce using rule 20 (funcion -> funcionCompare .)
    VAR             reduce using rule 20 (funcion -> funcionCompare .)
    ID              reduce using rule 20 (funcion -> funcionCompare .)
    ENTEROEXPRESION reduce using rule 20 (funcion -> funcionCompare .)
    NEGACION        reduce using rule 20 (funcion -> funcionCompare .)
    APAR            reduce using rule 20 (funcion -> funcionCompare .)
    TRUE            reduce using rule 20 (funcion -> funcionCompare .)
    FALSE           reduce using rule 20 (funcion -> funcionCompare .)
    COMDOBLE        reduce using rule 20 (funcion -> funcionCompare .)
    LISTOF          reduce using rule 20 (funcion -> funcionCompare .)
    SETOF           reduce using rule 20 (funcion -> funcionCompare .)
    PAIR            reduce using rule 20 (funcion -> funcionCompare .)
    TRIPLE          reduce using rule 20 (funcion -> funcionCompare .)
    IF              reduce using rule 20 (funcion -> funcionCompare .)
    FOR             reduce using rule 20 (funcion -> funcionCompare .)
    WHILE           reduce using rule 20 (funcion -> funcionCompare .)
    PRINT           reduce using rule 20 (funcion -> funcionCompare .)
    PRINTLN         reduce using rule 20 (funcion -> funcionCompare .)
    $end            reduce using rule 20 (funcion -> funcionCompare .)
    IGUALIGUAL      reduce using rule 20 (funcion -> funcionCompare .)
    NOIGUAL         reduce using rule 20 (funcion -> funcionCompare .)
    MAYOR           reduce using rule 20 (funcion -> funcionCompare .)
    MENOR           reduce using rule 20 (funcion -> funcionCompare .)
    MAYORIGUAL      reduce using rule 20 (funcion -> funcionCompare .)
    MENORIGUAL      reduce using rule 20 (funcion -> funcionCompare .)
    AND             reduce using rule 20 (funcion -> funcionCompare .)
    OR              reduce using rule 20 (funcion -> funcionCompare .)
    ELSE            reduce using rule 20 (funcion -> funcionCompare .)
    CLLAVE          reduce using rule 20 (funcion -> funcionCompare .)
    CPAR            reduce using rule 20 (funcion -> funcionCompare .)


state 24

    (21) funcion -> funcionGet .

    PUNTOCOMA       reduce using rule 21 (funcion -> funcionGet .)
    VAL             reduce using rule 21 (funcion -> funcionGet .)
    VAR             reduce using rule 21 (funcion -> funcionGet .)
    ID              reduce using rule 21 (funcion -> funcionGet .)
    ENTEROEXPRESION reduce using rule 21 (funcion -> funcionGet .)
    NEGACION        reduce using rule 21 (funcion -> funcionGet .)
    APAR            reduce using rule 21 (funcion -> funcionGet .)
    TRUE            reduce using rule 21 (funcion -> funcionGet .)
    FALSE           reduce using rule 21 (funcion -> funcionGet .)
    COMDOBLE        reduce using rule 21 (funcion -> funcionGet .)
    LISTOF          reduce using rule 21 (funcion -> funcionGet .)
    SETOF           reduce using rule 21 (funcion -> funcionGet .)
    PAIR            reduce using rule 21 (funcion -> funcionGet .)
    TRIPLE          reduce using rule 21 (funcion -> funcionGet .)
    IF              reduce using rule 21 (funcion -> funcionGet .)
    FOR             reduce using rule 21 (funcion -> funcionGet .)
    WHILE           reduce using rule 21 (funcion -> funcionGet .)
    PRINT           reduce using rule 21 (funcion -> funcionGet .)
    PRINTLN         reduce using rule 21 (funcion -> funcionGet .)
    $end            reduce using rule 21 (funcion -> funcionGet .)
    IGUALIGUAL      reduce using rule 21 (funcion -> funcionGet .)
    NOIGUAL         reduce using rule 21 (funcion -> funcionGet .)
    MAYOR           reduce using rule 21 (funcion -> funcionGet .)
    MENOR           reduce using rule 21 (funcion -> funcionGet .)
    MAYORIGUAL      reduce using rule 21 (funcion -> funcionGet .)
    MENORIGUAL      reduce using rule 21 (funcion -> funcionGet .)
    AND             reduce using rule 21 (funcion -> funcionGet .)
    OR              reduce using rule 21 (funcion -> funcionGet .)
    ELSE            reduce using rule 21 (funcion -> funcionGet .)
    CLLAVE          reduce using rule 21 (funcion -> funcionGet .)
    CPAR            reduce using rule 21 (funcion -> funcionGet .)


state 25

    (131) condicion -> APAR . condicion CPAR
    (108) factor -> APAR . expresion CPAR
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR

    NEGACION        shift and go to state 64
    APAR            shift and go to state 25
    ID              shift and go to state 76
    ENTEROEXPRESION shift and go to state 78
    COMDOBLE        shift and go to state 33
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    condicion                      shift and go to state 74
    expresion                      shift and go to state 75
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    termino                        shift and go to state 38
    CADENAEXPRESION                shift and go to state 77
    funcion                        shift and go to state 72
    expresionBooleano              shift and go to state 73
    factor                         shift and go to state 44
    flotante                       shift and go to state 79
    list                           shift and go to state 80
    set                            shift and go to state 81
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24

state 26

    (133) control -> for .

    PUNTOCOMA       reduce using rule 133 (control -> for .)
    VAL             reduce using rule 133 (control -> for .)
    VAR             reduce using rule 133 (control -> for .)
    ID              reduce using rule 133 (control -> for .)
    ENTEROEXPRESION reduce using rule 133 (control -> for .)
    NEGACION        reduce using rule 133 (control -> for .)
    APAR            reduce using rule 133 (control -> for .)
    TRUE            reduce using rule 133 (control -> for .)
    FALSE           reduce using rule 133 (control -> for .)
    COMDOBLE        reduce using rule 133 (control -> for .)
    LISTOF          reduce using rule 133 (control -> for .)
    SETOF           reduce using rule 133 (control -> for .)
    PAIR            reduce using rule 133 (control -> for .)
    TRIPLE          reduce using rule 133 (control -> for .)
    IF              reduce using rule 133 (control -> for .)
    FOR             reduce using rule 133 (control -> for .)
    WHILE           reduce using rule 133 (control -> for .)
    PRINT           reduce using rule 133 (control -> for .)
    PRINTLN         reduce using rule 133 (control -> for .)
    $end            reduce using rule 133 (control -> for .)
    ELSE            reduce using rule 133 (control -> for .)
    CLLAVE          reduce using rule 133 (control -> for .)


state 27

    (134) control -> while .

    PUNTOCOMA       reduce using rule 134 (control -> while .)
    VAL             reduce using rule 134 (control -> while .)
    VAR             reduce using rule 134 (control -> while .)
    ID              reduce using rule 134 (control -> while .)
    ENTEROEXPRESION reduce using rule 134 (control -> while .)
    NEGACION        reduce using rule 134 (control -> while .)
    APAR            reduce using rule 134 (control -> while .)
    TRUE            reduce using rule 134 (control -> while .)
    FALSE           reduce using rule 134 (control -> while .)
    COMDOBLE        reduce using rule 134 (control -> while .)
    LISTOF          reduce using rule 134 (control -> while .)
    SETOF           reduce using rule 134 (control -> while .)
    PAIR            reduce using rule 134 (control -> while .)
    TRIPLE          reduce using rule 134 (control -> while .)
    IF              reduce using rule 134 (control -> while .)
    FOR             reduce using rule 134 (control -> while .)
    WHILE           reduce using rule 134 (control -> while .)
    PRINT           reduce using rule 134 (control -> while .)
    PRINTLN         reduce using rule 134 (control -> while .)
    $end            reduce using rule 134 (control -> while .)
    ELSE            reduce using rule 134 (control -> while .)
    CLLAVE          reduce using rule 134 (control -> while .)


state 28

    (127) condicion -> compmiembro . comparador compmiembro
    (109) comparador -> . IGUALIGUAL
    (110) comparador -> . NOIGUAL
    (111) comparador -> . MAYOR
    (112) comparador -> . MENOR
    (113) comparador -> . MAYORIGUAL
    (114) comparador -> . MENORIGUAL

    IGUALIGUAL      shift and go to state 84
    NOIGUAL         shift and go to state 85
    MAYOR           shift and go to state 86
    MENOR           shift and go to state 87
    MAYORIGUAL      shift and go to state 88
    MENORIGUAL      shift and go to state 89

    comparador                     shift and go to state 83

state 29

    (128) condicion -> compsolo .

    AND             reduce using rule 128 (condicion -> compsolo .)
    OR              reduce using rule 128 (condicion -> compsolo .)
    PUNTOCOMA       reduce using rule 128 (condicion -> compsolo .)
    VAL             reduce using rule 128 (condicion -> compsolo .)
    VAR             reduce using rule 128 (condicion -> compsolo .)
    ID              reduce using rule 128 (condicion -> compsolo .)
    ENTEROEXPRESION reduce using rule 128 (condicion -> compsolo .)
    NEGACION        reduce using rule 128 (condicion -> compsolo .)
    APAR            reduce using rule 128 (condicion -> compsolo .)
    TRUE            reduce using rule 128 (condicion -> compsolo .)
    FALSE           reduce using rule 128 (condicion -> compsolo .)
    COMDOBLE        reduce using rule 128 (condicion -> compsolo .)
    LISTOF          reduce using rule 128 (condicion -> compsolo .)
    SETOF           reduce using rule 128 (condicion -> compsolo .)
    PAIR            reduce using rule 128 (condicion -> compsolo .)
    TRIPLE          reduce using rule 128 (condicion -> compsolo .)
    IF              reduce using rule 128 (condicion -> compsolo .)
    FOR             reduce using rule 128 (condicion -> compsolo .)
    WHILE           reduce using rule 128 (condicion -> compsolo .)
    PRINT           reduce using rule 128 (condicion -> compsolo .)
    PRINTLN         reduce using rule 128 (condicion -> compsolo .)
    $end            reduce using rule 128 (condicion -> compsolo .)
    CPAR            reduce using rule 128 (condicion -> compsolo .)
    ELSE            reduce using rule 128 (condicion -> compsolo .)
    CLLAVE          reduce using rule 128 (condicion -> compsolo .)


state 30

    (11) print -> printType . APAR CADENAEXPRESION CPAR
    (12) print -> printType . APAR CPAR
    (13) print -> printType . APAR ID CPAR
    (14) print -> printType . APAR funcion CPAR
    (15) print -> printType . APAR condicion CPAR
    (16) print -> printType . APAR expresion CPAR
    (17) print -> printType . APAR error CPAR

    APAR            shift and go to state 90


state 31

    (68) expresionBooleano -> TRUE .

    PUNTOCOMA       reduce using rule 68 (expresionBooleano -> TRUE .)
    VAL             reduce using rule 68 (expresionBooleano -> TRUE .)
    VAR             reduce using rule 68 (expresionBooleano -> TRUE .)
    ID              reduce using rule 68 (expresionBooleano -> TRUE .)
    ENTEROEXPRESION reduce using rule 68 (expresionBooleano -> TRUE .)
    NEGACION        reduce using rule 68 (expresionBooleano -> TRUE .)
    APAR            reduce using rule 68 (expresionBooleano -> TRUE .)
    TRUE            reduce using rule 68 (expresionBooleano -> TRUE .)
    FALSE           reduce using rule 68 (expresionBooleano -> TRUE .)
    COMDOBLE        reduce using rule 68 (expresionBooleano -> TRUE .)
    LISTOF          reduce using rule 68 (expresionBooleano -> TRUE .)
    SETOF           reduce using rule 68 (expresionBooleano -> TRUE .)
    PAIR            reduce using rule 68 (expresionBooleano -> TRUE .)
    TRIPLE          reduce using rule 68 (expresionBooleano -> TRUE .)
    IF              reduce using rule 68 (expresionBooleano -> TRUE .)
    FOR             reduce using rule 68 (expresionBooleano -> TRUE .)
    WHILE           reduce using rule 68 (expresionBooleano -> TRUE .)
    PRINT           reduce using rule 68 (expresionBooleano -> TRUE .)
    PRINTLN         reduce using rule 68 (expresionBooleano -> TRUE .)
    $end            reduce using rule 68 (expresionBooleano -> TRUE .)
    IGUALIGUAL      reduce using rule 68 (expresionBooleano -> TRUE .)
    NOIGUAL         reduce using rule 68 (expresionBooleano -> TRUE .)
    MAYOR           reduce using rule 68 (expresionBooleano -> TRUE .)
    MENOR           reduce using rule 68 (expresionBooleano -> TRUE .)
    MAYORIGUAL      reduce using rule 68 (expresionBooleano -> TRUE .)
    MENORIGUAL      reduce using rule 68 (expresionBooleano -> TRUE .)
    AND             reduce using rule 68 (expresionBooleano -> TRUE .)
    OR              reduce using rule 68 (expresionBooleano -> TRUE .)
    ELSE            reduce using rule 68 (expresionBooleano -> TRUE .)
    CLLAVE          reduce using rule 68 (expresionBooleano -> TRUE .)
    CPAR            reduce using rule 68 (expresionBooleano -> TRUE .)


state 32

    (69) expresionBooleano -> FALSE .

    PUNTOCOMA       reduce using rule 69 (expresionBooleano -> FALSE .)
    VAL             reduce using rule 69 (expresionBooleano -> FALSE .)
    VAR             reduce using rule 69 (expresionBooleano -> FALSE .)
    ID              reduce using rule 69 (expresionBooleano -> FALSE .)
    ENTEROEXPRESION reduce using rule 69 (expresionBooleano -> FALSE .)
    NEGACION        reduce using rule 69 (expresionBooleano -> FALSE .)
    APAR            reduce using rule 69 (expresionBooleano -> FALSE .)
    TRUE            reduce using rule 69 (expresionBooleano -> FALSE .)
    FALSE           reduce using rule 69 (expresionBooleano -> FALSE .)
    COMDOBLE        reduce using rule 69 (expresionBooleano -> FALSE .)
    LISTOF          reduce using rule 69 (expresionBooleano -> FALSE .)
    SETOF           reduce using rule 69 (expresionBooleano -> FALSE .)
    PAIR            reduce using rule 69 (expresionBooleano -> FALSE .)
    TRIPLE          reduce using rule 69 (expresionBooleano -> FALSE .)
    IF              reduce using rule 69 (expresionBooleano -> FALSE .)
    FOR             reduce using rule 69 (expresionBooleano -> FALSE .)
    WHILE           reduce using rule 69 (expresionBooleano -> FALSE .)
    PRINT           reduce using rule 69 (expresionBooleano -> FALSE .)
    PRINTLN         reduce using rule 69 (expresionBooleano -> FALSE .)
    $end            reduce using rule 69 (expresionBooleano -> FALSE .)
    IGUALIGUAL      reduce using rule 69 (expresionBooleano -> FALSE .)
    NOIGUAL         reduce using rule 69 (expresionBooleano -> FALSE .)
    MAYOR           reduce using rule 69 (expresionBooleano -> FALSE .)
    MENOR           reduce using rule 69 (expresionBooleano -> FALSE .)
    MAYORIGUAL      reduce using rule 69 (expresionBooleano -> FALSE .)
    MENORIGUAL      reduce using rule 69 (expresionBooleano -> FALSE .)
    AND             reduce using rule 69 (expresionBooleano -> FALSE .)
    OR              reduce using rule 69 (expresionBooleano -> FALSE .)
    ELSE            reduce using rule 69 (expresionBooleano -> FALSE .)
    CLLAVE          reduce using rule 69 (expresionBooleano -> FALSE .)
    CPAR            reduce using rule 69 (expresionBooleano -> FALSE .)


state 33

    (150) CADENAEXPRESION -> COMDOBLE . content COMDOBLE
    (151) CADENAEXPRESION -> COMDOBLE . COMDOBLE
    (152) content -> . SIGNODOLAR ID
    (153) content -> . ID
    (154) content -> . ENTEROEXPRESION
    (155) content -> . PUNTO
    (156) content -> . PUNTOPUNTO
    (157) content -> . comparador
    (158) content -> . SYMBOL
    (159) content -> . COMA
    (160) content -> . PUNTOCOMA
    (161) content -> . DOSPUNTOS
    (162) content -> . content content
    (109) comparador -> . IGUALIGUAL
    (110) comparador -> . NOIGUAL
    (111) comparador -> . MAYOR
    (112) comparador -> . MENOR
    (113) comparador -> . MAYORIGUAL
    (114) comparador -> . MENORIGUAL

    COMDOBLE        shift and go to state 91
    SIGNODOLAR      shift and go to state 93
    ID              shift and go to state 94
    ENTEROEXPRESION shift and go to state 95
    PUNTO           shift and go to state 96
    PUNTOPUNTO      shift and go to state 97
    SYMBOL          shift and go to state 99
    COMA            shift and go to state 100
    PUNTOCOMA       shift and go to state 101
    DOSPUNTOS       shift and go to state 102
    IGUALIGUAL      shift and go to state 84
    NOIGUAL         shift and go to state 85
    MAYOR           shift and go to state 86
    MENOR           shift and go to state 87
    MAYORIGUAL      shift and go to state 88
    MENORIGUAL      shift and go to state 89

    content                        shift and go to state 92
    comparador                     shift and go to state 98

state 34

    (73) list -> LISTOF . APAR contenido CPAR
    (74) list -> LISTOF . APAR error CPAR
    (76) set -> LISTOF . APAR error CPAR
    (78) pair -> LISTOF . APAR error CPAR
    (80) triple -> LISTOF . APAR error CPAR

    APAR            shift and go to state 103


state 35

    (75) set -> SETOF . APAR contenido CPAR

    APAR            shift and go to state 104


state 36

    (77) pair -> PAIR . APAR factorEspecial COMA factorEspecial CPAR

    APAR            shift and go to state 105


state 37

    (79) triple -> TRIPLE . APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR

    APAR            shift and go to state 106


state 38

    (88) expresion -> termino .
    (89) termino -> termino . SUMA factorEspecial
    (90) termino -> termino . RESTA factor
    (91) termino -> termino . MULT factor
    (92) termino -> termino . DIVISION factor
    (93) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    PUNTOCOMA       reduce using rule 88 (expresion -> termino .)
    VAL             reduce using rule 88 (expresion -> termino .)
    VAR             reduce using rule 88 (expresion -> termino .)
    ID              reduce using rule 88 (expresion -> termino .)
    ENTEROEXPRESION reduce using rule 88 (expresion -> termino .)
    NEGACION        reduce using rule 88 (expresion -> termino .)
    APAR            reduce using rule 88 (expresion -> termino .)
    TRUE            reduce using rule 88 (expresion -> termino .)
    FALSE           reduce using rule 88 (expresion -> termino .)
    COMDOBLE        reduce using rule 88 (expresion -> termino .)
    LISTOF          reduce using rule 88 (expresion -> termino .)
    SETOF           reduce using rule 88 (expresion -> termino .)
    PAIR            reduce using rule 88 (expresion -> termino .)
    TRIPLE          reduce using rule 88 (expresion -> termino .)
    IF              reduce using rule 88 (expresion -> termino .)
    FOR             reduce using rule 88 (expresion -> termino .)
    WHILE           reduce using rule 88 (expresion -> termino .)
    PRINT           reduce using rule 88 (expresion -> termino .)
    PRINTLN         reduce using rule 88 (expresion -> termino .)
    $end            reduce using rule 88 (expresion -> termino .)
    CPAR            reduce using rule 88 (expresion -> termino .)
    ELSE            reduce using rule 88 (expresion -> termino .)
    CLLAVE          reduce using rule 88 (expresion -> termino .)
    SUMA            shift and go to state 107
    RESTA           shift and go to state 108
    MULT            shift and go to state 109
    DIVISION        shift and go to state 110
    MODULO          shift and go to state 111

  ! SUMA            [ reduce using rule 88 (expresion -> termino .) ]
  ! RESTA           [ reduce using rule 88 (expresion -> termino .) ]
  ! DIVISION        [ reduce using rule 88 (expresion -> termino .) ]
  ! MULT            [ reduce using rule 88 (expresion -> termino .) ]
  ! MODULO          [ reduce using rule 88 (expresion -> termino .) ]


state 39

    (137) if -> IF . APAR condicion CPAR cuerpo
    (138) if -> IF . APAR condicion CPAR cuerpo ELSE cuerpo

    APAR            shift and go to state 112


state 40

    (139) for -> FOR . APAR ID IN ID CPAR cuerpo
    (140) for -> FOR . APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> FOR . APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> FOR . APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> FOR . APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> FOR . APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> FOR . APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> FOR . APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> FOR . APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> FOR . APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo

    APAR            shift and go to state 113


state 41

    (149) while -> WHILE . APAR condicion CPAR cuerpo

    APAR            shift and go to state 114


state 42

    (18) printType -> PRINT .

    APAR            reduce using rule 18 (printType -> PRINT .)


state 43

    (19) printType -> PRINTLN .

    APAR            reduce using rule 19 (printType -> PRINTLN .)


state 44

    (94) termino -> factor .

    SUMA            reduce using rule 94 (termino -> factor .)
    RESTA           reduce using rule 94 (termino -> factor .)
    MULT            reduce using rule 94 (termino -> factor .)
    DIVISION        reduce using rule 94 (termino -> factor .)
    MODULO          reduce using rule 94 (termino -> factor .)
    PUNTOCOMA       reduce using rule 94 (termino -> factor .)
    VAL             reduce using rule 94 (termino -> factor .)
    VAR             reduce using rule 94 (termino -> factor .)
    ID              reduce using rule 94 (termino -> factor .)
    ENTEROEXPRESION reduce using rule 94 (termino -> factor .)
    NEGACION        reduce using rule 94 (termino -> factor .)
    APAR            reduce using rule 94 (termino -> factor .)
    TRUE            reduce using rule 94 (termino -> factor .)
    FALSE           reduce using rule 94 (termino -> factor .)
    COMDOBLE        reduce using rule 94 (termino -> factor .)
    LISTOF          reduce using rule 94 (termino -> factor .)
    SETOF           reduce using rule 94 (termino -> factor .)
    PAIR            reduce using rule 94 (termino -> factor .)
    TRIPLE          reduce using rule 94 (termino -> factor .)
    IF              reduce using rule 94 (termino -> factor .)
    FOR             reduce using rule 94 (termino -> factor .)
    WHILE           reduce using rule 94 (termino -> factor .)
    PRINT           reduce using rule 94 (termino -> factor .)
    PRINTLN         reduce using rule 94 (termino -> factor .)
    $end            reduce using rule 94 (termino -> factor .)
    CPAR            reduce using rule 94 (termino -> factor .)
    ELSE            reduce using rule 94 (termino -> factor .)
    CLLAVE          reduce using rule 94 (termino -> factor .)


state 45

    (3) todos -> todos sentencia .
    (4) todos -> todos sentencia . PUNTOCOMA

    VAL             reduce using rule 3 (todos -> todos sentencia .)
    VAR             reduce using rule 3 (todos -> todos sentencia .)
    ID              reduce using rule 3 (todos -> todos sentencia .)
    ENTEROEXPRESION reduce using rule 3 (todos -> todos sentencia .)
    NEGACION        reduce using rule 3 (todos -> todos sentencia .)
    APAR            reduce using rule 3 (todos -> todos sentencia .)
    TRUE            reduce using rule 3 (todos -> todos sentencia .)
    FALSE           reduce using rule 3 (todos -> todos sentencia .)
    COMDOBLE        reduce using rule 3 (todos -> todos sentencia .)
    LISTOF          reduce using rule 3 (todos -> todos sentencia .)
    SETOF           reduce using rule 3 (todos -> todos sentencia .)
    PAIR            reduce using rule 3 (todos -> todos sentencia .)
    TRIPLE          reduce using rule 3 (todos -> todos sentencia .)
    IF              reduce using rule 3 (todos -> todos sentencia .)
    FOR             reduce using rule 3 (todos -> todos sentencia .)
    WHILE           reduce using rule 3 (todos -> todos sentencia .)
    PRINT           reduce using rule 3 (todos -> todos sentencia .)
    PRINTLN         reduce using rule 3 (todos -> todos sentencia .)
    $end            reduce using rule 3 (todos -> todos sentencia .)
    CLLAVE          reduce using rule 3 (todos -> todos sentencia .)
    PUNTOCOMA       shift and go to state 115


state 46

    (1) todos -> sentencia PUNTOCOMA .

    VAL             reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    VAR             reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    ID              reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    ENTEROEXPRESION reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    NEGACION        reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    APAR            reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    TRUE            reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    FALSE           reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    COMDOBLE        reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    LISTOF          reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    SETOF           reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    PAIR            reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    TRIPLE          reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    IF              reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    FOR             reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    WHILE           reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    PRINT           reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    PRINTLN         reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    $end            reduce using rule 1 (todos -> sentencia PUNTOCOMA .)
    CLLAVE          reduce using rule 1 (todos -> sentencia PUNTOCOMA .)


state 47

    (130) condicion -> condicion conector . condicion
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR

    NEGACION        shift and go to state 64
    APAR            shift and go to state 69
    ID              shift and go to state 117
    ENTEROEXPRESION shift and go to state 71
    COMDOBLE        shift and go to state 33
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    condicion                      shift and go to state 116
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    CADENAEXPRESION                shift and go to state 70
    funcion                        shift and go to state 72
    expresionBooleano              shift and go to state 73
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24

state 48

    (115) conector -> AND .

    NEGACION        reduce using rule 115 (conector -> AND .)
    APAR            reduce using rule 115 (conector -> AND .)
    ID              reduce using rule 115 (conector -> AND .)
    ENTEROEXPRESION reduce using rule 115 (conector -> AND .)
    COMDOBLE        reduce using rule 115 (conector -> AND .)
    TRUE            reduce using rule 115 (conector -> AND .)
    FALSE           reduce using rule 115 (conector -> AND .)


state 49

    (116) conector -> OR .

    NEGACION        reduce using rule 116 (conector -> OR .)
    APAR            reduce using rule 116 (conector -> OR .)
    ID              reduce using rule 116 (conector -> OR .)
    ENTEROEXPRESION reduce using rule 116 (conector -> OR .)
    COMDOBLE        reduce using rule 116 (conector -> OR .)
    TRUE            reduce using rule 116 (conector -> OR .)
    FALSE           reduce using rule 116 (conector -> OR .)


state 50

    (40) asignacion -> VAL ID . tipoAsignacion
    (43) tipoAsignacion -> . declaracion
    (44) tipoAsignacion -> . inicializacion
    (45) tipoAsignacion -> . declaracion inicializacion
    (46) declaracion -> . DOSPUNTOS tipoDato
    (47) inicializacion -> . IGUAL valor

    DOSPUNTOS       shift and go to state 121
    IGUAL           shift and go to state 53

    tipoAsignacion                 shift and go to state 118
    declaracion                    shift and go to state 119
    inicializacion                 shift and go to state 120

state 51

    (42) asignacion -> ID inicializacion .

    PUNTOCOMA       reduce using rule 42 (asignacion -> ID inicializacion .)
    VAL             reduce using rule 42 (asignacion -> ID inicializacion .)
    VAR             reduce using rule 42 (asignacion -> ID inicializacion .)
    ID              reduce using rule 42 (asignacion -> ID inicializacion .)
    ENTEROEXPRESION reduce using rule 42 (asignacion -> ID inicializacion .)
    NEGACION        reduce using rule 42 (asignacion -> ID inicializacion .)
    APAR            reduce using rule 42 (asignacion -> ID inicializacion .)
    TRUE            reduce using rule 42 (asignacion -> ID inicializacion .)
    FALSE           reduce using rule 42 (asignacion -> ID inicializacion .)
    COMDOBLE        reduce using rule 42 (asignacion -> ID inicializacion .)
    LISTOF          reduce using rule 42 (asignacion -> ID inicializacion .)
    SETOF           reduce using rule 42 (asignacion -> ID inicializacion .)
    PAIR            reduce using rule 42 (asignacion -> ID inicializacion .)
    TRIPLE          reduce using rule 42 (asignacion -> ID inicializacion .)
    IF              reduce using rule 42 (asignacion -> ID inicializacion .)
    FOR             reduce using rule 42 (asignacion -> ID inicializacion .)
    WHILE           reduce using rule 42 (asignacion -> ID inicializacion .)
    PRINT           reduce using rule 42 (asignacion -> ID inicializacion .)
    PRINTLN         reduce using rule 42 (asignacion -> ID inicializacion .)
    $end            reduce using rule 42 (asignacion -> ID inicializacion .)
    ELSE            reduce using rule 42 (asignacion -> ID inicializacion .)
    CLLAVE          reduce using rule 42 (asignacion -> ID inicializacion .)


state 52

    (27) funcion -> ID PUNTO . CONTAINS APAR factorEspecial CPAR
    (28) funcion -> ID PUNTO . CONTAINS APAR ID CPAR
    (29) funcion -> ID PUNTO . SIZE
    (30) funcion -> ID PUNTO . GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> ID PUNTO . SET APAR factorEspecial CPAR
    (32) funcion -> ID PUNTO . ISEMPTY APAR CPAR
    (33) funcion -> ID PUNTO . TOLIST APAR CPAR
    (34) funcion -> ID PUNTO . TOSTRING APAR CPAR
    (35) funcion -> ID PUNTO . SLICE APAR contentSlice CPAR
    (38) funcion -> ID PUNTO . SLICE APAR error CPAR
    (39) funcion -> ID PUNTO . INDEXOF APAR factorEspecial CPAR

    CONTAINS        shift and go to state 122
    SIZE            shift and go to state 123
    GET             shift and go to state 124
    SET             shift and go to state 125
    ISEMPTY         shift and go to state 126
    TOLIST          shift and go to state 127
    TOSTRING        shift and go to state 128
    SLICE           shift and go to state 129
    INDEXOF         shift and go to state 130


state 53

    (47) inicializacion -> IGUAL . valor
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    ENTEROEXPRESION shift and go to state 132
    ID              shift and go to state 135
    NEGACION        shift and go to state 137
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    APAR            shift and go to state 138

    valor                          shift and go to state 131
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 133
    CADENAEXPRESION                shift and go to state 134
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 136
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 54

    (41) asignacion -> VAR ID . tipoAsignacion
    (43) tipoAsignacion -> . declaracion
    (44) tipoAsignacion -> . inicializacion
    (45) tipoAsignacion -> . declaracion inicializacion
    (46) declaracion -> . DOSPUNTOS tipoDato
    (47) inicializacion -> . IGUAL valor

    DOSPUNTOS       shift and go to state 121
    IGUAL           shift and go to state 53

    tipoAsignacion                 shift and go to state 139
    declaracion                    shift and go to state 119
    inicializacion                 shift and go to state 120

state 55

    (70) flotante -> ENTEROEXPRESION F .

    PUNTOCOMA       reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    VAL             reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    VAR             reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    ID              reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    ENTEROEXPRESION reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    NEGACION        reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    APAR            reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    TRUE            reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    FALSE           reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    COMDOBLE        reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    LISTOF          reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    SETOF           reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    PAIR            reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    TRIPLE          reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    IF              reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    FOR             reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    WHILE           reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    PRINT           reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    PRINTLN         reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    $end            reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    SUMA            reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    RESTA           reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    MULT            reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    DIVISION        reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    MODULO          reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    CPAR            reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    ELSE            reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    CLLAVE          reduce using rule 70 (flotante -> ENTEROEXPRESION F .)
    COMA            reduce using rule 70 (flotante -> ENTEROEXPRESION F .)


state 56

    (71) flotante -> ENTEROEXPRESION PUNTO . ENTEROEXPRESION F

    ENTEROEXPRESION shift and go to state 140


state 57

    (72) flotante -> ENTEROEXPRESION error . F

    F               shift and go to state 141


state 58

    (26) funcion -> CADENAEXPRESION PUNTO . HASHCODE APAR CPAR
    (22) funcionCompare -> CADENAEXPRESION PUNTO . COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> CADENAEXPRESION PUNTO . COMPARETO APAR error CPAR
    (24) funcionGet -> CADENAEXPRESION PUNTO . GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> CADENAEXPRESION PUNTO . GET APAR error CPAR

    HASHCODE        shift and go to state 142
    COMPARETO       shift and go to state 143
    GET             shift and go to state 144


state 59

    (83) expresion -> expresion SUMA . termino
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR

    ENTEROEXPRESION shift and go to state 146
    ID              shift and go to state 148
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    termino                        shift and go to state 145
    factor                         shift and go to state 44
    flotante                       shift and go to state 79
    CADENAEXPRESION                shift and go to state 147
    list                           shift and go to state 80
    set                            shift and go to state 81

state 60

    (84) expresion -> expresion RESTA . termino
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR

    ENTEROEXPRESION shift and go to state 146
    ID              shift and go to state 148
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    termino                        shift and go to state 149
    factor                         shift and go to state 44
    flotante                       shift and go to state 79
    CADENAEXPRESION                shift and go to state 147
    list                           shift and go to state 80
    set                            shift and go to state 81

state 61

    (85) expresion -> expresion DIVISION . termino
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR

    ENTEROEXPRESION shift and go to state 146
    ID              shift and go to state 148
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    termino                        shift and go to state 150
    factor                         shift and go to state 44
    flotante                       shift and go to state 79
    CADENAEXPRESION                shift and go to state 147
    list                           shift and go to state 80
    set                            shift and go to state 81

state 62

    (86) expresion -> expresion MULT . termino
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR

    ENTEROEXPRESION shift and go to state 146
    ID              shift and go to state 148
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    termino                        shift and go to state 151
    factor                         shift and go to state 44
    flotante                       shift and go to state 79
    CADENAEXPRESION                shift and go to state 147
    list                           shift and go to state 80
    set                            shift and go to state 81

state 63

    (87) expresion -> expresion MODULO . termino
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR

    ENTEROEXPRESION shift and go to state 146
    ID              shift and go to state 148
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    termino                        shift and go to state 152
    factor                         shift and go to state 44
    flotante                       shift and go to state 79
    CADENAEXPRESION                shift and go to state 147
    list                           shift and go to state 80
    set                            shift and go to state 81

state 64

    (129) condicion -> NEGACION . condicion
    (122) compmiembro -> NEGACION . compmiembro
    (126) compsolo -> NEGACION . compsolo
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR

    NEGACION        shift and go to state 64
    APAR            shift and go to state 69
    ID              shift and go to state 117
    ENTEROEXPRESION shift and go to state 71
    COMDOBLE        shift and go to state 33
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    condicion                      shift and go to state 66
    compmiembro                    shift and go to state 67
    compsolo                       shift and go to state 68
    CADENAEXPRESION                shift and go to state 70
    funcion                        shift and go to state 72
    expresionBooleano              shift and go to state 73
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24

state 65

    (67) valor -> NEGACION ID .
    (117) compmiembro -> ID .
    (123) compsolo -> ID .
    (27) funcion -> ID . PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> ID . PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> ID . PUNTO SIZE
    (30) funcion -> ID . PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> ID . PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> ID . PUNTO ISEMPTY APAR CPAR
    (33) funcion -> ID . PUNTO TOLIST APAR CPAR
    (34) funcion -> ID . PUNTO TOSTRING APAR CPAR
    (35) funcion -> ID . PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> ID . PUNTO SLICE APAR error CPAR
    (39) funcion -> ID . PUNTO INDEXOF APAR factorEspecial CPAR

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for VAL resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for VAR resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for ID resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for NEGACION resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for APAR resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for LISTOF resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for SETOF resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for PAIR resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for IF resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for FOR resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for $end resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 67 (valor -> NEGACION ID .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 67 (valor -> NEGACION ID .)
    PUNTOCOMA       reduce using rule 67 (valor -> NEGACION ID .)
    VAL             reduce using rule 67 (valor -> NEGACION ID .)
    VAR             reduce using rule 67 (valor -> NEGACION ID .)
    ID              reduce using rule 67 (valor -> NEGACION ID .)
    ENTEROEXPRESION reduce using rule 67 (valor -> NEGACION ID .)
    NEGACION        reduce using rule 67 (valor -> NEGACION ID .)
    APAR            reduce using rule 67 (valor -> NEGACION ID .)
    TRUE            reduce using rule 67 (valor -> NEGACION ID .)
    FALSE           reduce using rule 67 (valor -> NEGACION ID .)
    COMDOBLE        reduce using rule 67 (valor -> NEGACION ID .)
    LISTOF          reduce using rule 67 (valor -> NEGACION ID .)
    SETOF           reduce using rule 67 (valor -> NEGACION ID .)
    PAIR            reduce using rule 67 (valor -> NEGACION ID .)
    TRIPLE          reduce using rule 67 (valor -> NEGACION ID .)
    IF              reduce using rule 67 (valor -> NEGACION ID .)
    FOR             reduce using rule 67 (valor -> NEGACION ID .)
    WHILE           reduce using rule 67 (valor -> NEGACION ID .)
    PRINT           reduce using rule 67 (valor -> NEGACION ID .)
    PRINTLN         reduce using rule 67 (valor -> NEGACION ID .)
    $end            reduce using rule 67 (valor -> NEGACION ID .)
    ELSE            reduce using rule 67 (valor -> NEGACION ID .)
    CLLAVE          reduce using rule 67 (valor -> NEGACION ID .)
    IGUALIGUAL      reduce using rule 117 (compmiembro -> ID .)
    NOIGUAL         reduce using rule 117 (compmiembro -> ID .)
    MAYOR           reduce using rule 117 (compmiembro -> ID .)
    MENOR           reduce using rule 117 (compmiembro -> ID .)
    MAYORIGUAL      reduce using rule 117 (compmiembro -> ID .)
    MENORIGUAL      reduce using rule 117 (compmiembro -> ID .)
    AND             reduce using rule 123 (compsolo -> ID .)
    OR              reduce using rule 123 (compsolo -> ID .)
    PUNTO           shift and go to state 52

  ! PUNTOCOMA       [ reduce using rule 123 (compsolo -> ID .) ]
  ! VAL             [ reduce using rule 123 (compsolo -> ID .) ]
  ! VAR             [ reduce using rule 123 (compsolo -> ID .) ]
  ! ID              [ reduce using rule 123 (compsolo -> ID .) ]
  ! ENTEROEXPRESION [ reduce using rule 123 (compsolo -> ID .) ]
  ! NEGACION        [ reduce using rule 123 (compsolo -> ID .) ]
  ! APAR            [ reduce using rule 123 (compsolo -> ID .) ]
  ! TRUE            [ reduce using rule 123 (compsolo -> ID .) ]
  ! FALSE           [ reduce using rule 123 (compsolo -> ID .) ]
  ! COMDOBLE        [ reduce using rule 123 (compsolo -> ID .) ]
  ! LISTOF          [ reduce using rule 123 (compsolo -> ID .) ]
  ! SETOF           [ reduce using rule 123 (compsolo -> ID .) ]
  ! PAIR            [ reduce using rule 123 (compsolo -> ID .) ]
  ! TRIPLE          [ reduce using rule 123 (compsolo -> ID .) ]
  ! IF              [ reduce using rule 123 (compsolo -> ID .) ]
  ! FOR             [ reduce using rule 123 (compsolo -> ID .) ]
  ! WHILE           [ reduce using rule 123 (compsolo -> ID .) ]
  ! PRINT           [ reduce using rule 123 (compsolo -> ID .) ]
  ! PRINTLN         [ reduce using rule 123 (compsolo -> ID .) ]
  ! $end            [ reduce using rule 123 (compsolo -> ID .) ]
  ! ELSE            [ reduce using rule 123 (compsolo -> ID .) ]
  ! CLLAVE          [ reduce using rule 123 (compsolo -> ID .) ]


state 66

    (129) condicion -> NEGACION condicion .
    (130) condicion -> condicion . conector condicion
    (115) conector -> . AND
    (116) conector -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOCOMA       reduce using rule 129 (condicion -> NEGACION condicion .)
    VAL             reduce using rule 129 (condicion -> NEGACION condicion .)
    VAR             reduce using rule 129 (condicion -> NEGACION condicion .)
    ID              reduce using rule 129 (condicion -> NEGACION condicion .)
    ENTEROEXPRESION reduce using rule 129 (condicion -> NEGACION condicion .)
    NEGACION        reduce using rule 129 (condicion -> NEGACION condicion .)
    APAR            reduce using rule 129 (condicion -> NEGACION condicion .)
    TRUE            reduce using rule 129 (condicion -> NEGACION condicion .)
    FALSE           reduce using rule 129 (condicion -> NEGACION condicion .)
    COMDOBLE        reduce using rule 129 (condicion -> NEGACION condicion .)
    LISTOF          reduce using rule 129 (condicion -> NEGACION condicion .)
    SETOF           reduce using rule 129 (condicion -> NEGACION condicion .)
    PAIR            reduce using rule 129 (condicion -> NEGACION condicion .)
    TRIPLE          reduce using rule 129 (condicion -> NEGACION condicion .)
    IF              reduce using rule 129 (condicion -> NEGACION condicion .)
    FOR             reduce using rule 129 (condicion -> NEGACION condicion .)
    WHILE           reduce using rule 129 (condicion -> NEGACION condicion .)
    PRINT           reduce using rule 129 (condicion -> NEGACION condicion .)
    PRINTLN         reduce using rule 129 (condicion -> NEGACION condicion .)
    $end            reduce using rule 129 (condicion -> NEGACION condicion .)
    ELSE            reduce using rule 129 (condicion -> NEGACION condicion .)
    CLLAVE          reduce using rule 129 (condicion -> NEGACION condicion .)
    CPAR            reduce using rule 129 (condicion -> NEGACION condicion .)
    AND             shift and go to state 48
    OR              shift and go to state 49

  ! AND             [ reduce using rule 129 (condicion -> NEGACION condicion .) ]
  ! OR              [ reduce using rule 129 (condicion -> NEGACION condicion .) ]

    conector                       shift and go to state 47

state 67

    (122) compmiembro -> NEGACION compmiembro .
    (127) condicion -> compmiembro . comparador compmiembro
    (109) comparador -> . IGUALIGUAL
    (110) comparador -> . NOIGUAL
    (111) comparador -> . MAYOR
    (112) comparador -> . MENOR
    (113) comparador -> . MAYORIGUAL
    (114) comparador -> . MENORIGUAL

  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
    IGUALIGUAL      shift and go to state 84
    NOIGUAL         shift and go to state 85
    MAYOR           shift and go to state 86
    MENOR           shift and go to state 87
    MAYORIGUAL      shift and go to state 88
    MENORIGUAL      shift and go to state 89

  ! IGUALIGUAL      [ reduce using rule 122 (compmiembro -> NEGACION compmiembro .) ]
  ! NOIGUAL         [ reduce using rule 122 (compmiembro -> NEGACION compmiembro .) ]
  ! MAYOR           [ reduce using rule 122 (compmiembro -> NEGACION compmiembro .) ]
  ! MENOR           [ reduce using rule 122 (compmiembro -> NEGACION compmiembro .) ]
  ! MAYORIGUAL      [ reduce using rule 122 (compmiembro -> NEGACION compmiembro .) ]
  ! MENORIGUAL      [ reduce using rule 122 (compmiembro -> NEGACION compmiembro .) ]

    comparador                     shift and go to state 83

state 68

    (126) compsolo -> NEGACION compsolo .
    (128) condicion -> compsolo .

  ! reduce/reduce conflict for AND resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for OR resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for VAL resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for VAR resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for ID resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for NEGACION resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for APAR resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for TRUE resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for FALSE resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for LISTOF resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for SETOF resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for PAIR resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for IF resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for FOR resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for WHILE resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for PRINT resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for $end resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for ELSE resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 126 (compsolo -> NEGACION compsolo .)
  ! reduce/reduce conflict for CPAR resolved using rule 126 (compsolo -> NEGACION compsolo .)
    AND             reduce using rule 126 (compsolo -> NEGACION compsolo .)
    OR              reduce using rule 126 (compsolo -> NEGACION compsolo .)
    PUNTOCOMA       reduce using rule 126 (compsolo -> NEGACION compsolo .)
    VAL             reduce using rule 126 (compsolo -> NEGACION compsolo .)
    VAR             reduce using rule 126 (compsolo -> NEGACION compsolo .)
    ID              reduce using rule 126 (compsolo -> NEGACION compsolo .)
    ENTEROEXPRESION reduce using rule 126 (compsolo -> NEGACION compsolo .)
    NEGACION        reduce using rule 126 (compsolo -> NEGACION compsolo .)
    APAR            reduce using rule 126 (compsolo -> NEGACION compsolo .)
    TRUE            reduce using rule 126 (compsolo -> NEGACION compsolo .)
    FALSE           reduce using rule 126 (compsolo -> NEGACION compsolo .)
    COMDOBLE        reduce using rule 126 (compsolo -> NEGACION compsolo .)
    LISTOF          reduce using rule 126 (compsolo -> NEGACION compsolo .)
    SETOF           reduce using rule 126 (compsolo -> NEGACION compsolo .)
    PAIR            reduce using rule 126 (compsolo -> NEGACION compsolo .)
    TRIPLE          reduce using rule 126 (compsolo -> NEGACION compsolo .)
    IF              reduce using rule 126 (compsolo -> NEGACION compsolo .)
    FOR             reduce using rule 126 (compsolo -> NEGACION compsolo .)
    WHILE           reduce using rule 126 (compsolo -> NEGACION compsolo .)
    PRINT           reduce using rule 126 (compsolo -> NEGACION compsolo .)
    PRINTLN         reduce using rule 126 (compsolo -> NEGACION compsolo .)
    $end            reduce using rule 126 (compsolo -> NEGACION compsolo .)
    ELSE            reduce using rule 126 (compsolo -> NEGACION compsolo .)
    CLLAVE          reduce using rule 126 (compsolo -> NEGACION compsolo .)
    CPAR            reduce using rule 126 (compsolo -> NEGACION compsolo .)

  ! AND             [ reduce using rule 128 (condicion -> compsolo .) ]
  ! OR              [ reduce using rule 128 (condicion -> compsolo .) ]
  ! PUNTOCOMA       [ reduce using rule 128 (condicion -> compsolo .) ]
  ! VAL             [ reduce using rule 128 (condicion -> compsolo .) ]
  ! VAR             [ reduce using rule 128 (condicion -> compsolo .) ]
  ! ID              [ reduce using rule 128 (condicion -> compsolo .) ]
  ! ENTEROEXPRESION [ reduce using rule 128 (condicion -> compsolo .) ]
  ! NEGACION        [ reduce using rule 128 (condicion -> compsolo .) ]
  ! APAR            [ reduce using rule 128 (condicion -> compsolo .) ]
  ! TRUE            [ reduce using rule 128 (condicion -> compsolo .) ]
  ! FALSE           [ reduce using rule 128 (condicion -> compsolo .) ]
  ! COMDOBLE        [ reduce using rule 128 (condicion -> compsolo .) ]
  ! LISTOF          [ reduce using rule 128 (condicion -> compsolo .) ]
  ! SETOF           [ reduce using rule 128 (condicion -> compsolo .) ]
  ! PAIR            [ reduce using rule 128 (condicion -> compsolo .) ]
  ! TRIPLE          [ reduce using rule 128 (condicion -> compsolo .) ]
  ! IF              [ reduce using rule 128 (condicion -> compsolo .) ]
  ! FOR             [ reduce using rule 128 (condicion -> compsolo .) ]
  ! WHILE           [ reduce using rule 128 (condicion -> compsolo .) ]
  ! PRINT           [ reduce using rule 128 (condicion -> compsolo .) ]
  ! PRINTLN         [ reduce using rule 128 (condicion -> compsolo .) ]
  ! $end            [ reduce using rule 128 (condicion -> compsolo .) ]
  ! ELSE            [ reduce using rule 128 (condicion -> compsolo .) ]
  ! CLLAVE          [ reduce using rule 128 (condicion -> compsolo .) ]
  ! CPAR            [ reduce using rule 128 (condicion -> compsolo .) ]


state 69

    (131) condicion -> APAR . condicion CPAR
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR

    NEGACION        shift and go to state 64
    APAR            shift and go to state 69
    ID              shift and go to state 117
    ENTEROEXPRESION shift and go to state 71
    COMDOBLE        shift and go to state 33
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    condicion                      shift and go to state 74
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    CADENAEXPRESION                shift and go to state 70
    funcion                        shift and go to state 72
    expresionBooleano              shift and go to state 73
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24

state 70

    (118) compmiembro -> CADENAEXPRESION .
    (26) funcion -> CADENAEXPRESION . PUNTO HASHCODE APAR CPAR
    (22) funcionCompare -> CADENAEXPRESION . PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> CADENAEXPRESION . PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> CADENAEXPRESION . PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> CADENAEXPRESION . PUNTO GET APAR error CPAR

    IGUALIGUAL      reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    NOIGUAL         reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    MAYOR           reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    MENOR           reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    MAYORIGUAL      reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    MENORIGUAL      reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    AND             reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    OR              reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    PUNTOCOMA       reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    VAL             reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    VAR             reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    ID              reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    ENTEROEXPRESION reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    NEGACION        reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    APAR            reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    TRUE            reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    FALSE           reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    COMDOBLE        reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    LISTOF          reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    SETOF           reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    PAIR            reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    TRIPLE          reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    IF              reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    FOR             reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    WHILE           reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    PRINT           reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    PRINTLN         reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    $end            reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    ELSE            reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    CLLAVE          reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    CPAR            reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    PUNTO           shift and go to state 58


state 71

    (119) compmiembro -> ENTEROEXPRESION .

    IGUALIGUAL      reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    NOIGUAL         reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    MAYOR           reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    MENOR           reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    MAYORIGUAL      reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    MENORIGUAL      reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    AND             reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    OR              reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    PUNTOCOMA       reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    VAL             reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    VAR             reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    ID              reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    ENTEROEXPRESION reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    NEGACION        reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    APAR            reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    TRUE            reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    FALSE           reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    COMDOBLE        reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    LISTOF          reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    SETOF           reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    PAIR            reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    TRIPLE          reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    IF              reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    FOR             reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    WHILE           reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    PRINT           reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    PRINTLN         reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    $end            reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    ELSE            reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    CPAR            reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)


state 72

    (120) compmiembro -> funcion .
    (125) compsolo -> funcion .

    IGUALIGUAL      reduce using rule 120 (compmiembro -> funcion .)
    NOIGUAL         reduce using rule 120 (compmiembro -> funcion .)
    MAYOR           reduce using rule 120 (compmiembro -> funcion .)
    MENOR           reduce using rule 120 (compmiembro -> funcion .)
    MAYORIGUAL      reduce using rule 120 (compmiembro -> funcion .)
    MENORIGUAL      reduce using rule 120 (compmiembro -> funcion .)
    AND             reduce using rule 125 (compsolo -> funcion .)
    OR              reduce using rule 125 (compsolo -> funcion .)
    PUNTOCOMA       reduce using rule 125 (compsolo -> funcion .)
    VAL             reduce using rule 125 (compsolo -> funcion .)
    VAR             reduce using rule 125 (compsolo -> funcion .)
    ID              reduce using rule 125 (compsolo -> funcion .)
    ENTEROEXPRESION reduce using rule 125 (compsolo -> funcion .)
    NEGACION        reduce using rule 125 (compsolo -> funcion .)
    APAR            reduce using rule 125 (compsolo -> funcion .)
    TRUE            reduce using rule 125 (compsolo -> funcion .)
    FALSE           reduce using rule 125 (compsolo -> funcion .)
    COMDOBLE        reduce using rule 125 (compsolo -> funcion .)
    LISTOF          reduce using rule 125 (compsolo -> funcion .)
    SETOF           reduce using rule 125 (compsolo -> funcion .)
    PAIR            reduce using rule 125 (compsolo -> funcion .)
    TRIPLE          reduce using rule 125 (compsolo -> funcion .)
    IF              reduce using rule 125 (compsolo -> funcion .)
    FOR             reduce using rule 125 (compsolo -> funcion .)
    WHILE           reduce using rule 125 (compsolo -> funcion .)
    PRINT           reduce using rule 125 (compsolo -> funcion .)
    PRINTLN         reduce using rule 125 (compsolo -> funcion .)
    $end            reduce using rule 125 (compsolo -> funcion .)
    ELSE            reduce using rule 125 (compsolo -> funcion .)
    CLLAVE          reduce using rule 125 (compsolo -> funcion .)
    CPAR            reduce using rule 125 (compsolo -> funcion .)


state 73

    (121) compmiembro -> expresionBooleano .
    (124) compsolo -> expresionBooleano .

    IGUALIGUAL      reduce using rule 121 (compmiembro -> expresionBooleano .)
    NOIGUAL         reduce using rule 121 (compmiembro -> expresionBooleano .)
    MAYOR           reduce using rule 121 (compmiembro -> expresionBooleano .)
    MENOR           reduce using rule 121 (compmiembro -> expresionBooleano .)
    MAYORIGUAL      reduce using rule 121 (compmiembro -> expresionBooleano .)
    MENORIGUAL      reduce using rule 121 (compmiembro -> expresionBooleano .)
    AND             reduce using rule 124 (compsolo -> expresionBooleano .)
    OR              reduce using rule 124 (compsolo -> expresionBooleano .)
    PUNTOCOMA       reduce using rule 124 (compsolo -> expresionBooleano .)
    VAL             reduce using rule 124 (compsolo -> expresionBooleano .)
    VAR             reduce using rule 124 (compsolo -> expresionBooleano .)
    ID              reduce using rule 124 (compsolo -> expresionBooleano .)
    ENTEROEXPRESION reduce using rule 124 (compsolo -> expresionBooleano .)
    NEGACION        reduce using rule 124 (compsolo -> expresionBooleano .)
    APAR            reduce using rule 124 (compsolo -> expresionBooleano .)
    TRUE            reduce using rule 124 (compsolo -> expresionBooleano .)
    FALSE           reduce using rule 124 (compsolo -> expresionBooleano .)
    COMDOBLE        reduce using rule 124 (compsolo -> expresionBooleano .)
    LISTOF          reduce using rule 124 (compsolo -> expresionBooleano .)
    SETOF           reduce using rule 124 (compsolo -> expresionBooleano .)
    PAIR            reduce using rule 124 (compsolo -> expresionBooleano .)
    TRIPLE          reduce using rule 124 (compsolo -> expresionBooleano .)
    IF              reduce using rule 124 (compsolo -> expresionBooleano .)
    FOR             reduce using rule 124 (compsolo -> expresionBooleano .)
    WHILE           reduce using rule 124 (compsolo -> expresionBooleano .)
    PRINT           reduce using rule 124 (compsolo -> expresionBooleano .)
    PRINTLN         reduce using rule 124 (compsolo -> expresionBooleano .)
    $end            reduce using rule 124 (compsolo -> expresionBooleano .)
    ELSE            reduce using rule 124 (compsolo -> expresionBooleano .)
    CLLAVE          reduce using rule 124 (compsolo -> expresionBooleano .)
    CPAR            reduce using rule 124 (compsolo -> expresionBooleano .)


state 74

    (131) condicion -> APAR condicion . CPAR
    (130) condicion -> condicion . conector condicion
    (115) conector -> . AND
    (116) conector -> . OR

    CPAR            shift and go to state 153
    AND             shift and go to state 48
    OR              shift and go to state 49

    conector                       shift and go to state 47

state 75

    (108) factor -> APAR expresion . CPAR
    (83) expresion -> expresion . SUMA termino
    (84) expresion -> expresion . RESTA termino
    (85) expresion -> expresion . DIVISION termino
    (86) expresion -> expresion . MULT termino
    (87) expresion -> expresion . MODULO termino

    CPAR            shift and go to state 154
    SUMA            shift and go to state 59
    RESTA           shift and go to state 60
    DIVISION        shift and go to state 61
    MULT            shift and go to state 62
    MODULO          shift and go to state 63


state 76

    (117) compmiembro -> ID .
    (123) compsolo -> ID .
    (100) termino -> ID .
    (27) funcion -> ID . PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> ID . PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> ID . PUNTO SIZE
    (30) funcion -> ID . PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> ID . PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> ID . PUNTO ISEMPTY APAR CPAR
    (33) funcion -> ID . PUNTO TOLIST APAR CPAR
    (34) funcion -> ID . PUNTO TOSTRING APAR CPAR
    (35) funcion -> ID . PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> ID . PUNTO SLICE APAR error CPAR
    (39) funcion -> ID . PUNTO INDEXOF APAR factorEspecial CPAR
    (103) factor -> ID .

  ! reduce/reduce conflict for CPAR resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for SUMA resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for RESTA resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for MULT resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for DIVISION resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for CPAR resolved using rule 100 (termino -> ID .)
    IGUALIGUAL      reduce using rule 117 (compmiembro -> ID .)
    NOIGUAL         reduce using rule 117 (compmiembro -> ID .)
    MAYOR           reduce using rule 117 (compmiembro -> ID .)
    MENOR           reduce using rule 117 (compmiembro -> ID .)
    MAYORIGUAL      reduce using rule 117 (compmiembro -> ID .)
    MENORIGUAL      reduce using rule 117 (compmiembro -> ID .)
    AND             reduce using rule 123 (compsolo -> ID .)
    OR              reduce using rule 123 (compsolo -> ID .)
    SUMA            reduce using rule 100 (termino -> ID .)
    RESTA           reduce using rule 100 (termino -> ID .)
    MULT            reduce using rule 100 (termino -> ID .)
    DIVISION        reduce using rule 100 (termino -> ID .)
    MODULO          reduce using rule 100 (termino -> ID .)
    CPAR            reduce using rule 100 (termino -> ID .)
    PUNTO           shift and go to state 52

  ! CPAR            [ reduce using rule 123 (compsolo -> ID .) ]
  ! SUMA            [ reduce using rule 103 (factor -> ID .) ]
  ! RESTA           [ reduce using rule 103 (factor -> ID .) ]
  ! MULT            [ reduce using rule 103 (factor -> ID .) ]
  ! DIVISION        [ reduce using rule 103 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 103 (factor -> ID .) ]
  ! CPAR            [ reduce using rule 103 (factor -> ID .) ]


state 77

    (118) compmiembro -> CADENAEXPRESION .
    (97) termino -> CADENAEXPRESION .
    (26) funcion -> CADENAEXPRESION . PUNTO HASHCODE APAR CPAR
    (22) funcionCompare -> CADENAEXPRESION . PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> CADENAEXPRESION . PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> CADENAEXPRESION . PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> CADENAEXPRESION . PUNTO GET APAR error CPAR

    IGUALIGUAL      reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    NOIGUAL         reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    MAYOR           reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    MENOR           reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    MAYORIGUAL      reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    MENORIGUAL      reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    SUMA            reduce using rule 97 (termino -> CADENAEXPRESION .)
    RESTA           reduce using rule 97 (termino -> CADENAEXPRESION .)
    MULT            reduce using rule 97 (termino -> CADENAEXPRESION .)
    DIVISION        reduce using rule 97 (termino -> CADENAEXPRESION .)
    MODULO          reduce using rule 97 (termino -> CADENAEXPRESION .)
    CPAR            reduce using rule 97 (termino -> CADENAEXPRESION .)
    PUNTO           shift and go to state 58


state 78

    (119) compmiembro -> ENTEROEXPRESION .
    (95) termino -> ENTEROEXPRESION .
    (101) factor -> ENTEROEXPRESION .
    (70) flotante -> ENTEROEXPRESION . F
    (71) flotante -> ENTEROEXPRESION . PUNTO ENTEROEXPRESION F
    (72) flotante -> ENTEROEXPRESION . error F

  ! reduce/reduce conflict for SUMA resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for RESTA resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MULT resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for DIVISION resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MODULO resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 95 (termino -> ENTEROEXPRESION .)
    IGUALIGUAL      reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    NOIGUAL         reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    MAYOR           reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    MENOR           reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    MAYORIGUAL      reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    MENORIGUAL      reduce using rule 119 (compmiembro -> ENTEROEXPRESION .)
    SUMA            reduce using rule 95 (termino -> ENTEROEXPRESION .)
    RESTA           reduce using rule 95 (termino -> ENTEROEXPRESION .)
    MULT            reduce using rule 95 (termino -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 95 (termino -> ENTEROEXPRESION .)
    MODULO          reduce using rule 95 (termino -> ENTEROEXPRESION .)
    CPAR            reduce using rule 95 (termino -> ENTEROEXPRESION .)
    F               shift and go to state 55
    PUNTO           shift and go to state 56
    error           shift and go to state 57

  ! SUMA            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! RESTA           [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! MULT            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! DIVISION        [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! MODULO          [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! CPAR            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]


state 79

    (96) termino -> flotante .
    (102) factor -> flotante .

  ! reduce/reduce conflict for SUMA resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for RESTA resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for MULT resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for DIVISION resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for MODULO resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for CPAR resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for VAL resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for VAR resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for ID resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for NEGACION resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for APAR resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for TRUE resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for FALSE resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for LISTOF resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for SETOF resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for PAIR resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for IF resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for FOR resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for WHILE resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for PRINT resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for $end resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for ELSE resolved using rule 96 (termino -> flotante .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 96 (termino -> flotante .)
    SUMA            reduce using rule 96 (termino -> flotante .)
    RESTA           reduce using rule 96 (termino -> flotante .)
    MULT            reduce using rule 96 (termino -> flotante .)
    DIVISION        reduce using rule 96 (termino -> flotante .)
    MODULO          reduce using rule 96 (termino -> flotante .)
    CPAR            reduce using rule 96 (termino -> flotante .)
    PUNTOCOMA       reduce using rule 96 (termino -> flotante .)
    VAL             reduce using rule 96 (termino -> flotante .)
    VAR             reduce using rule 96 (termino -> flotante .)
    ID              reduce using rule 96 (termino -> flotante .)
    ENTEROEXPRESION reduce using rule 96 (termino -> flotante .)
    NEGACION        reduce using rule 96 (termino -> flotante .)
    APAR            reduce using rule 96 (termino -> flotante .)
    TRUE            reduce using rule 96 (termino -> flotante .)
    FALSE           reduce using rule 96 (termino -> flotante .)
    COMDOBLE        reduce using rule 96 (termino -> flotante .)
    LISTOF          reduce using rule 96 (termino -> flotante .)
    SETOF           reduce using rule 96 (termino -> flotante .)
    PAIR            reduce using rule 96 (termino -> flotante .)
    TRIPLE          reduce using rule 96 (termino -> flotante .)
    IF              reduce using rule 96 (termino -> flotante .)
    FOR             reduce using rule 96 (termino -> flotante .)
    WHILE           reduce using rule 96 (termino -> flotante .)
    PRINT           reduce using rule 96 (termino -> flotante .)
    PRINTLN         reduce using rule 96 (termino -> flotante .)
    $end            reduce using rule 96 (termino -> flotante .)
    ELSE            reduce using rule 96 (termino -> flotante .)
    CLLAVE          reduce using rule 96 (termino -> flotante .)

  ! SUMA            [ reduce using rule 102 (factor -> flotante .) ]
  ! RESTA           [ reduce using rule 102 (factor -> flotante .) ]
  ! MULT            [ reduce using rule 102 (factor -> flotante .) ]
  ! DIVISION        [ reduce using rule 102 (factor -> flotante .) ]
  ! MODULO          [ reduce using rule 102 (factor -> flotante .) ]
  ! CPAR            [ reduce using rule 102 (factor -> flotante .) ]
  ! PUNTOCOMA       [ reduce using rule 102 (factor -> flotante .) ]
  ! VAL             [ reduce using rule 102 (factor -> flotante .) ]
  ! VAR             [ reduce using rule 102 (factor -> flotante .) ]
  ! ID              [ reduce using rule 102 (factor -> flotante .) ]
  ! ENTEROEXPRESION [ reduce using rule 102 (factor -> flotante .) ]
  ! NEGACION        [ reduce using rule 102 (factor -> flotante .) ]
  ! APAR            [ reduce using rule 102 (factor -> flotante .) ]
  ! TRUE            [ reduce using rule 102 (factor -> flotante .) ]
  ! FALSE           [ reduce using rule 102 (factor -> flotante .) ]
  ! COMDOBLE        [ reduce using rule 102 (factor -> flotante .) ]
  ! LISTOF          [ reduce using rule 102 (factor -> flotante .) ]
  ! SETOF           [ reduce using rule 102 (factor -> flotante .) ]
  ! PAIR            [ reduce using rule 102 (factor -> flotante .) ]
  ! TRIPLE          [ reduce using rule 102 (factor -> flotante .) ]
  ! IF              [ reduce using rule 102 (factor -> flotante .) ]
  ! FOR             [ reduce using rule 102 (factor -> flotante .) ]
  ! WHILE           [ reduce using rule 102 (factor -> flotante .) ]
  ! PRINT           [ reduce using rule 102 (factor -> flotante .) ]
  ! PRINTLN         [ reduce using rule 102 (factor -> flotante .) ]
  ! $end            [ reduce using rule 102 (factor -> flotante .) ]
  ! ELSE            [ reduce using rule 102 (factor -> flotante .) ]
  ! CLLAVE          [ reduce using rule 102 (factor -> flotante .) ]


state 80

    (98) termino -> list .

    SUMA            reduce using rule 98 (termino -> list .)
    RESTA           reduce using rule 98 (termino -> list .)
    MULT            reduce using rule 98 (termino -> list .)
    DIVISION        reduce using rule 98 (termino -> list .)
    MODULO          reduce using rule 98 (termino -> list .)
    CPAR            reduce using rule 98 (termino -> list .)
    PUNTOCOMA       reduce using rule 98 (termino -> list .)
    VAL             reduce using rule 98 (termino -> list .)
    VAR             reduce using rule 98 (termino -> list .)
    ID              reduce using rule 98 (termino -> list .)
    ENTEROEXPRESION reduce using rule 98 (termino -> list .)
    NEGACION        reduce using rule 98 (termino -> list .)
    APAR            reduce using rule 98 (termino -> list .)
    TRUE            reduce using rule 98 (termino -> list .)
    FALSE           reduce using rule 98 (termino -> list .)
    COMDOBLE        reduce using rule 98 (termino -> list .)
    LISTOF          reduce using rule 98 (termino -> list .)
    SETOF           reduce using rule 98 (termino -> list .)
    PAIR            reduce using rule 98 (termino -> list .)
    TRIPLE          reduce using rule 98 (termino -> list .)
    IF              reduce using rule 98 (termino -> list .)
    FOR             reduce using rule 98 (termino -> list .)
    WHILE           reduce using rule 98 (termino -> list .)
    PRINT           reduce using rule 98 (termino -> list .)
    PRINTLN         reduce using rule 98 (termino -> list .)
    $end            reduce using rule 98 (termino -> list .)
    ELSE            reduce using rule 98 (termino -> list .)
    CLLAVE          reduce using rule 98 (termino -> list .)


state 81

    (99) termino -> set .

    SUMA            reduce using rule 99 (termino -> set .)
    RESTA           reduce using rule 99 (termino -> set .)
    MULT            reduce using rule 99 (termino -> set .)
    DIVISION        reduce using rule 99 (termino -> set .)
    MODULO          reduce using rule 99 (termino -> set .)
    CPAR            reduce using rule 99 (termino -> set .)
    PUNTOCOMA       reduce using rule 99 (termino -> set .)
    VAL             reduce using rule 99 (termino -> set .)
    VAR             reduce using rule 99 (termino -> set .)
    ID              reduce using rule 99 (termino -> set .)
    ENTEROEXPRESION reduce using rule 99 (termino -> set .)
    NEGACION        reduce using rule 99 (termino -> set .)
    APAR            reduce using rule 99 (termino -> set .)
    TRUE            reduce using rule 99 (termino -> set .)
    FALSE           reduce using rule 99 (termino -> set .)
    COMDOBLE        reduce using rule 99 (termino -> set .)
    LISTOF          reduce using rule 99 (termino -> set .)
    SETOF           reduce using rule 99 (termino -> set .)
    PAIR            reduce using rule 99 (termino -> set .)
    TRIPLE          reduce using rule 99 (termino -> set .)
    IF              reduce using rule 99 (termino -> set .)
    FOR             reduce using rule 99 (termino -> set .)
    WHILE           reduce using rule 99 (termino -> set .)
    PRINT           reduce using rule 99 (termino -> set .)
    PRINTLN         reduce using rule 99 (termino -> set .)
    $end            reduce using rule 99 (termino -> set .)
    ELSE            reduce using rule 99 (termino -> set .)
    CLLAVE          reduce using rule 99 (termino -> set .)


state 82

    (73) list -> LISTOF . APAR contenido CPAR
    (74) list -> LISTOF . APAR error CPAR
    (76) set -> LISTOF . APAR error CPAR

    APAR            shift and go to state 155


state 83

    (127) condicion -> compmiembro comparador . compmiembro
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR

    ID              shift and go to state 157
    ENTEROEXPRESION shift and go to state 71
    NEGACION        shift and go to state 160
    COMDOBLE        shift and go to state 33
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    compmiembro                    shift and go to state 156
    CADENAEXPRESION                shift and go to state 70
    funcion                        shift and go to state 158
    expresionBooleano              shift and go to state 159
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24

state 84

    (109) comparador -> IGUALIGUAL .

    ID              reduce using rule 109 (comparador -> IGUALIGUAL .)
    ENTEROEXPRESION reduce using rule 109 (comparador -> IGUALIGUAL .)
    NEGACION        reduce using rule 109 (comparador -> IGUALIGUAL .)
    COMDOBLE        reduce using rule 109 (comparador -> IGUALIGUAL .)
    TRUE            reduce using rule 109 (comparador -> IGUALIGUAL .)
    FALSE           reduce using rule 109 (comparador -> IGUALIGUAL .)
    SIGNODOLAR      reduce using rule 109 (comparador -> IGUALIGUAL .)
    PUNTO           reduce using rule 109 (comparador -> IGUALIGUAL .)
    PUNTOPUNTO      reduce using rule 109 (comparador -> IGUALIGUAL .)
    SYMBOL          reduce using rule 109 (comparador -> IGUALIGUAL .)
    COMA            reduce using rule 109 (comparador -> IGUALIGUAL .)
    PUNTOCOMA       reduce using rule 109 (comparador -> IGUALIGUAL .)
    DOSPUNTOS       reduce using rule 109 (comparador -> IGUALIGUAL .)
    IGUALIGUAL      reduce using rule 109 (comparador -> IGUALIGUAL .)
    NOIGUAL         reduce using rule 109 (comparador -> IGUALIGUAL .)
    MAYOR           reduce using rule 109 (comparador -> IGUALIGUAL .)
    MENOR           reduce using rule 109 (comparador -> IGUALIGUAL .)
    MAYORIGUAL      reduce using rule 109 (comparador -> IGUALIGUAL .)
    MENORIGUAL      reduce using rule 109 (comparador -> IGUALIGUAL .)


state 85

    (110) comparador -> NOIGUAL .

    ID              reduce using rule 110 (comparador -> NOIGUAL .)
    ENTEROEXPRESION reduce using rule 110 (comparador -> NOIGUAL .)
    NEGACION        reduce using rule 110 (comparador -> NOIGUAL .)
    COMDOBLE        reduce using rule 110 (comparador -> NOIGUAL .)
    TRUE            reduce using rule 110 (comparador -> NOIGUAL .)
    FALSE           reduce using rule 110 (comparador -> NOIGUAL .)
    SIGNODOLAR      reduce using rule 110 (comparador -> NOIGUAL .)
    PUNTO           reduce using rule 110 (comparador -> NOIGUAL .)
    PUNTOPUNTO      reduce using rule 110 (comparador -> NOIGUAL .)
    SYMBOL          reduce using rule 110 (comparador -> NOIGUAL .)
    COMA            reduce using rule 110 (comparador -> NOIGUAL .)
    PUNTOCOMA       reduce using rule 110 (comparador -> NOIGUAL .)
    DOSPUNTOS       reduce using rule 110 (comparador -> NOIGUAL .)
    IGUALIGUAL      reduce using rule 110 (comparador -> NOIGUAL .)
    NOIGUAL         reduce using rule 110 (comparador -> NOIGUAL .)
    MAYOR           reduce using rule 110 (comparador -> NOIGUAL .)
    MENOR           reduce using rule 110 (comparador -> NOIGUAL .)
    MAYORIGUAL      reduce using rule 110 (comparador -> NOIGUAL .)
    MENORIGUAL      reduce using rule 110 (comparador -> NOIGUAL .)


state 86

    (111) comparador -> MAYOR .

    ID              reduce using rule 111 (comparador -> MAYOR .)
    ENTEROEXPRESION reduce using rule 111 (comparador -> MAYOR .)
    NEGACION        reduce using rule 111 (comparador -> MAYOR .)
    COMDOBLE        reduce using rule 111 (comparador -> MAYOR .)
    TRUE            reduce using rule 111 (comparador -> MAYOR .)
    FALSE           reduce using rule 111 (comparador -> MAYOR .)
    SIGNODOLAR      reduce using rule 111 (comparador -> MAYOR .)
    PUNTO           reduce using rule 111 (comparador -> MAYOR .)
    PUNTOPUNTO      reduce using rule 111 (comparador -> MAYOR .)
    SYMBOL          reduce using rule 111 (comparador -> MAYOR .)
    COMA            reduce using rule 111 (comparador -> MAYOR .)
    PUNTOCOMA       reduce using rule 111 (comparador -> MAYOR .)
    DOSPUNTOS       reduce using rule 111 (comparador -> MAYOR .)
    IGUALIGUAL      reduce using rule 111 (comparador -> MAYOR .)
    NOIGUAL         reduce using rule 111 (comparador -> MAYOR .)
    MAYOR           reduce using rule 111 (comparador -> MAYOR .)
    MENOR           reduce using rule 111 (comparador -> MAYOR .)
    MAYORIGUAL      reduce using rule 111 (comparador -> MAYOR .)
    MENORIGUAL      reduce using rule 111 (comparador -> MAYOR .)


state 87

    (112) comparador -> MENOR .

    ID              reduce using rule 112 (comparador -> MENOR .)
    ENTEROEXPRESION reduce using rule 112 (comparador -> MENOR .)
    NEGACION        reduce using rule 112 (comparador -> MENOR .)
    COMDOBLE        reduce using rule 112 (comparador -> MENOR .)
    TRUE            reduce using rule 112 (comparador -> MENOR .)
    FALSE           reduce using rule 112 (comparador -> MENOR .)
    SIGNODOLAR      reduce using rule 112 (comparador -> MENOR .)
    PUNTO           reduce using rule 112 (comparador -> MENOR .)
    PUNTOPUNTO      reduce using rule 112 (comparador -> MENOR .)
    SYMBOL          reduce using rule 112 (comparador -> MENOR .)
    COMA            reduce using rule 112 (comparador -> MENOR .)
    PUNTOCOMA       reduce using rule 112 (comparador -> MENOR .)
    DOSPUNTOS       reduce using rule 112 (comparador -> MENOR .)
    IGUALIGUAL      reduce using rule 112 (comparador -> MENOR .)
    NOIGUAL         reduce using rule 112 (comparador -> MENOR .)
    MAYOR           reduce using rule 112 (comparador -> MENOR .)
    MENOR           reduce using rule 112 (comparador -> MENOR .)
    MAYORIGUAL      reduce using rule 112 (comparador -> MENOR .)
    MENORIGUAL      reduce using rule 112 (comparador -> MENOR .)


state 88

    (113) comparador -> MAYORIGUAL .

    ID              reduce using rule 113 (comparador -> MAYORIGUAL .)
    ENTEROEXPRESION reduce using rule 113 (comparador -> MAYORIGUAL .)
    NEGACION        reduce using rule 113 (comparador -> MAYORIGUAL .)
    COMDOBLE        reduce using rule 113 (comparador -> MAYORIGUAL .)
    TRUE            reduce using rule 113 (comparador -> MAYORIGUAL .)
    FALSE           reduce using rule 113 (comparador -> MAYORIGUAL .)
    SIGNODOLAR      reduce using rule 113 (comparador -> MAYORIGUAL .)
    PUNTO           reduce using rule 113 (comparador -> MAYORIGUAL .)
    PUNTOPUNTO      reduce using rule 113 (comparador -> MAYORIGUAL .)
    SYMBOL          reduce using rule 113 (comparador -> MAYORIGUAL .)
    COMA            reduce using rule 113 (comparador -> MAYORIGUAL .)
    PUNTOCOMA       reduce using rule 113 (comparador -> MAYORIGUAL .)
    DOSPUNTOS       reduce using rule 113 (comparador -> MAYORIGUAL .)
    IGUALIGUAL      reduce using rule 113 (comparador -> MAYORIGUAL .)
    NOIGUAL         reduce using rule 113 (comparador -> MAYORIGUAL .)
    MAYOR           reduce using rule 113 (comparador -> MAYORIGUAL .)
    MENOR           reduce using rule 113 (comparador -> MAYORIGUAL .)
    MAYORIGUAL      reduce using rule 113 (comparador -> MAYORIGUAL .)
    MENORIGUAL      reduce using rule 113 (comparador -> MAYORIGUAL .)


state 89

    (114) comparador -> MENORIGUAL .

    ID              reduce using rule 114 (comparador -> MENORIGUAL .)
    ENTEROEXPRESION reduce using rule 114 (comparador -> MENORIGUAL .)
    NEGACION        reduce using rule 114 (comparador -> MENORIGUAL .)
    COMDOBLE        reduce using rule 114 (comparador -> MENORIGUAL .)
    TRUE            reduce using rule 114 (comparador -> MENORIGUAL .)
    FALSE           reduce using rule 114 (comparador -> MENORIGUAL .)
    SIGNODOLAR      reduce using rule 114 (comparador -> MENORIGUAL .)
    PUNTO           reduce using rule 114 (comparador -> MENORIGUAL .)
    PUNTOPUNTO      reduce using rule 114 (comparador -> MENORIGUAL .)
    SYMBOL          reduce using rule 114 (comparador -> MENORIGUAL .)
    COMA            reduce using rule 114 (comparador -> MENORIGUAL .)
    PUNTOCOMA       reduce using rule 114 (comparador -> MENORIGUAL .)
    DOSPUNTOS       reduce using rule 114 (comparador -> MENORIGUAL .)
    IGUALIGUAL      reduce using rule 114 (comparador -> MENORIGUAL .)
    NOIGUAL         reduce using rule 114 (comparador -> MENORIGUAL .)
    MAYOR           reduce using rule 114 (comparador -> MENORIGUAL .)
    MENOR           reduce using rule 114 (comparador -> MENORIGUAL .)
    MAYORIGUAL      reduce using rule 114 (comparador -> MENORIGUAL .)
    MENORIGUAL      reduce using rule 114 (comparador -> MENORIGUAL .)


state 90

    (11) print -> printType APAR . CADENAEXPRESION CPAR
    (12) print -> printType APAR . CPAR
    (13) print -> printType APAR . ID CPAR
    (14) print -> printType APAR . funcion CPAR
    (15) print -> printType APAR . condicion CPAR
    (16) print -> printType APAR . expresion CPAR
    (17) print -> printType APAR . error CPAR
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR

    CPAR            shift and go to state 162
    ID              shift and go to state 163
    error           shift and go to state 167
    COMDOBLE        shift and go to state 33
    NEGACION        shift and go to state 64
    APAR            shift and go to state 25
    ENTEROEXPRESION shift and go to state 78
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    CADENAEXPRESION                shift and go to state 161
    funcion                        shift and go to state 164
    condicion                      shift and go to state 165
    expresion                      shift and go to state 166
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    termino                        shift and go to state 38
    expresionBooleano              shift and go to state 73
    factor                         shift and go to state 44
    flotante                       shift and go to state 79
    list                           shift and go to state 80
    set                            shift and go to state 81

state 91

    (151) CADENAEXPRESION -> COMDOBLE COMDOBLE .

    PUNTO           reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    PUNTOCOMA       reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    VAL             reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    VAR             reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    ID              reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    ENTEROEXPRESION reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    NEGACION        reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    APAR            reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    TRUE            reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    FALSE           reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    COMDOBLE        reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    LISTOF          reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    SETOF           reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    PAIR            reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    TRIPLE          reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    IF              reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    FOR             reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    WHILE           reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    PRINT           reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    PRINTLN         reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    $end            reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    IGUALIGUAL      reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    NOIGUAL         reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    MAYOR           reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    MENOR           reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    MAYORIGUAL      reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    MENORIGUAL      reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    SUMA            reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    RESTA           reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    MULT            reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    DIVISION        reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    MODULO          reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    CPAR            reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    ELSE            reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    CLLAVE          reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    AND             reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    OR              reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)
    COMA            reduce using rule 151 (CADENAEXPRESION -> COMDOBLE COMDOBLE .)


state 92

    (150) CADENAEXPRESION -> COMDOBLE content . COMDOBLE
    (162) content -> content . content
    (152) content -> . SIGNODOLAR ID
    (153) content -> . ID
    (154) content -> . ENTEROEXPRESION
    (155) content -> . PUNTO
    (156) content -> . PUNTOPUNTO
    (157) content -> . comparador
    (158) content -> . SYMBOL
    (159) content -> . COMA
    (160) content -> . PUNTOCOMA
    (161) content -> . DOSPUNTOS
    (162) content -> . content content
    (109) comparador -> . IGUALIGUAL
    (110) comparador -> . NOIGUAL
    (111) comparador -> . MAYOR
    (112) comparador -> . MENOR
    (113) comparador -> . MAYORIGUAL
    (114) comparador -> . MENORIGUAL

    COMDOBLE        shift and go to state 168
    SIGNODOLAR      shift and go to state 93
    ID              shift and go to state 94
    ENTEROEXPRESION shift and go to state 95
    PUNTO           shift and go to state 96
    PUNTOPUNTO      shift and go to state 97
    SYMBOL          shift and go to state 99
    COMA            shift and go to state 100
    PUNTOCOMA       shift and go to state 101
    DOSPUNTOS       shift and go to state 102
    IGUALIGUAL      shift and go to state 84
    NOIGUAL         shift and go to state 85
    MAYOR           shift and go to state 86
    MENOR           shift and go to state 87
    MAYORIGUAL      shift and go to state 88
    MENORIGUAL      shift and go to state 89

    content                        shift and go to state 169
    comparador                     shift and go to state 98

state 93

    (152) content -> SIGNODOLAR . ID

    ID              shift and go to state 170


state 94

    (153) content -> ID .

    COMDOBLE        reduce using rule 153 (content -> ID .)
    SIGNODOLAR      reduce using rule 153 (content -> ID .)
    ID              reduce using rule 153 (content -> ID .)
    ENTEROEXPRESION reduce using rule 153 (content -> ID .)
    PUNTO           reduce using rule 153 (content -> ID .)
    PUNTOPUNTO      reduce using rule 153 (content -> ID .)
    SYMBOL          reduce using rule 153 (content -> ID .)
    COMA            reduce using rule 153 (content -> ID .)
    PUNTOCOMA       reduce using rule 153 (content -> ID .)
    DOSPUNTOS       reduce using rule 153 (content -> ID .)
    IGUALIGUAL      reduce using rule 153 (content -> ID .)
    NOIGUAL         reduce using rule 153 (content -> ID .)
    MAYOR           reduce using rule 153 (content -> ID .)
    MENOR           reduce using rule 153 (content -> ID .)
    MAYORIGUAL      reduce using rule 153 (content -> ID .)
    MENORIGUAL      reduce using rule 153 (content -> ID .)


state 95

    (154) content -> ENTEROEXPRESION .

    COMDOBLE        reduce using rule 154 (content -> ENTEROEXPRESION .)
    SIGNODOLAR      reduce using rule 154 (content -> ENTEROEXPRESION .)
    ID              reduce using rule 154 (content -> ENTEROEXPRESION .)
    ENTEROEXPRESION reduce using rule 154 (content -> ENTEROEXPRESION .)
    PUNTO           reduce using rule 154 (content -> ENTEROEXPRESION .)
    PUNTOPUNTO      reduce using rule 154 (content -> ENTEROEXPRESION .)
    SYMBOL          reduce using rule 154 (content -> ENTEROEXPRESION .)
    COMA            reduce using rule 154 (content -> ENTEROEXPRESION .)
    PUNTOCOMA       reduce using rule 154 (content -> ENTEROEXPRESION .)
    DOSPUNTOS       reduce using rule 154 (content -> ENTEROEXPRESION .)
    IGUALIGUAL      reduce using rule 154 (content -> ENTEROEXPRESION .)
    NOIGUAL         reduce using rule 154 (content -> ENTEROEXPRESION .)
    MAYOR           reduce using rule 154 (content -> ENTEROEXPRESION .)
    MENOR           reduce using rule 154 (content -> ENTEROEXPRESION .)
    MAYORIGUAL      reduce using rule 154 (content -> ENTEROEXPRESION .)
    MENORIGUAL      reduce using rule 154 (content -> ENTEROEXPRESION .)


state 96

    (155) content -> PUNTO .

    COMDOBLE        reduce using rule 155 (content -> PUNTO .)
    SIGNODOLAR      reduce using rule 155 (content -> PUNTO .)
    ID              reduce using rule 155 (content -> PUNTO .)
    ENTEROEXPRESION reduce using rule 155 (content -> PUNTO .)
    PUNTO           reduce using rule 155 (content -> PUNTO .)
    PUNTOPUNTO      reduce using rule 155 (content -> PUNTO .)
    SYMBOL          reduce using rule 155 (content -> PUNTO .)
    COMA            reduce using rule 155 (content -> PUNTO .)
    PUNTOCOMA       reduce using rule 155 (content -> PUNTO .)
    DOSPUNTOS       reduce using rule 155 (content -> PUNTO .)
    IGUALIGUAL      reduce using rule 155 (content -> PUNTO .)
    NOIGUAL         reduce using rule 155 (content -> PUNTO .)
    MAYOR           reduce using rule 155 (content -> PUNTO .)
    MENOR           reduce using rule 155 (content -> PUNTO .)
    MAYORIGUAL      reduce using rule 155 (content -> PUNTO .)
    MENORIGUAL      reduce using rule 155 (content -> PUNTO .)


state 97

    (156) content -> PUNTOPUNTO .

    COMDOBLE        reduce using rule 156 (content -> PUNTOPUNTO .)
    SIGNODOLAR      reduce using rule 156 (content -> PUNTOPUNTO .)
    ID              reduce using rule 156 (content -> PUNTOPUNTO .)
    ENTEROEXPRESION reduce using rule 156 (content -> PUNTOPUNTO .)
    PUNTO           reduce using rule 156 (content -> PUNTOPUNTO .)
    PUNTOPUNTO      reduce using rule 156 (content -> PUNTOPUNTO .)
    SYMBOL          reduce using rule 156 (content -> PUNTOPUNTO .)
    COMA            reduce using rule 156 (content -> PUNTOPUNTO .)
    PUNTOCOMA       reduce using rule 156 (content -> PUNTOPUNTO .)
    DOSPUNTOS       reduce using rule 156 (content -> PUNTOPUNTO .)
    IGUALIGUAL      reduce using rule 156 (content -> PUNTOPUNTO .)
    NOIGUAL         reduce using rule 156 (content -> PUNTOPUNTO .)
    MAYOR           reduce using rule 156 (content -> PUNTOPUNTO .)
    MENOR           reduce using rule 156 (content -> PUNTOPUNTO .)
    MAYORIGUAL      reduce using rule 156 (content -> PUNTOPUNTO .)
    MENORIGUAL      reduce using rule 156 (content -> PUNTOPUNTO .)


state 98

    (157) content -> comparador .

    COMDOBLE        reduce using rule 157 (content -> comparador .)
    SIGNODOLAR      reduce using rule 157 (content -> comparador .)
    ID              reduce using rule 157 (content -> comparador .)
    ENTEROEXPRESION reduce using rule 157 (content -> comparador .)
    PUNTO           reduce using rule 157 (content -> comparador .)
    PUNTOPUNTO      reduce using rule 157 (content -> comparador .)
    SYMBOL          reduce using rule 157 (content -> comparador .)
    COMA            reduce using rule 157 (content -> comparador .)
    PUNTOCOMA       reduce using rule 157 (content -> comparador .)
    DOSPUNTOS       reduce using rule 157 (content -> comparador .)
    IGUALIGUAL      reduce using rule 157 (content -> comparador .)
    NOIGUAL         reduce using rule 157 (content -> comparador .)
    MAYOR           reduce using rule 157 (content -> comparador .)
    MENOR           reduce using rule 157 (content -> comparador .)
    MAYORIGUAL      reduce using rule 157 (content -> comparador .)
    MENORIGUAL      reduce using rule 157 (content -> comparador .)


state 99

    (158) content -> SYMBOL .

    COMDOBLE        reduce using rule 158 (content -> SYMBOL .)
    SIGNODOLAR      reduce using rule 158 (content -> SYMBOL .)
    ID              reduce using rule 158 (content -> SYMBOL .)
    ENTEROEXPRESION reduce using rule 158 (content -> SYMBOL .)
    PUNTO           reduce using rule 158 (content -> SYMBOL .)
    PUNTOPUNTO      reduce using rule 158 (content -> SYMBOL .)
    SYMBOL          reduce using rule 158 (content -> SYMBOL .)
    COMA            reduce using rule 158 (content -> SYMBOL .)
    PUNTOCOMA       reduce using rule 158 (content -> SYMBOL .)
    DOSPUNTOS       reduce using rule 158 (content -> SYMBOL .)
    IGUALIGUAL      reduce using rule 158 (content -> SYMBOL .)
    NOIGUAL         reduce using rule 158 (content -> SYMBOL .)
    MAYOR           reduce using rule 158 (content -> SYMBOL .)
    MENOR           reduce using rule 158 (content -> SYMBOL .)
    MAYORIGUAL      reduce using rule 158 (content -> SYMBOL .)
    MENORIGUAL      reduce using rule 158 (content -> SYMBOL .)


state 100

    (159) content -> COMA .

    COMDOBLE        reduce using rule 159 (content -> COMA .)
    SIGNODOLAR      reduce using rule 159 (content -> COMA .)
    ID              reduce using rule 159 (content -> COMA .)
    ENTEROEXPRESION reduce using rule 159 (content -> COMA .)
    PUNTO           reduce using rule 159 (content -> COMA .)
    PUNTOPUNTO      reduce using rule 159 (content -> COMA .)
    SYMBOL          reduce using rule 159 (content -> COMA .)
    COMA            reduce using rule 159 (content -> COMA .)
    PUNTOCOMA       reduce using rule 159 (content -> COMA .)
    DOSPUNTOS       reduce using rule 159 (content -> COMA .)
    IGUALIGUAL      reduce using rule 159 (content -> COMA .)
    NOIGUAL         reduce using rule 159 (content -> COMA .)
    MAYOR           reduce using rule 159 (content -> COMA .)
    MENOR           reduce using rule 159 (content -> COMA .)
    MAYORIGUAL      reduce using rule 159 (content -> COMA .)
    MENORIGUAL      reduce using rule 159 (content -> COMA .)


state 101

    (160) content -> PUNTOCOMA .

    COMDOBLE        reduce using rule 160 (content -> PUNTOCOMA .)
    SIGNODOLAR      reduce using rule 160 (content -> PUNTOCOMA .)
    ID              reduce using rule 160 (content -> PUNTOCOMA .)
    ENTEROEXPRESION reduce using rule 160 (content -> PUNTOCOMA .)
    PUNTO           reduce using rule 160 (content -> PUNTOCOMA .)
    PUNTOPUNTO      reduce using rule 160 (content -> PUNTOCOMA .)
    SYMBOL          reduce using rule 160 (content -> PUNTOCOMA .)
    COMA            reduce using rule 160 (content -> PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 160 (content -> PUNTOCOMA .)
    DOSPUNTOS       reduce using rule 160 (content -> PUNTOCOMA .)
    IGUALIGUAL      reduce using rule 160 (content -> PUNTOCOMA .)
    NOIGUAL         reduce using rule 160 (content -> PUNTOCOMA .)
    MAYOR           reduce using rule 160 (content -> PUNTOCOMA .)
    MENOR           reduce using rule 160 (content -> PUNTOCOMA .)
    MAYORIGUAL      reduce using rule 160 (content -> PUNTOCOMA .)
    MENORIGUAL      reduce using rule 160 (content -> PUNTOCOMA .)


state 102

    (161) content -> DOSPUNTOS .

    COMDOBLE        reduce using rule 161 (content -> DOSPUNTOS .)
    SIGNODOLAR      reduce using rule 161 (content -> DOSPUNTOS .)
    ID              reduce using rule 161 (content -> DOSPUNTOS .)
    ENTEROEXPRESION reduce using rule 161 (content -> DOSPUNTOS .)
    PUNTO           reduce using rule 161 (content -> DOSPUNTOS .)
    PUNTOPUNTO      reduce using rule 161 (content -> DOSPUNTOS .)
    SYMBOL          reduce using rule 161 (content -> DOSPUNTOS .)
    COMA            reduce using rule 161 (content -> DOSPUNTOS .)
    PUNTOCOMA       reduce using rule 161 (content -> DOSPUNTOS .)
    DOSPUNTOS       reduce using rule 161 (content -> DOSPUNTOS .)
    IGUALIGUAL      reduce using rule 161 (content -> DOSPUNTOS .)
    NOIGUAL         reduce using rule 161 (content -> DOSPUNTOS .)
    MAYOR           reduce using rule 161 (content -> DOSPUNTOS .)
    MENOR           reduce using rule 161 (content -> DOSPUNTOS .)
    MAYORIGUAL      reduce using rule 161 (content -> DOSPUNTOS .)
    MENORIGUAL      reduce using rule 161 (content -> DOSPUNTOS .)


state 103

    (73) list -> LISTOF APAR . contenido CPAR
    (74) list -> LISTOF APAR . error CPAR
    (76) set -> LISTOF APAR . error CPAR
    (78) pair -> LISTOF APAR . error CPAR
    (80) triple -> LISTOF APAR . error CPAR
    (81) contenido -> . factorEspecial
    (82) contenido -> . factorEspecial COMA contenido
    (104) factorEspecial -> . factor
    (105) factorEspecial -> . CADENAEXPRESION
    (106) factorEspecial -> . list
    (107) factorEspecial -> . set
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F

    error           shift and go to state 172
    ENTEROEXPRESION shift and go to state 178
    ID              shift and go to state 180
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    contenido                      shift and go to state 171
    factorEspecial                 shift and go to state 173
    factor                         shift and go to state 174
    CADENAEXPRESION                shift and go to state 175
    list                           shift and go to state 176
    set                            shift and go to state 177
    flotante                       shift and go to state 179

state 104

    (75) set -> SETOF APAR . contenido CPAR
    (81) contenido -> . factorEspecial
    (82) contenido -> . factorEspecial COMA contenido
    (104) factorEspecial -> . factor
    (105) factorEspecial -> . CADENAEXPRESION
    (106) factorEspecial -> . list
    (107) factorEspecial -> . set
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F

    ENTEROEXPRESION shift and go to state 178
    ID              shift and go to state 180
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    contenido                      shift and go to state 181
    factorEspecial                 shift and go to state 173
    factor                         shift and go to state 174
    CADENAEXPRESION                shift and go to state 175
    list                           shift and go to state 176
    set                            shift and go to state 177
    flotante                       shift and go to state 179

state 105

    (77) pair -> PAIR APAR . factorEspecial COMA factorEspecial CPAR
    (104) factorEspecial -> . factor
    (105) factorEspecial -> . CADENAEXPRESION
    (106) factorEspecial -> . list
    (107) factorEspecial -> . set
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F

    ENTEROEXPRESION shift and go to state 178
    ID              shift and go to state 180
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    factorEspecial                 shift and go to state 182
    factor                         shift and go to state 174
    CADENAEXPRESION                shift and go to state 175
    list                           shift and go to state 176
    set                            shift and go to state 177
    flotante                       shift and go to state 179

state 106

    (79) triple -> TRIPLE APAR . factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (104) factorEspecial -> . factor
    (105) factorEspecial -> . CADENAEXPRESION
    (106) factorEspecial -> . list
    (107) factorEspecial -> . set
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F

    ENTEROEXPRESION shift and go to state 178
    ID              shift and go to state 180
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    factorEspecial                 shift and go to state 183
    factor                         shift and go to state 174
    CADENAEXPRESION                shift and go to state 175
    list                           shift and go to state 176
    set                            shift and go to state 177
    flotante                       shift and go to state 179

state 107

    (89) termino -> termino SUMA . factorEspecial
    (104) factorEspecial -> . factor
    (105) factorEspecial -> . CADENAEXPRESION
    (106) factorEspecial -> . list
    (107) factorEspecial -> . set
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F

    ENTEROEXPRESION shift and go to state 178
    ID              shift and go to state 180
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    factorEspecial                 shift and go to state 184
    factor                         shift and go to state 174
    CADENAEXPRESION                shift and go to state 175
    list                           shift and go to state 176
    set                            shift and go to state 177
    flotante                       shift and go to state 179

state 108

    (90) termino -> termino RESTA . factor
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F

    ENTEROEXPRESION shift and go to state 178
    ID              shift and go to state 180
    APAR            shift and go to state 138

    factor                         shift and go to state 185
    flotante                       shift and go to state 179

state 109

    (91) termino -> termino MULT . factor
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F

    ENTEROEXPRESION shift and go to state 178
    ID              shift and go to state 180
    APAR            shift and go to state 138

    factor                         shift and go to state 186
    flotante                       shift and go to state 179

state 110

    (92) termino -> termino DIVISION . factor
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F

    ENTEROEXPRESION shift and go to state 178
    ID              shift and go to state 180
    APAR            shift and go to state 138

    factor                         shift and go to state 187
    flotante                       shift and go to state 179

state 111

    (93) termino -> termino MODULO . factor
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F

    ENTEROEXPRESION shift and go to state 178
    ID              shift and go to state 180
    APAR            shift and go to state 138

    factor                         shift and go to state 188
    flotante                       shift and go to state 179

state 112

    (137) if -> IF APAR . condicion CPAR cuerpo
    (138) if -> IF APAR . condicion CPAR cuerpo ELSE cuerpo
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR

    NEGACION        shift and go to state 64
    APAR            shift and go to state 69
    ID              shift and go to state 117
    ENTEROEXPRESION shift and go to state 71
    COMDOBLE        shift and go to state 33
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    condicion                      shift and go to state 189
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    CADENAEXPRESION                shift and go to state 70
    funcion                        shift and go to state 72
    expresionBooleano              shift and go to state 73
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24

state 113

    (139) for -> FOR APAR . ID IN ID CPAR cuerpo
    (140) for -> FOR APAR . ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> FOR APAR . ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> FOR APAR . ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> FOR APAR . ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> FOR APAR . ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> FOR APAR . ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> FOR APAR . ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> FOR APAR . APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> FOR APAR . APAR ID COMA ID CPAR IN ID CPAR cuerpo

    ID              shift and go to state 191
    APAR            shift and go to state 190


state 114

    (149) while -> WHILE APAR . condicion CPAR cuerpo
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR

    NEGACION        shift and go to state 64
    APAR            shift and go to state 69
    ID              shift and go to state 117
    ENTEROEXPRESION shift and go to state 71
    COMDOBLE        shift and go to state 33
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    condicion                      shift and go to state 192
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    CADENAEXPRESION                shift and go to state 70
    funcion                        shift and go to state 72
    expresionBooleano              shift and go to state 73
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24

state 115

    (4) todos -> todos sentencia PUNTOCOMA .

    VAL             reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    VAR             reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    ID              reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    ENTEROEXPRESION reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    NEGACION        reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    APAR            reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    TRUE            reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    FALSE           reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    COMDOBLE        reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    LISTOF          reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    SETOF           reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    PAIR            reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    TRIPLE          reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    IF              reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    FOR             reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    WHILE           reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    PRINT           reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    PRINTLN         reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    $end            reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)
    CLLAVE          reduce using rule 4 (todos -> todos sentencia PUNTOCOMA .)


state 116

    (130) condicion -> condicion conector condicion .
    (130) condicion -> condicion . conector condicion
    (115) conector -> . AND
    (116) conector -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOCOMA       reduce using rule 130 (condicion -> condicion conector condicion .)
    VAL             reduce using rule 130 (condicion -> condicion conector condicion .)
    VAR             reduce using rule 130 (condicion -> condicion conector condicion .)
    ID              reduce using rule 130 (condicion -> condicion conector condicion .)
    ENTEROEXPRESION reduce using rule 130 (condicion -> condicion conector condicion .)
    NEGACION        reduce using rule 130 (condicion -> condicion conector condicion .)
    APAR            reduce using rule 130 (condicion -> condicion conector condicion .)
    TRUE            reduce using rule 130 (condicion -> condicion conector condicion .)
    FALSE           reduce using rule 130 (condicion -> condicion conector condicion .)
    COMDOBLE        reduce using rule 130 (condicion -> condicion conector condicion .)
    LISTOF          reduce using rule 130 (condicion -> condicion conector condicion .)
    SETOF           reduce using rule 130 (condicion -> condicion conector condicion .)
    PAIR            reduce using rule 130 (condicion -> condicion conector condicion .)
    TRIPLE          reduce using rule 130 (condicion -> condicion conector condicion .)
    IF              reduce using rule 130 (condicion -> condicion conector condicion .)
    FOR             reduce using rule 130 (condicion -> condicion conector condicion .)
    WHILE           reduce using rule 130 (condicion -> condicion conector condicion .)
    PRINT           reduce using rule 130 (condicion -> condicion conector condicion .)
    PRINTLN         reduce using rule 130 (condicion -> condicion conector condicion .)
    $end            reduce using rule 130 (condicion -> condicion conector condicion .)
    ELSE            reduce using rule 130 (condicion -> condicion conector condicion .)
    CLLAVE          reduce using rule 130 (condicion -> condicion conector condicion .)
    CPAR            reduce using rule 130 (condicion -> condicion conector condicion .)
    AND             shift and go to state 48
    OR              shift and go to state 49

  ! AND             [ reduce using rule 130 (condicion -> condicion conector condicion .) ]
  ! OR              [ reduce using rule 130 (condicion -> condicion conector condicion .) ]

    conector                       shift and go to state 47

state 117

    (117) compmiembro -> ID .
    (123) compsolo -> ID .
    (27) funcion -> ID . PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> ID . PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> ID . PUNTO SIZE
    (30) funcion -> ID . PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> ID . PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> ID . PUNTO ISEMPTY APAR CPAR
    (33) funcion -> ID . PUNTO TOLIST APAR CPAR
    (34) funcion -> ID . PUNTO TOSTRING APAR CPAR
    (35) funcion -> ID . PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> ID . PUNTO SLICE APAR error CPAR
    (39) funcion -> ID . PUNTO INDEXOF APAR factorEspecial CPAR

    IGUALIGUAL      reduce using rule 117 (compmiembro -> ID .)
    NOIGUAL         reduce using rule 117 (compmiembro -> ID .)
    MAYOR           reduce using rule 117 (compmiembro -> ID .)
    MENOR           reduce using rule 117 (compmiembro -> ID .)
    MAYORIGUAL      reduce using rule 117 (compmiembro -> ID .)
    MENORIGUAL      reduce using rule 117 (compmiembro -> ID .)
    AND             reduce using rule 123 (compsolo -> ID .)
    OR              reduce using rule 123 (compsolo -> ID .)
    PUNTOCOMA       reduce using rule 123 (compsolo -> ID .)
    VAL             reduce using rule 123 (compsolo -> ID .)
    VAR             reduce using rule 123 (compsolo -> ID .)
    ID              reduce using rule 123 (compsolo -> ID .)
    ENTEROEXPRESION reduce using rule 123 (compsolo -> ID .)
    NEGACION        reduce using rule 123 (compsolo -> ID .)
    APAR            reduce using rule 123 (compsolo -> ID .)
    TRUE            reduce using rule 123 (compsolo -> ID .)
    FALSE           reduce using rule 123 (compsolo -> ID .)
    COMDOBLE        reduce using rule 123 (compsolo -> ID .)
    LISTOF          reduce using rule 123 (compsolo -> ID .)
    SETOF           reduce using rule 123 (compsolo -> ID .)
    PAIR            reduce using rule 123 (compsolo -> ID .)
    TRIPLE          reduce using rule 123 (compsolo -> ID .)
    IF              reduce using rule 123 (compsolo -> ID .)
    FOR             reduce using rule 123 (compsolo -> ID .)
    WHILE           reduce using rule 123 (compsolo -> ID .)
    PRINT           reduce using rule 123 (compsolo -> ID .)
    PRINTLN         reduce using rule 123 (compsolo -> ID .)
    $end            reduce using rule 123 (compsolo -> ID .)
    ELSE            reduce using rule 123 (compsolo -> ID .)
    CLLAVE          reduce using rule 123 (compsolo -> ID .)
    CPAR            reduce using rule 123 (compsolo -> ID .)
    PUNTO           shift and go to state 52


state 118

    (40) asignacion -> VAL ID tipoAsignacion .

    PUNTOCOMA       reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    VAL             reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    VAR             reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    ID              reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    ENTEROEXPRESION reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    NEGACION        reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    APAR            reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    TRUE            reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    FALSE           reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    COMDOBLE        reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    LISTOF          reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    SETOF           reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    PAIR            reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    TRIPLE          reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    IF              reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    FOR             reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    WHILE           reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    PRINT           reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    PRINTLN         reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    $end            reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    ELSE            reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)
    CLLAVE          reduce using rule 40 (asignacion -> VAL ID tipoAsignacion .)


state 119

    (43) tipoAsignacion -> declaracion .
    (45) tipoAsignacion -> declaracion . inicializacion
    (47) inicializacion -> . IGUAL valor

    PUNTOCOMA       reduce using rule 43 (tipoAsignacion -> declaracion .)
    VAL             reduce using rule 43 (tipoAsignacion -> declaracion .)
    VAR             reduce using rule 43 (tipoAsignacion -> declaracion .)
    ID              reduce using rule 43 (tipoAsignacion -> declaracion .)
    ENTEROEXPRESION reduce using rule 43 (tipoAsignacion -> declaracion .)
    NEGACION        reduce using rule 43 (tipoAsignacion -> declaracion .)
    APAR            reduce using rule 43 (tipoAsignacion -> declaracion .)
    TRUE            reduce using rule 43 (tipoAsignacion -> declaracion .)
    FALSE           reduce using rule 43 (tipoAsignacion -> declaracion .)
    COMDOBLE        reduce using rule 43 (tipoAsignacion -> declaracion .)
    LISTOF          reduce using rule 43 (tipoAsignacion -> declaracion .)
    SETOF           reduce using rule 43 (tipoAsignacion -> declaracion .)
    PAIR            reduce using rule 43 (tipoAsignacion -> declaracion .)
    TRIPLE          reduce using rule 43 (tipoAsignacion -> declaracion .)
    IF              reduce using rule 43 (tipoAsignacion -> declaracion .)
    FOR             reduce using rule 43 (tipoAsignacion -> declaracion .)
    WHILE           reduce using rule 43 (tipoAsignacion -> declaracion .)
    PRINT           reduce using rule 43 (tipoAsignacion -> declaracion .)
    PRINTLN         reduce using rule 43 (tipoAsignacion -> declaracion .)
    $end            reduce using rule 43 (tipoAsignacion -> declaracion .)
    ELSE            reduce using rule 43 (tipoAsignacion -> declaracion .)
    CLLAVE          reduce using rule 43 (tipoAsignacion -> declaracion .)
    IGUAL           shift and go to state 53

    inicializacion                 shift and go to state 193

state 120

    (44) tipoAsignacion -> inicializacion .

    PUNTOCOMA       reduce using rule 44 (tipoAsignacion -> inicializacion .)
    VAL             reduce using rule 44 (tipoAsignacion -> inicializacion .)
    VAR             reduce using rule 44 (tipoAsignacion -> inicializacion .)
    ID              reduce using rule 44 (tipoAsignacion -> inicializacion .)
    ENTEROEXPRESION reduce using rule 44 (tipoAsignacion -> inicializacion .)
    NEGACION        reduce using rule 44 (tipoAsignacion -> inicializacion .)
    APAR            reduce using rule 44 (tipoAsignacion -> inicializacion .)
    TRUE            reduce using rule 44 (tipoAsignacion -> inicializacion .)
    FALSE           reduce using rule 44 (tipoAsignacion -> inicializacion .)
    COMDOBLE        reduce using rule 44 (tipoAsignacion -> inicializacion .)
    LISTOF          reduce using rule 44 (tipoAsignacion -> inicializacion .)
    SETOF           reduce using rule 44 (tipoAsignacion -> inicializacion .)
    PAIR            reduce using rule 44 (tipoAsignacion -> inicializacion .)
    TRIPLE          reduce using rule 44 (tipoAsignacion -> inicializacion .)
    IF              reduce using rule 44 (tipoAsignacion -> inicializacion .)
    FOR             reduce using rule 44 (tipoAsignacion -> inicializacion .)
    WHILE           reduce using rule 44 (tipoAsignacion -> inicializacion .)
    PRINT           reduce using rule 44 (tipoAsignacion -> inicializacion .)
    PRINTLN         reduce using rule 44 (tipoAsignacion -> inicializacion .)
    $end            reduce using rule 44 (tipoAsignacion -> inicializacion .)
    ELSE            reduce using rule 44 (tipoAsignacion -> inicializacion .)
    CLLAVE          reduce using rule 44 (tipoAsignacion -> inicializacion .)


state 121

    (46) declaracion -> DOSPUNTOS . tipoDato
    (48) tipoDato -> . INT
    (49) tipoDato -> . FLOAT
    (50) tipoDato -> . BOOLEAN
    (51) tipoDato -> . STRING
    (52) tipoDato -> . LIST MENOR tipoDato MAYOR
    (53) tipoDato -> . SET MENOR tipoDato MAYOR
    (54) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (55) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 195
    FLOAT           shift and go to state 196
    BOOLEAN         shift and go to state 197
    STRING          shift and go to state 198
    LIST            shift and go to state 199
    SET             shift and go to state 200
    PAIR            shift and go to state 201
    TRIPLE          shift and go to state 202

    tipoDato                       shift and go to state 194

state 122

    (27) funcion -> ID PUNTO CONTAINS . APAR factorEspecial CPAR
    (28) funcion -> ID PUNTO CONTAINS . APAR ID CPAR

    APAR            shift and go to state 203


state 123

    (29) funcion -> ID PUNTO SIZE .

    PUNTOCOMA       reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    VAL             reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    VAR             reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    ID              reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    ENTEROEXPRESION reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    NEGACION        reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    APAR            reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    TRUE            reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    FALSE           reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    COMDOBLE        reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    LISTOF          reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    SETOF           reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    PAIR            reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    TRIPLE          reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    IF              reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    FOR             reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    WHILE           reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    PRINT           reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    PRINTLN         reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    $end            reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    IGUALIGUAL      reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    NOIGUAL         reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    MAYOR           reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    MENOR           reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    MAYORIGUAL      reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    MENORIGUAL      reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    AND             reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    OR              reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    ELSE            reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    CLLAVE          reduce using rule 29 (funcion -> ID PUNTO SIZE .)
    CPAR            reduce using rule 29 (funcion -> ID PUNTO SIZE .)


state 124

    (30) funcion -> ID PUNTO GET . APAR ENTEROEXPRESION CPAR

    APAR            shift and go to state 204


state 125

    (31) funcion -> ID PUNTO SET . APAR factorEspecial CPAR

    APAR            shift and go to state 205


state 126

    (32) funcion -> ID PUNTO ISEMPTY . APAR CPAR

    APAR            shift and go to state 206


state 127

    (33) funcion -> ID PUNTO TOLIST . APAR CPAR

    APAR            shift and go to state 207


state 128

    (34) funcion -> ID PUNTO TOSTRING . APAR CPAR

    APAR            shift and go to state 208


state 129

    (35) funcion -> ID PUNTO SLICE . APAR contentSlice CPAR
    (38) funcion -> ID PUNTO SLICE . APAR error CPAR

    APAR            shift and go to state 209


state 130

    (39) funcion -> ID PUNTO INDEXOF . APAR factorEspecial CPAR

    APAR            shift and go to state 210


state 131

    (47) inicializacion -> IGUAL valor .

    PUNTOCOMA       reduce using rule 47 (inicializacion -> IGUAL valor .)
    VAL             reduce using rule 47 (inicializacion -> IGUAL valor .)
    VAR             reduce using rule 47 (inicializacion -> IGUAL valor .)
    ID              reduce using rule 47 (inicializacion -> IGUAL valor .)
    ENTEROEXPRESION reduce using rule 47 (inicializacion -> IGUAL valor .)
    NEGACION        reduce using rule 47 (inicializacion -> IGUAL valor .)
    APAR            reduce using rule 47 (inicializacion -> IGUAL valor .)
    TRUE            reduce using rule 47 (inicializacion -> IGUAL valor .)
    FALSE           reduce using rule 47 (inicializacion -> IGUAL valor .)
    COMDOBLE        reduce using rule 47 (inicializacion -> IGUAL valor .)
    LISTOF          reduce using rule 47 (inicializacion -> IGUAL valor .)
    SETOF           reduce using rule 47 (inicializacion -> IGUAL valor .)
    PAIR            reduce using rule 47 (inicializacion -> IGUAL valor .)
    TRIPLE          reduce using rule 47 (inicializacion -> IGUAL valor .)
    IF              reduce using rule 47 (inicializacion -> IGUAL valor .)
    FOR             reduce using rule 47 (inicializacion -> IGUAL valor .)
    WHILE           reduce using rule 47 (inicializacion -> IGUAL valor .)
    PRINT           reduce using rule 47 (inicializacion -> IGUAL valor .)
    PRINTLN         reduce using rule 47 (inicializacion -> IGUAL valor .)
    $end            reduce using rule 47 (inicializacion -> IGUAL valor .)
    ELSE            reduce using rule 47 (inicializacion -> IGUAL valor .)
    CLLAVE          reduce using rule 47 (inicializacion -> IGUAL valor .)


state 132

    (56) valor -> ENTEROEXPRESION .
    (70) flotante -> ENTEROEXPRESION . F
    (71) flotante -> ENTEROEXPRESION . PUNTO ENTEROEXPRESION F
    (72) flotante -> ENTEROEXPRESION . error F
    (95) termino -> ENTEROEXPRESION .
    (101) factor -> ENTEROEXPRESION .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAL resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAR resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ID resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for NEGACION resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRUE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FALSE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for LISTOF resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for SETOF resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PAIR resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IF resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FOR resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for WHILE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINT resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for SUMA resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for RESTA resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MULT resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for DIVISION resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MODULO resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAL resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAR resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ID resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for NEGACION resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRUE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FALSE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for LISTOF resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for SETOF resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PAIR resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IF resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FOR resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for WHILE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINT resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 56 (valor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 56 (valor -> ENTEROEXPRESION .)
    PUNTOCOMA       reduce using rule 56 (valor -> ENTEROEXPRESION .)
    VAL             reduce using rule 56 (valor -> ENTEROEXPRESION .)
    VAR             reduce using rule 56 (valor -> ENTEROEXPRESION .)
    ID              reduce using rule 56 (valor -> ENTEROEXPRESION .)
    ENTEROEXPRESION reduce using rule 56 (valor -> ENTEROEXPRESION .)
    NEGACION        reduce using rule 56 (valor -> ENTEROEXPRESION .)
    APAR            reduce using rule 56 (valor -> ENTEROEXPRESION .)
    TRUE            reduce using rule 56 (valor -> ENTEROEXPRESION .)
    FALSE           reduce using rule 56 (valor -> ENTEROEXPRESION .)
    COMDOBLE        reduce using rule 56 (valor -> ENTEROEXPRESION .)
    LISTOF          reduce using rule 56 (valor -> ENTEROEXPRESION .)
    SETOF           reduce using rule 56 (valor -> ENTEROEXPRESION .)
    PAIR            reduce using rule 56 (valor -> ENTEROEXPRESION .)
    TRIPLE          reduce using rule 56 (valor -> ENTEROEXPRESION .)
    IF              reduce using rule 56 (valor -> ENTEROEXPRESION .)
    FOR             reduce using rule 56 (valor -> ENTEROEXPRESION .)
    WHILE           reduce using rule 56 (valor -> ENTEROEXPRESION .)
    PRINT           reduce using rule 56 (valor -> ENTEROEXPRESION .)
    PRINTLN         reduce using rule 56 (valor -> ENTEROEXPRESION .)
    $end            reduce using rule 56 (valor -> ENTEROEXPRESION .)
    ELSE            reduce using rule 56 (valor -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 56 (valor -> ENTEROEXPRESION .)
    F               shift and go to state 55
    PUNTO           shift and go to state 56
    error           shift and go to state 57
    SUMA            reduce using rule 95 (termino -> ENTEROEXPRESION .)
    RESTA           reduce using rule 95 (termino -> ENTEROEXPRESION .)
    MULT            reduce using rule 95 (termino -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 95 (termino -> ENTEROEXPRESION .)
    MODULO          reduce using rule 95 (termino -> ENTEROEXPRESION .)

  ! PUNTOCOMA       [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! VAL             [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! VAR             [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! ID              [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! NEGACION        [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! APAR            [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! TRUE            [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! FALSE           [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! COMDOBLE        [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! LISTOF          [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! SETOF           [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! PAIR            [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! TRIPLE          [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! IF              [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! FOR             [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! WHILE           [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! PRINT           [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! PRINTLN         [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! $end            [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! ELSE            [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 95 (termino -> ENTEROEXPRESION .) ]
  ! SUMA            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! RESTA           [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! MULT            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! DIVISION        [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! MODULO          [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! PUNTOCOMA       [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! VAL             [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! VAR             [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! ID              [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! NEGACION        [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! APAR            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! TRUE            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! FALSE           [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! COMDOBLE        [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! LISTOF          [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! SETOF           [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! PAIR            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! TRIPLE          [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! IF              [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! FOR             [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! WHILE           [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! PRINT           [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! PRINTLN         [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! $end            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! ELSE            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]


state 133

    (58) valor -> expresionBooleano .

    PUNTOCOMA       reduce using rule 58 (valor -> expresionBooleano .)
    VAL             reduce using rule 58 (valor -> expresionBooleano .)
    VAR             reduce using rule 58 (valor -> expresionBooleano .)
    ID              reduce using rule 58 (valor -> expresionBooleano .)
    ENTEROEXPRESION reduce using rule 58 (valor -> expresionBooleano .)
    NEGACION        reduce using rule 58 (valor -> expresionBooleano .)
    APAR            reduce using rule 58 (valor -> expresionBooleano .)
    TRUE            reduce using rule 58 (valor -> expresionBooleano .)
    FALSE           reduce using rule 58 (valor -> expresionBooleano .)
    COMDOBLE        reduce using rule 58 (valor -> expresionBooleano .)
    LISTOF          reduce using rule 58 (valor -> expresionBooleano .)
    SETOF           reduce using rule 58 (valor -> expresionBooleano .)
    PAIR            reduce using rule 58 (valor -> expresionBooleano .)
    TRIPLE          reduce using rule 58 (valor -> expresionBooleano .)
    IF              reduce using rule 58 (valor -> expresionBooleano .)
    FOR             reduce using rule 58 (valor -> expresionBooleano .)
    WHILE           reduce using rule 58 (valor -> expresionBooleano .)
    PRINT           reduce using rule 58 (valor -> expresionBooleano .)
    PRINTLN         reduce using rule 58 (valor -> expresionBooleano .)
    $end            reduce using rule 58 (valor -> expresionBooleano .)
    ELSE            reduce using rule 58 (valor -> expresionBooleano .)
    CLLAVE          reduce using rule 58 (valor -> expresionBooleano .)


state 134

    (59) valor -> CADENAEXPRESION .
    (97) termino -> CADENAEXPRESION .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for VAL resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for VAR resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for ID resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for NEGACION resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for TRUE resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for FALSE resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for LISTOF resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for SETOF resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for PAIR resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for IF resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for FOR resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for WHILE resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for PRINT resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 59 (valor -> CADENAEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 59 (valor -> CADENAEXPRESION .)
    PUNTOCOMA       reduce using rule 59 (valor -> CADENAEXPRESION .)
    VAL             reduce using rule 59 (valor -> CADENAEXPRESION .)
    VAR             reduce using rule 59 (valor -> CADENAEXPRESION .)
    ID              reduce using rule 59 (valor -> CADENAEXPRESION .)
    ENTEROEXPRESION reduce using rule 59 (valor -> CADENAEXPRESION .)
    NEGACION        reduce using rule 59 (valor -> CADENAEXPRESION .)
    APAR            reduce using rule 59 (valor -> CADENAEXPRESION .)
    TRUE            reduce using rule 59 (valor -> CADENAEXPRESION .)
    FALSE           reduce using rule 59 (valor -> CADENAEXPRESION .)
    COMDOBLE        reduce using rule 59 (valor -> CADENAEXPRESION .)
    LISTOF          reduce using rule 59 (valor -> CADENAEXPRESION .)
    SETOF           reduce using rule 59 (valor -> CADENAEXPRESION .)
    PAIR            reduce using rule 59 (valor -> CADENAEXPRESION .)
    TRIPLE          reduce using rule 59 (valor -> CADENAEXPRESION .)
    IF              reduce using rule 59 (valor -> CADENAEXPRESION .)
    FOR             reduce using rule 59 (valor -> CADENAEXPRESION .)
    WHILE           reduce using rule 59 (valor -> CADENAEXPRESION .)
    PRINT           reduce using rule 59 (valor -> CADENAEXPRESION .)
    PRINTLN         reduce using rule 59 (valor -> CADENAEXPRESION .)
    $end            reduce using rule 59 (valor -> CADENAEXPRESION .)
    ELSE            reduce using rule 59 (valor -> CADENAEXPRESION .)
    CLLAVE          reduce using rule 59 (valor -> CADENAEXPRESION .)
    SUMA            reduce using rule 97 (termino -> CADENAEXPRESION .)
    RESTA           reduce using rule 97 (termino -> CADENAEXPRESION .)
    MULT            reduce using rule 97 (termino -> CADENAEXPRESION .)
    DIVISION        reduce using rule 97 (termino -> CADENAEXPRESION .)
    MODULO          reduce using rule 97 (termino -> CADENAEXPRESION .)

  ! PUNTOCOMA       [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! VAL             [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! VAR             [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! ID              [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! NEGACION        [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! APAR            [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! TRUE            [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! FALSE           [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! COMDOBLE        [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! LISTOF          [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! SETOF           [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! PAIR            [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! TRIPLE          [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! IF              [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! FOR             [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! WHILE           [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! PRINT           [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! PRINTLN         [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! $end            [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! ELSE            [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]


state 135

    (65) valor -> ID .
    (100) termino -> ID .
    (103) factor -> ID .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for VAL resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for VAR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for NEGACION resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for APAR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for LISTOF resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for SETOF resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for PAIR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for SUMA resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for RESTA resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for MULT resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for DIVISION resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for VAL resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for VAR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for NEGACION resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for APAR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for LISTOF resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for SETOF resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for PAIR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 65 (valor -> ID .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 65 (valor -> ID .)
    PUNTOCOMA       reduce using rule 65 (valor -> ID .)
    VAL             reduce using rule 65 (valor -> ID .)
    VAR             reduce using rule 65 (valor -> ID .)
    ID              reduce using rule 65 (valor -> ID .)
    ENTEROEXPRESION reduce using rule 65 (valor -> ID .)
    NEGACION        reduce using rule 65 (valor -> ID .)
    APAR            reduce using rule 65 (valor -> ID .)
    TRUE            reduce using rule 65 (valor -> ID .)
    FALSE           reduce using rule 65 (valor -> ID .)
    COMDOBLE        reduce using rule 65 (valor -> ID .)
    LISTOF          reduce using rule 65 (valor -> ID .)
    SETOF           reduce using rule 65 (valor -> ID .)
    PAIR            reduce using rule 65 (valor -> ID .)
    TRIPLE          reduce using rule 65 (valor -> ID .)
    IF              reduce using rule 65 (valor -> ID .)
    FOR             reduce using rule 65 (valor -> ID .)
    WHILE           reduce using rule 65 (valor -> ID .)
    PRINT           reduce using rule 65 (valor -> ID .)
    PRINTLN         reduce using rule 65 (valor -> ID .)
    $end            reduce using rule 65 (valor -> ID .)
    ELSE            reduce using rule 65 (valor -> ID .)
    CLLAVE          reduce using rule 65 (valor -> ID .)
    SUMA            reduce using rule 100 (termino -> ID .)
    RESTA           reduce using rule 100 (termino -> ID .)
    MULT            reduce using rule 100 (termino -> ID .)
    DIVISION        reduce using rule 100 (termino -> ID .)
    MODULO          reduce using rule 100 (termino -> ID .)

  ! PUNTOCOMA       [ reduce using rule 100 (termino -> ID .) ]
  ! VAL             [ reduce using rule 100 (termino -> ID .) ]
  ! VAR             [ reduce using rule 100 (termino -> ID .) ]
  ! ID              [ reduce using rule 100 (termino -> ID .) ]
  ! ENTEROEXPRESION [ reduce using rule 100 (termino -> ID .) ]
  ! NEGACION        [ reduce using rule 100 (termino -> ID .) ]
  ! APAR            [ reduce using rule 100 (termino -> ID .) ]
  ! TRUE            [ reduce using rule 100 (termino -> ID .) ]
  ! FALSE           [ reduce using rule 100 (termino -> ID .) ]
  ! COMDOBLE        [ reduce using rule 100 (termino -> ID .) ]
  ! LISTOF          [ reduce using rule 100 (termino -> ID .) ]
  ! SETOF           [ reduce using rule 100 (termino -> ID .) ]
  ! PAIR            [ reduce using rule 100 (termino -> ID .) ]
  ! TRIPLE          [ reduce using rule 100 (termino -> ID .) ]
  ! IF              [ reduce using rule 100 (termino -> ID .) ]
  ! FOR             [ reduce using rule 100 (termino -> ID .) ]
  ! WHILE           [ reduce using rule 100 (termino -> ID .) ]
  ! PRINT           [ reduce using rule 100 (termino -> ID .) ]
  ! PRINTLN         [ reduce using rule 100 (termino -> ID .) ]
  ! $end            [ reduce using rule 100 (termino -> ID .) ]
  ! ELSE            [ reduce using rule 100 (termino -> ID .) ]
  ! CLLAVE          [ reduce using rule 100 (termino -> ID .) ]
  ! SUMA            [ reduce using rule 103 (factor -> ID .) ]
  ! RESTA           [ reduce using rule 103 (factor -> ID .) ]
  ! MULT            [ reduce using rule 103 (factor -> ID .) ]
  ! DIVISION        [ reduce using rule 103 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 103 (factor -> ID .) ]
  ! PUNTOCOMA       [ reduce using rule 103 (factor -> ID .) ]
  ! VAL             [ reduce using rule 103 (factor -> ID .) ]
  ! VAR             [ reduce using rule 103 (factor -> ID .) ]
  ! ID              [ reduce using rule 103 (factor -> ID .) ]
  ! ENTEROEXPRESION [ reduce using rule 103 (factor -> ID .) ]
  ! NEGACION        [ reduce using rule 103 (factor -> ID .) ]
  ! APAR            [ reduce using rule 103 (factor -> ID .) ]
  ! TRUE            [ reduce using rule 103 (factor -> ID .) ]
  ! FALSE           [ reduce using rule 103 (factor -> ID .) ]
  ! COMDOBLE        [ reduce using rule 103 (factor -> ID .) ]
  ! LISTOF          [ reduce using rule 103 (factor -> ID .) ]
  ! SETOF           [ reduce using rule 103 (factor -> ID .) ]
  ! PAIR            [ reduce using rule 103 (factor -> ID .) ]
  ! TRIPLE          [ reduce using rule 103 (factor -> ID .) ]
  ! IF              [ reduce using rule 103 (factor -> ID .) ]
  ! FOR             [ reduce using rule 103 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 103 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 103 (factor -> ID .) ]
  ! PRINTLN         [ reduce using rule 103 (factor -> ID .) ]
  ! $end            [ reduce using rule 103 (factor -> ID .) ]
  ! ELSE            [ reduce using rule 103 (factor -> ID .) ]
  ! CLLAVE          [ reduce using rule 103 (factor -> ID .) ]


state 136

    (66) valor -> if .

    PUNTOCOMA       reduce using rule 66 (valor -> if .)
    VAL             reduce using rule 66 (valor -> if .)
    VAR             reduce using rule 66 (valor -> if .)
    ID              reduce using rule 66 (valor -> if .)
    ENTEROEXPRESION reduce using rule 66 (valor -> if .)
    NEGACION        reduce using rule 66 (valor -> if .)
    APAR            reduce using rule 66 (valor -> if .)
    TRUE            reduce using rule 66 (valor -> if .)
    FALSE           reduce using rule 66 (valor -> if .)
    COMDOBLE        reduce using rule 66 (valor -> if .)
    LISTOF          reduce using rule 66 (valor -> if .)
    SETOF           reduce using rule 66 (valor -> if .)
    PAIR            reduce using rule 66 (valor -> if .)
    TRIPLE          reduce using rule 66 (valor -> if .)
    IF              reduce using rule 66 (valor -> if .)
    FOR             reduce using rule 66 (valor -> if .)
    WHILE           reduce using rule 66 (valor -> if .)
    PRINT           reduce using rule 66 (valor -> if .)
    PRINTLN         reduce using rule 66 (valor -> if .)
    $end            reduce using rule 66 (valor -> if .)
    ELSE            reduce using rule 66 (valor -> if .)
    CLLAVE          reduce using rule 66 (valor -> if .)


state 137

    (67) valor -> NEGACION . ID

    ID              shift and go to state 211


state 138

    (108) factor -> APAR . expresion CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR

    ENTEROEXPRESION shift and go to state 146
    ID              shift and go to state 148
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    expresion                      shift and go to state 75
    termino                        shift and go to state 38
    factor                         shift and go to state 44
    flotante                       shift and go to state 79
    CADENAEXPRESION                shift and go to state 147
    list                           shift and go to state 80
    set                            shift and go to state 81

state 139

    (41) asignacion -> VAR ID tipoAsignacion .

    PUNTOCOMA       reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    VAL             reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    VAR             reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    ID              reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    ENTEROEXPRESION reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    NEGACION        reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    APAR            reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    TRUE            reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    FALSE           reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    COMDOBLE        reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    LISTOF          reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    SETOF           reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    PAIR            reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    TRIPLE          reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    IF              reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    FOR             reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    WHILE           reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    PRINT           reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    PRINTLN         reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    $end            reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    ELSE            reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)
    CLLAVE          reduce using rule 41 (asignacion -> VAR ID tipoAsignacion .)


state 140

    (71) flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION . F

    F               shift and go to state 212


state 141

    (72) flotante -> ENTEROEXPRESION error F .

    PUNTOCOMA       reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    VAL             reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    VAR             reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    ID              reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    ENTEROEXPRESION reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    NEGACION        reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    APAR            reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    TRUE            reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    FALSE           reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    COMDOBLE        reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    LISTOF          reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    SETOF           reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    PAIR            reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    TRIPLE          reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    IF              reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    FOR             reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    WHILE           reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    PRINT           reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    PRINTLN         reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    $end            reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    SUMA            reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    RESTA           reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    MULT            reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    DIVISION        reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    MODULO          reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    CPAR            reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    ELSE            reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    CLLAVE          reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)
    COMA            reduce using rule 72 (flotante -> ENTEROEXPRESION error F .)


state 142

    (26) funcion -> CADENAEXPRESION PUNTO HASHCODE . APAR CPAR

    APAR            shift and go to state 213


state 143

    (22) funcionCompare -> CADENAEXPRESION PUNTO COMPARETO . APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> CADENAEXPRESION PUNTO COMPARETO . APAR error CPAR

    APAR            shift and go to state 214


state 144

    (24) funcionGet -> CADENAEXPRESION PUNTO GET . APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> CADENAEXPRESION PUNTO GET . APAR error CPAR

    APAR            shift and go to state 215


state 145

    (83) expresion -> expresion SUMA termino .
    (89) termino -> termino . SUMA factorEspecial
    (90) termino -> termino . RESTA factor
    (91) termino -> termino . MULT factor
    (92) termino -> termino . DIVISION factor
    (93) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    PUNTOCOMA       reduce using rule 83 (expresion -> expresion SUMA termino .)
    VAL             reduce using rule 83 (expresion -> expresion SUMA termino .)
    VAR             reduce using rule 83 (expresion -> expresion SUMA termino .)
    ID              reduce using rule 83 (expresion -> expresion SUMA termino .)
    ENTEROEXPRESION reduce using rule 83 (expresion -> expresion SUMA termino .)
    NEGACION        reduce using rule 83 (expresion -> expresion SUMA termino .)
    APAR            reduce using rule 83 (expresion -> expresion SUMA termino .)
    TRUE            reduce using rule 83 (expresion -> expresion SUMA termino .)
    FALSE           reduce using rule 83 (expresion -> expresion SUMA termino .)
    COMDOBLE        reduce using rule 83 (expresion -> expresion SUMA termino .)
    LISTOF          reduce using rule 83 (expresion -> expresion SUMA termino .)
    SETOF           reduce using rule 83 (expresion -> expresion SUMA termino .)
    PAIR            reduce using rule 83 (expresion -> expresion SUMA termino .)
    TRIPLE          reduce using rule 83 (expresion -> expresion SUMA termino .)
    IF              reduce using rule 83 (expresion -> expresion SUMA termino .)
    FOR             reduce using rule 83 (expresion -> expresion SUMA termino .)
    WHILE           reduce using rule 83 (expresion -> expresion SUMA termino .)
    PRINT           reduce using rule 83 (expresion -> expresion SUMA termino .)
    PRINTLN         reduce using rule 83 (expresion -> expresion SUMA termino .)
    $end            reduce using rule 83 (expresion -> expresion SUMA termino .)
    CPAR            reduce using rule 83 (expresion -> expresion SUMA termino .)
    ELSE            reduce using rule 83 (expresion -> expresion SUMA termino .)
    CLLAVE          reduce using rule 83 (expresion -> expresion SUMA termino .)
    SUMA            shift and go to state 107
    RESTA           shift and go to state 108
    MULT            shift and go to state 109
    DIVISION        shift and go to state 110
    MODULO          shift and go to state 111

  ! SUMA            [ reduce using rule 83 (expresion -> expresion SUMA termino .) ]
  ! RESTA           [ reduce using rule 83 (expresion -> expresion SUMA termino .) ]
  ! DIVISION        [ reduce using rule 83 (expresion -> expresion SUMA termino .) ]
  ! MULT            [ reduce using rule 83 (expresion -> expresion SUMA termino .) ]
  ! MODULO          [ reduce using rule 83 (expresion -> expresion SUMA termino .) ]


state 146

    (95) termino -> ENTEROEXPRESION .
    (101) factor -> ENTEROEXPRESION .
    (70) flotante -> ENTEROEXPRESION . F
    (71) flotante -> ENTEROEXPRESION . PUNTO ENTEROEXPRESION F
    (72) flotante -> ENTEROEXPRESION . error F

  ! reduce/reduce conflict for SUMA resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for RESTA resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MULT resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for DIVISION resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MODULO resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAL resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for VAR resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ID resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for NEGACION resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRUE resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FALSE resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for LISTOF resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for SETOF resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PAIR resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for IF resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FOR resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for WHILE resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINT resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 95 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 95 (termino -> ENTEROEXPRESION .)
    SUMA            reduce using rule 95 (termino -> ENTEROEXPRESION .)
    RESTA           reduce using rule 95 (termino -> ENTEROEXPRESION .)
    MULT            reduce using rule 95 (termino -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 95 (termino -> ENTEROEXPRESION .)
    MODULO          reduce using rule 95 (termino -> ENTEROEXPRESION .)
    PUNTOCOMA       reduce using rule 95 (termino -> ENTEROEXPRESION .)
    VAL             reduce using rule 95 (termino -> ENTEROEXPRESION .)
    VAR             reduce using rule 95 (termino -> ENTEROEXPRESION .)
    ID              reduce using rule 95 (termino -> ENTEROEXPRESION .)
    ENTEROEXPRESION reduce using rule 95 (termino -> ENTEROEXPRESION .)
    NEGACION        reduce using rule 95 (termino -> ENTEROEXPRESION .)
    APAR            reduce using rule 95 (termino -> ENTEROEXPRESION .)
    TRUE            reduce using rule 95 (termino -> ENTEROEXPRESION .)
    FALSE           reduce using rule 95 (termino -> ENTEROEXPRESION .)
    COMDOBLE        reduce using rule 95 (termino -> ENTEROEXPRESION .)
    LISTOF          reduce using rule 95 (termino -> ENTEROEXPRESION .)
    SETOF           reduce using rule 95 (termino -> ENTEROEXPRESION .)
    PAIR            reduce using rule 95 (termino -> ENTEROEXPRESION .)
    TRIPLE          reduce using rule 95 (termino -> ENTEROEXPRESION .)
    IF              reduce using rule 95 (termino -> ENTEROEXPRESION .)
    FOR             reduce using rule 95 (termino -> ENTEROEXPRESION .)
    WHILE           reduce using rule 95 (termino -> ENTEROEXPRESION .)
    PRINT           reduce using rule 95 (termino -> ENTEROEXPRESION .)
    PRINTLN         reduce using rule 95 (termino -> ENTEROEXPRESION .)
    $end            reduce using rule 95 (termino -> ENTEROEXPRESION .)
    CPAR            reduce using rule 95 (termino -> ENTEROEXPRESION .)
    ELSE            reduce using rule 95 (termino -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 95 (termino -> ENTEROEXPRESION .)
    F               shift and go to state 55
    PUNTO           shift and go to state 56
    error           shift and go to state 57

  ! SUMA            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! RESTA           [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! MULT            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! DIVISION        [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! MODULO          [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! PUNTOCOMA       [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! VAL             [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! VAR             [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! ID              [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! NEGACION        [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! APAR            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! TRUE            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! FALSE           [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! COMDOBLE        [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! LISTOF          [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! SETOF           [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! PAIR            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! TRIPLE          [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! IF              [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! FOR             [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! WHILE           [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! PRINT           [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! PRINTLN         [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! $end            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! CPAR            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! ELSE            [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 101 (factor -> ENTEROEXPRESION .) ]


state 147

    (97) termino -> CADENAEXPRESION .

    SUMA            reduce using rule 97 (termino -> CADENAEXPRESION .)
    RESTA           reduce using rule 97 (termino -> CADENAEXPRESION .)
    MULT            reduce using rule 97 (termino -> CADENAEXPRESION .)
    DIVISION        reduce using rule 97 (termino -> CADENAEXPRESION .)
    MODULO          reduce using rule 97 (termino -> CADENAEXPRESION .)
    PUNTOCOMA       reduce using rule 97 (termino -> CADENAEXPRESION .)
    VAL             reduce using rule 97 (termino -> CADENAEXPRESION .)
    VAR             reduce using rule 97 (termino -> CADENAEXPRESION .)
    ID              reduce using rule 97 (termino -> CADENAEXPRESION .)
    ENTEROEXPRESION reduce using rule 97 (termino -> CADENAEXPRESION .)
    NEGACION        reduce using rule 97 (termino -> CADENAEXPRESION .)
    APAR            reduce using rule 97 (termino -> CADENAEXPRESION .)
    TRUE            reduce using rule 97 (termino -> CADENAEXPRESION .)
    FALSE           reduce using rule 97 (termino -> CADENAEXPRESION .)
    COMDOBLE        reduce using rule 97 (termino -> CADENAEXPRESION .)
    LISTOF          reduce using rule 97 (termino -> CADENAEXPRESION .)
    SETOF           reduce using rule 97 (termino -> CADENAEXPRESION .)
    PAIR            reduce using rule 97 (termino -> CADENAEXPRESION .)
    TRIPLE          reduce using rule 97 (termino -> CADENAEXPRESION .)
    IF              reduce using rule 97 (termino -> CADENAEXPRESION .)
    FOR             reduce using rule 97 (termino -> CADENAEXPRESION .)
    WHILE           reduce using rule 97 (termino -> CADENAEXPRESION .)
    PRINT           reduce using rule 97 (termino -> CADENAEXPRESION .)
    PRINTLN         reduce using rule 97 (termino -> CADENAEXPRESION .)
    $end            reduce using rule 97 (termino -> CADENAEXPRESION .)
    CPAR            reduce using rule 97 (termino -> CADENAEXPRESION .)
    ELSE            reduce using rule 97 (termino -> CADENAEXPRESION .)
    CLLAVE          reduce using rule 97 (termino -> CADENAEXPRESION .)


state 148

    (100) termino -> ID .
    (103) factor -> ID .

  ! reduce/reduce conflict for SUMA resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for RESTA resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for MULT resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for DIVISION resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for VAL resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for VAR resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for NEGACION resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for APAR resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for LISTOF resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for SETOF resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for PAIR resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for CPAR resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 100 (termino -> ID .)
    SUMA            reduce using rule 100 (termino -> ID .)
    RESTA           reduce using rule 100 (termino -> ID .)
    MULT            reduce using rule 100 (termino -> ID .)
    DIVISION        reduce using rule 100 (termino -> ID .)
    MODULO          reduce using rule 100 (termino -> ID .)
    PUNTOCOMA       reduce using rule 100 (termino -> ID .)
    VAL             reduce using rule 100 (termino -> ID .)
    VAR             reduce using rule 100 (termino -> ID .)
    ID              reduce using rule 100 (termino -> ID .)
    ENTEROEXPRESION reduce using rule 100 (termino -> ID .)
    NEGACION        reduce using rule 100 (termino -> ID .)
    APAR            reduce using rule 100 (termino -> ID .)
    TRUE            reduce using rule 100 (termino -> ID .)
    FALSE           reduce using rule 100 (termino -> ID .)
    COMDOBLE        reduce using rule 100 (termino -> ID .)
    LISTOF          reduce using rule 100 (termino -> ID .)
    SETOF           reduce using rule 100 (termino -> ID .)
    PAIR            reduce using rule 100 (termino -> ID .)
    TRIPLE          reduce using rule 100 (termino -> ID .)
    IF              reduce using rule 100 (termino -> ID .)
    FOR             reduce using rule 100 (termino -> ID .)
    WHILE           reduce using rule 100 (termino -> ID .)
    PRINT           reduce using rule 100 (termino -> ID .)
    PRINTLN         reduce using rule 100 (termino -> ID .)
    $end            reduce using rule 100 (termino -> ID .)
    CPAR            reduce using rule 100 (termino -> ID .)
    ELSE            reduce using rule 100 (termino -> ID .)
    CLLAVE          reduce using rule 100 (termino -> ID .)

  ! SUMA            [ reduce using rule 103 (factor -> ID .) ]
  ! RESTA           [ reduce using rule 103 (factor -> ID .) ]
  ! MULT            [ reduce using rule 103 (factor -> ID .) ]
  ! DIVISION        [ reduce using rule 103 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 103 (factor -> ID .) ]
  ! PUNTOCOMA       [ reduce using rule 103 (factor -> ID .) ]
  ! VAL             [ reduce using rule 103 (factor -> ID .) ]
  ! VAR             [ reduce using rule 103 (factor -> ID .) ]
  ! ID              [ reduce using rule 103 (factor -> ID .) ]
  ! ENTEROEXPRESION [ reduce using rule 103 (factor -> ID .) ]
  ! NEGACION        [ reduce using rule 103 (factor -> ID .) ]
  ! APAR            [ reduce using rule 103 (factor -> ID .) ]
  ! TRUE            [ reduce using rule 103 (factor -> ID .) ]
  ! FALSE           [ reduce using rule 103 (factor -> ID .) ]
  ! COMDOBLE        [ reduce using rule 103 (factor -> ID .) ]
  ! LISTOF          [ reduce using rule 103 (factor -> ID .) ]
  ! SETOF           [ reduce using rule 103 (factor -> ID .) ]
  ! PAIR            [ reduce using rule 103 (factor -> ID .) ]
  ! TRIPLE          [ reduce using rule 103 (factor -> ID .) ]
  ! IF              [ reduce using rule 103 (factor -> ID .) ]
  ! FOR             [ reduce using rule 103 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 103 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 103 (factor -> ID .) ]
  ! PRINTLN         [ reduce using rule 103 (factor -> ID .) ]
  ! $end            [ reduce using rule 103 (factor -> ID .) ]
  ! CPAR            [ reduce using rule 103 (factor -> ID .) ]
  ! ELSE            [ reduce using rule 103 (factor -> ID .) ]
  ! CLLAVE          [ reduce using rule 103 (factor -> ID .) ]


state 149

    (84) expresion -> expresion RESTA termino .
    (89) termino -> termino . SUMA factorEspecial
    (90) termino -> termino . RESTA factor
    (91) termino -> termino . MULT factor
    (92) termino -> termino . DIVISION factor
    (93) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    PUNTOCOMA       reduce using rule 84 (expresion -> expresion RESTA termino .)
    VAL             reduce using rule 84 (expresion -> expresion RESTA termino .)
    VAR             reduce using rule 84 (expresion -> expresion RESTA termino .)
    ID              reduce using rule 84 (expresion -> expresion RESTA termino .)
    ENTEROEXPRESION reduce using rule 84 (expresion -> expresion RESTA termino .)
    NEGACION        reduce using rule 84 (expresion -> expresion RESTA termino .)
    APAR            reduce using rule 84 (expresion -> expresion RESTA termino .)
    TRUE            reduce using rule 84 (expresion -> expresion RESTA termino .)
    FALSE           reduce using rule 84 (expresion -> expresion RESTA termino .)
    COMDOBLE        reduce using rule 84 (expresion -> expresion RESTA termino .)
    LISTOF          reduce using rule 84 (expresion -> expresion RESTA termino .)
    SETOF           reduce using rule 84 (expresion -> expresion RESTA termino .)
    PAIR            reduce using rule 84 (expresion -> expresion RESTA termino .)
    TRIPLE          reduce using rule 84 (expresion -> expresion RESTA termino .)
    IF              reduce using rule 84 (expresion -> expresion RESTA termino .)
    FOR             reduce using rule 84 (expresion -> expresion RESTA termino .)
    WHILE           reduce using rule 84 (expresion -> expresion RESTA termino .)
    PRINT           reduce using rule 84 (expresion -> expresion RESTA termino .)
    PRINTLN         reduce using rule 84 (expresion -> expresion RESTA termino .)
    $end            reduce using rule 84 (expresion -> expresion RESTA termino .)
    CPAR            reduce using rule 84 (expresion -> expresion RESTA termino .)
    ELSE            reduce using rule 84 (expresion -> expresion RESTA termino .)
    CLLAVE          reduce using rule 84 (expresion -> expresion RESTA termino .)
    SUMA            shift and go to state 107
    RESTA           shift and go to state 108
    MULT            shift and go to state 109
    DIVISION        shift and go to state 110
    MODULO          shift and go to state 111

  ! SUMA            [ reduce using rule 84 (expresion -> expresion RESTA termino .) ]
  ! RESTA           [ reduce using rule 84 (expresion -> expresion RESTA termino .) ]
  ! DIVISION        [ reduce using rule 84 (expresion -> expresion RESTA termino .) ]
  ! MULT            [ reduce using rule 84 (expresion -> expresion RESTA termino .) ]
  ! MODULO          [ reduce using rule 84 (expresion -> expresion RESTA termino .) ]


state 150

    (85) expresion -> expresion DIVISION termino .
    (89) termino -> termino . SUMA factorEspecial
    (90) termino -> termino . RESTA factor
    (91) termino -> termino . MULT factor
    (92) termino -> termino . DIVISION factor
    (93) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    PUNTOCOMA       reduce using rule 85 (expresion -> expresion DIVISION termino .)
    VAL             reduce using rule 85 (expresion -> expresion DIVISION termino .)
    VAR             reduce using rule 85 (expresion -> expresion DIVISION termino .)
    ID              reduce using rule 85 (expresion -> expresion DIVISION termino .)
    ENTEROEXPRESION reduce using rule 85 (expresion -> expresion DIVISION termino .)
    NEGACION        reduce using rule 85 (expresion -> expresion DIVISION termino .)
    APAR            reduce using rule 85 (expresion -> expresion DIVISION termino .)
    TRUE            reduce using rule 85 (expresion -> expresion DIVISION termino .)
    FALSE           reduce using rule 85 (expresion -> expresion DIVISION termino .)
    COMDOBLE        reduce using rule 85 (expresion -> expresion DIVISION termino .)
    LISTOF          reduce using rule 85 (expresion -> expresion DIVISION termino .)
    SETOF           reduce using rule 85 (expresion -> expresion DIVISION termino .)
    PAIR            reduce using rule 85 (expresion -> expresion DIVISION termino .)
    TRIPLE          reduce using rule 85 (expresion -> expresion DIVISION termino .)
    IF              reduce using rule 85 (expresion -> expresion DIVISION termino .)
    FOR             reduce using rule 85 (expresion -> expresion DIVISION termino .)
    WHILE           reduce using rule 85 (expresion -> expresion DIVISION termino .)
    PRINT           reduce using rule 85 (expresion -> expresion DIVISION termino .)
    PRINTLN         reduce using rule 85 (expresion -> expresion DIVISION termino .)
    $end            reduce using rule 85 (expresion -> expresion DIVISION termino .)
    CPAR            reduce using rule 85 (expresion -> expresion DIVISION termino .)
    ELSE            reduce using rule 85 (expresion -> expresion DIVISION termino .)
    CLLAVE          reduce using rule 85 (expresion -> expresion DIVISION termino .)
    SUMA            shift and go to state 107
    RESTA           shift and go to state 108
    MULT            shift and go to state 109
    DIVISION        shift and go to state 110
    MODULO          shift and go to state 111

  ! SUMA            [ reduce using rule 85 (expresion -> expresion DIVISION termino .) ]
  ! RESTA           [ reduce using rule 85 (expresion -> expresion DIVISION termino .) ]
  ! DIVISION        [ reduce using rule 85 (expresion -> expresion DIVISION termino .) ]
  ! MULT            [ reduce using rule 85 (expresion -> expresion DIVISION termino .) ]
  ! MODULO          [ reduce using rule 85 (expresion -> expresion DIVISION termino .) ]


state 151

    (86) expresion -> expresion MULT termino .
    (89) termino -> termino . SUMA factorEspecial
    (90) termino -> termino . RESTA factor
    (91) termino -> termino . MULT factor
    (92) termino -> termino . DIVISION factor
    (93) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    PUNTOCOMA       reduce using rule 86 (expresion -> expresion MULT termino .)
    VAL             reduce using rule 86 (expresion -> expresion MULT termino .)
    VAR             reduce using rule 86 (expresion -> expresion MULT termino .)
    ID              reduce using rule 86 (expresion -> expresion MULT termino .)
    ENTEROEXPRESION reduce using rule 86 (expresion -> expresion MULT termino .)
    NEGACION        reduce using rule 86 (expresion -> expresion MULT termino .)
    APAR            reduce using rule 86 (expresion -> expresion MULT termino .)
    TRUE            reduce using rule 86 (expresion -> expresion MULT termino .)
    FALSE           reduce using rule 86 (expresion -> expresion MULT termino .)
    COMDOBLE        reduce using rule 86 (expresion -> expresion MULT termino .)
    LISTOF          reduce using rule 86 (expresion -> expresion MULT termino .)
    SETOF           reduce using rule 86 (expresion -> expresion MULT termino .)
    PAIR            reduce using rule 86 (expresion -> expresion MULT termino .)
    TRIPLE          reduce using rule 86 (expresion -> expresion MULT termino .)
    IF              reduce using rule 86 (expresion -> expresion MULT termino .)
    FOR             reduce using rule 86 (expresion -> expresion MULT termino .)
    WHILE           reduce using rule 86 (expresion -> expresion MULT termino .)
    PRINT           reduce using rule 86 (expresion -> expresion MULT termino .)
    PRINTLN         reduce using rule 86 (expresion -> expresion MULT termino .)
    $end            reduce using rule 86 (expresion -> expresion MULT termino .)
    CPAR            reduce using rule 86 (expresion -> expresion MULT termino .)
    ELSE            reduce using rule 86 (expresion -> expresion MULT termino .)
    CLLAVE          reduce using rule 86 (expresion -> expresion MULT termino .)
    SUMA            shift and go to state 107
    RESTA           shift and go to state 108
    MULT            shift and go to state 109
    DIVISION        shift and go to state 110
    MODULO          shift and go to state 111

  ! SUMA            [ reduce using rule 86 (expresion -> expresion MULT termino .) ]
  ! RESTA           [ reduce using rule 86 (expresion -> expresion MULT termino .) ]
  ! DIVISION        [ reduce using rule 86 (expresion -> expresion MULT termino .) ]
  ! MULT            [ reduce using rule 86 (expresion -> expresion MULT termino .) ]
  ! MODULO          [ reduce using rule 86 (expresion -> expresion MULT termino .) ]


state 152

    (87) expresion -> expresion MODULO termino .
    (89) termino -> termino . SUMA factorEspecial
    (90) termino -> termino . RESTA factor
    (91) termino -> termino . MULT factor
    (92) termino -> termino . DIVISION factor
    (93) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    PUNTOCOMA       reduce using rule 87 (expresion -> expresion MODULO termino .)
    VAL             reduce using rule 87 (expresion -> expresion MODULO termino .)
    VAR             reduce using rule 87 (expresion -> expresion MODULO termino .)
    ID              reduce using rule 87 (expresion -> expresion MODULO termino .)
    ENTEROEXPRESION reduce using rule 87 (expresion -> expresion MODULO termino .)
    NEGACION        reduce using rule 87 (expresion -> expresion MODULO termino .)
    APAR            reduce using rule 87 (expresion -> expresion MODULO termino .)
    TRUE            reduce using rule 87 (expresion -> expresion MODULO termino .)
    FALSE           reduce using rule 87 (expresion -> expresion MODULO termino .)
    COMDOBLE        reduce using rule 87 (expresion -> expresion MODULO termino .)
    LISTOF          reduce using rule 87 (expresion -> expresion MODULO termino .)
    SETOF           reduce using rule 87 (expresion -> expresion MODULO termino .)
    PAIR            reduce using rule 87 (expresion -> expresion MODULO termino .)
    TRIPLE          reduce using rule 87 (expresion -> expresion MODULO termino .)
    IF              reduce using rule 87 (expresion -> expresion MODULO termino .)
    FOR             reduce using rule 87 (expresion -> expresion MODULO termino .)
    WHILE           reduce using rule 87 (expresion -> expresion MODULO termino .)
    PRINT           reduce using rule 87 (expresion -> expresion MODULO termino .)
    PRINTLN         reduce using rule 87 (expresion -> expresion MODULO termino .)
    $end            reduce using rule 87 (expresion -> expresion MODULO termino .)
    CPAR            reduce using rule 87 (expresion -> expresion MODULO termino .)
    ELSE            reduce using rule 87 (expresion -> expresion MODULO termino .)
    CLLAVE          reduce using rule 87 (expresion -> expresion MODULO termino .)
    SUMA            shift and go to state 107
    RESTA           shift and go to state 108
    MULT            shift and go to state 109
    DIVISION        shift and go to state 110
    MODULO          shift and go to state 111

  ! SUMA            [ reduce using rule 87 (expresion -> expresion MODULO termino .) ]
  ! RESTA           [ reduce using rule 87 (expresion -> expresion MODULO termino .) ]
  ! DIVISION        [ reduce using rule 87 (expresion -> expresion MODULO termino .) ]
  ! MULT            [ reduce using rule 87 (expresion -> expresion MODULO termino .) ]
  ! MODULO          [ reduce using rule 87 (expresion -> expresion MODULO termino .) ]


state 153

    (131) condicion -> APAR condicion CPAR .

    AND             reduce using rule 131 (condicion -> APAR condicion CPAR .)
    OR              reduce using rule 131 (condicion -> APAR condicion CPAR .)
    PUNTOCOMA       reduce using rule 131 (condicion -> APAR condicion CPAR .)
    VAL             reduce using rule 131 (condicion -> APAR condicion CPAR .)
    VAR             reduce using rule 131 (condicion -> APAR condicion CPAR .)
    ID              reduce using rule 131 (condicion -> APAR condicion CPAR .)
    ENTEROEXPRESION reduce using rule 131 (condicion -> APAR condicion CPAR .)
    NEGACION        reduce using rule 131 (condicion -> APAR condicion CPAR .)
    APAR            reduce using rule 131 (condicion -> APAR condicion CPAR .)
    TRUE            reduce using rule 131 (condicion -> APAR condicion CPAR .)
    FALSE           reduce using rule 131 (condicion -> APAR condicion CPAR .)
    COMDOBLE        reduce using rule 131 (condicion -> APAR condicion CPAR .)
    LISTOF          reduce using rule 131 (condicion -> APAR condicion CPAR .)
    SETOF           reduce using rule 131 (condicion -> APAR condicion CPAR .)
    PAIR            reduce using rule 131 (condicion -> APAR condicion CPAR .)
    TRIPLE          reduce using rule 131 (condicion -> APAR condicion CPAR .)
    IF              reduce using rule 131 (condicion -> APAR condicion CPAR .)
    FOR             reduce using rule 131 (condicion -> APAR condicion CPAR .)
    WHILE           reduce using rule 131 (condicion -> APAR condicion CPAR .)
    PRINT           reduce using rule 131 (condicion -> APAR condicion CPAR .)
    PRINTLN         reduce using rule 131 (condicion -> APAR condicion CPAR .)
    $end            reduce using rule 131 (condicion -> APAR condicion CPAR .)
    ELSE            reduce using rule 131 (condicion -> APAR condicion CPAR .)
    CLLAVE          reduce using rule 131 (condicion -> APAR condicion CPAR .)
    CPAR            reduce using rule 131 (condicion -> APAR condicion CPAR .)


state 154

    (108) factor -> APAR expresion CPAR .

    SUMA            reduce using rule 108 (factor -> APAR expresion CPAR .)
    RESTA           reduce using rule 108 (factor -> APAR expresion CPAR .)
    MULT            reduce using rule 108 (factor -> APAR expresion CPAR .)
    DIVISION        reduce using rule 108 (factor -> APAR expresion CPAR .)
    MODULO          reduce using rule 108 (factor -> APAR expresion CPAR .)
    PUNTOCOMA       reduce using rule 108 (factor -> APAR expresion CPAR .)
    VAL             reduce using rule 108 (factor -> APAR expresion CPAR .)
    VAR             reduce using rule 108 (factor -> APAR expresion CPAR .)
    ID              reduce using rule 108 (factor -> APAR expresion CPAR .)
    ENTEROEXPRESION reduce using rule 108 (factor -> APAR expresion CPAR .)
    NEGACION        reduce using rule 108 (factor -> APAR expresion CPAR .)
    APAR            reduce using rule 108 (factor -> APAR expresion CPAR .)
    TRUE            reduce using rule 108 (factor -> APAR expresion CPAR .)
    FALSE           reduce using rule 108 (factor -> APAR expresion CPAR .)
    COMDOBLE        reduce using rule 108 (factor -> APAR expresion CPAR .)
    LISTOF          reduce using rule 108 (factor -> APAR expresion CPAR .)
    SETOF           reduce using rule 108 (factor -> APAR expresion CPAR .)
    PAIR            reduce using rule 108 (factor -> APAR expresion CPAR .)
    TRIPLE          reduce using rule 108 (factor -> APAR expresion CPAR .)
    IF              reduce using rule 108 (factor -> APAR expresion CPAR .)
    FOR             reduce using rule 108 (factor -> APAR expresion CPAR .)
    WHILE           reduce using rule 108 (factor -> APAR expresion CPAR .)
    PRINT           reduce using rule 108 (factor -> APAR expresion CPAR .)
    PRINTLN         reduce using rule 108 (factor -> APAR expresion CPAR .)
    $end            reduce using rule 108 (factor -> APAR expresion CPAR .)
    CPAR            reduce using rule 108 (factor -> APAR expresion CPAR .)
    ELSE            reduce using rule 108 (factor -> APAR expresion CPAR .)
    CLLAVE          reduce using rule 108 (factor -> APAR expresion CPAR .)
    COMA            reduce using rule 108 (factor -> APAR expresion CPAR .)


state 155

    (73) list -> LISTOF APAR . contenido CPAR
    (74) list -> LISTOF APAR . error CPAR
    (76) set -> LISTOF APAR . error CPAR
    (81) contenido -> . factorEspecial
    (82) contenido -> . factorEspecial COMA contenido
    (104) factorEspecial -> . factor
    (105) factorEspecial -> . CADENAEXPRESION
    (106) factorEspecial -> . list
    (107) factorEspecial -> . set
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F

    error           shift and go to state 216
    ENTEROEXPRESION shift and go to state 178
    ID              shift and go to state 180
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    contenido                      shift and go to state 171
    factorEspecial                 shift and go to state 173
    factor                         shift and go to state 174
    CADENAEXPRESION                shift and go to state 175
    list                           shift and go to state 176
    set                            shift and go to state 177
    flotante                       shift and go to state 179

state 156

    (127) condicion -> compmiembro comparador compmiembro .

    AND             reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    OR              reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    PUNTOCOMA       reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    VAL             reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    VAR             reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    ID              reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    ENTEROEXPRESION reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    NEGACION        reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    APAR            reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    TRUE            reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    FALSE           reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    COMDOBLE        reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    LISTOF          reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    SETOF           reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    PAIR            reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    TRIPLE          reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    IF              reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    FOR             reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    WHILE           reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    PRINT           reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    PRINTLN         reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    $end            reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    ELSE            reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    CLLAVE          reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)
    CPAR            reduce using rule 127 (condicion -> compmiembro comparador compmiembro .)


state 157

    (117) compmiembro -> ID .
    (27) funcion -> ID . PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> ID . PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> ID . PUNTO SIZE
    (30) funcion -> ID . PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> ID . PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> ID . PUNTO ISEMPTY APAR CPAR
    (33) funcion -> ID . PUNTO TOLIST APAR CPAR
    (34) funcion -> ID . PUNTO TOSTRING APAR CPAR
    (35) funcion -> ID . PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> ID . PUNTO SLICE APAR error CPAR
    (39) funcion -> ID . PUNTO INDEXOF APAR factorEspecial CPAR

    AND             reduce using rule 117 (compmiembro -> ID .)
    OR              reduce using rule 117 (compmiembro -> ID .)
    PUNTOCOMA       reduce using rule 117 (compmiembro -> ID .)
    VAL             reduce using rule 117 (compmiembro -> ID .)
    VAR             reduce using rule 117 (compmiembro -> ID .)
    ID              reduce using rule 117 (compmiembro -> ID .)
    ENTEROEXPRESION reduce using rule 117 (compmiembro -> ID .)
    NEGACION        reduce using rule 117 (compmiembro -> ID .)
    APAR            reduce using rule 117 (compmiembro -> ID .)
    TRUE            reduce using rule 117 (compmiembro -> ID .)
    FALSE           reduce using rule 117 (compmiembro -> ID .)
    COMDOBLE        reduce using rule 117 (compmiembro -> ID .)
    LISTOF          reduce using rule 117 (compmiembro -> ID .)
    SETOF           reduce using rule 117 (compmiembro -> ID .)
    PAIR            reduce using rule 117 (compmiembro -> ID .)
    TRIPLE          reduce using rule 117 (compmiembro -> ID .)
    IF              reduce using rule 117 (compmiembro -> ID .)
    FOR             reduce using rule 117 (compmiembro -> ID .)
    WHILE           reduce using rule 117 (compmiembro -> ID .)
    PRINT           reduce using rule 117 (compmiembro -> ID .)
    PRINTLN         reduce using rule 117 (compmiembro -> ID .)
    $end            reduce using rule 117 (compmiembro -> ID .)
    ELSE            reduce using rule 117 (compmiembro -> ID .)
    CLLAVE          reduce using rule 117 (compmiembro -> ID .)
    CPAR            reduce using rule 117 (compmiembro -> ID .)
    PUNTO           shift and go to state 52


state 158

    (120) compmiembro -> funcion .

    AND             reduce using rule 120 (compmiembro -> funcion .)
    OR              reduce using rule 120 (compmiembro -> funcion .)
    PUNTOCOMA       reduce using rule 120 (compmiembro -> funcion .)
    VAL             reduce using rule 120 (compmiembro -> funcion .)
    VAR             reduce using rule 120 (compmiembro -> funcion .)
    ID              reduce using rule 120 (compmiembro -> funcion .)
    ENTEROEXPRESION reduce using rule 120 (compmiembro -> funcion .)
    NEGACION        reduce using rule 120 (compmiembro -> funcion .)
    APAR            reduce using rule 120 (compmiembro -> funcion .)
    TRUE            reduce using rule 120 (compmiembro -> funcion .)
    FALSE           reduce using rule 120 (compmiembro -> funcion .)
    COMDOBLE        reduce using rule 120 (compmiembro -> funcion .)
    LISTOF          reduce using rule 120 (compmiembro -> funcion .)
    SETOF           reduce using rule 120 (compmiembro -> funcion .)
    PAIR            reduce using rule 120 (compmiembro -> funcion .)
    TRIPLE          reduce using rule 120 (compmiembro -> funcion .)
    IF              reduce using rule 120 (compmiembro -> funcion .)
    FOR             reduce using rule 120 (compmiembro -> funcion .)
    WHILE           reduce using rule 120 (compmiembro -> funcion .)
    PRINT           reduce using rule 120 (compmiembro -> funcion .)
    PRINTLN         reduce using rule 120 (compmiembro -> funcion .)
    $end            reduce using rule 120 (compmiembro -> funcion .)
    ELSE            reduce using rule 120 (compmiembro -> funcion .)
    CLLAVE          reduce using rule 120 (compmiembro -> funcion .)
    CPAR            reduce using rule 120 (compmiembro -> funcion .)


state 159

    (121) compmiembro -> expresionBooleano .

    AND             reduce using rule 121 (compmiembro -> expresionBooleano .)
    OR              reduce using rule 121 (compmiembro -> expresionBooleano .)
    PUNTOCOMA       reduce using rule 121 (compmiembro -> expresionBooleano .)
    VAL             reduce using rule 121 (compmiembro -> expresionBooleano .)
    VAR             reduce using rule 121 (compmiembro -> expresionBooleano .)
    ID              reduce using rule 121 (compmiembro -> expresionBooleano .)
    ENTEROEXPRESION reduce using rule 121 (compmiembro -> expresionBooleano .)
    NEGACION        reduce using rule 121 (compmiembro -> expresionBooleano .)
    APAR            reduce using rule 121 (compmiembro -> expresionBooleano .)
    TRUE            reduce using rule 121 (compmiembro -> expresionBooleano .)
    FALSE           reduce using rule 121 (compmiembro -> expresionBooleano .)
    COMDOBLE        reduce using rule 121 (compmiembro -> expresionBooleano .)
    LISTOF          reduce using rule 121 (compmiembro -> expresionBooleano .)
    SETOF           reduce using rule 121 (compmiembro -> expresionBooleano .)
    PAIR            reduce using rule 121 (compmiembro -> expresionBooleano .)
    TRIPLE          reduce using rule 121 (compmiembro -> expresionBooleano .)
    IF              reduce using rule 121 (compmiembro -> expresionBooleano .)
    FOR             reduce using rule 121 (compmiembro -> expresionBooleano .)
    WHILE           reduce using rule 121 (compmiembro -> expresionBooleano .)
    PRINT           reduce using rule 121 (compmiembro -> expresionBooleano .)
    PRINTLN         reduce using rule 121 (compmiembro -> expresionBooleano .)
    $end            reduce using rule 121 (compmiembro -> expresionBooleano .)
    ELSE            reduce using rule 121 (compmiembro -> expresionBooleano .)
    CLLAVE          reduce using rule 121 (compmiembro -> expresionBooleano .)
    CPAR            reduce using rule 121 (compmiembro -> expresionBooleano .)


state 160

    (122) compmiembro -> NEGACION . compmiembro
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR

    ID              shift and go to state 157
    ENTEROEXPRESION shift and go to state 71
    NEGACION        shift and go to state 160
    COMDOBLE        shift and go to state 33
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    compmiembro                    shift and go to state 217
    CADENAEXPRESION                shift and go to state 70
    funcion                        shift and go to state 158
    expresionBooleano              shift and go to state 159
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24

state 161

    (11) print -> printType APAR CADENAEXPRESION . CPAR
    (26) funcion -> CADENAEXPRESION . PUNTO HASHCODE APAR CPAR
    (22) funcionCompare -> CADENAEXPRESION . PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> CADENAEXPRESION . PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> CADENAEXPRESION . PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> CADENAEXPRESION . PUNTO GET APAR error CPAR
    (118) compmiembro -> CADENAEXPRESION .
    (97) termino -> CADENAEXPRESION .

  ! shift/reduce conflict for CPAR resolved as shift
    CPAR            shift and go to state 218
    PUNTO           shift and go to state 58
    IGUALIGUAL      reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    NOIGUAL         reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    MAYOR           reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    MENOR           reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    MAYORIGUAL      reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    MENORIGUAL      reduce using rule 118 (compmiembro -> CADENAEXPRESION .)
    SUMA            reduce using rule 97 (termino -> CADENAEXPRESION .)
    RESTA           reduce using rule 97 (termino -> CADENAEXPRESION .)
    MULT            reduce using rule 97 (termino -> CADENAEXPRESION .)
    DIVISION        reduce using rule 97 (termino -> CADENAEXPRESION .)
    MODULO          reduce using rule 97 (termino -> CADENAEXPRESION .)

  ! CPAR            [ reduce using rule 97 (termino -> CADENAEXPRESION .) ]


state 162

    (12) print -> printType APAR CPAR .

    PUNTOCOMA       reduce using rule 12 (print -> printType APAR CPAR .)
    VAL             reduce using rule 12 (print -> printType APAR CPAR .)
    VAR             reduce using rule 12 (print -> printType APAR CPAR .)
    ID              reduce using rule 12 (print -> printType APAR CPAR .)
    ENTEROEXPRESION reduce using rule 12 (print -> printType APAR CPAR .)
    NEGACION        reduce using rule 12 (print -> printType APAR CPAR .)
    APAR            reduce using rule 12 (print -> printType APAR CPAR .)
    TRUE            reduce using rule 12 (print -> printType APAR CPAR .)
    FALSE           reduce using rule 12 (print -> printType APAR CPAR .)
    COMDOBLE        reduce using rule 12 (print -> printType APAR CPAR .)
    LISTOF          reduce using rule 12 (print -> printType APAR CPAR .)
    SETOF           reduce using rule 12 (print -> printType APAR CPAR .)
    PAIR            reduce using rule 12 (print -> printType APAR CPAR .)
    TRIPLE          reduce using rule 12 (print -> printType APAR CPAR .)
    IF              reduce using rule 12 (print -> printType APAR CPAR .)
    FOR             reduce using rule 12 (print -> printType APAR CPAR .)
    WHILE           reduce using rule 12 (print -> printType APAR CPAR .)
    PRINT           reduce using rule 12 (print -> printType APAR CPAR .)
    PRINTLN         reduce using rule 12 (print -> printType APAR CPAR .)
    $end            reduce using rule 12 (print -> printType APAR CPAR .)
    ELSE            reduce using rule 12 (print -> printType APAR CPAR .)
    CLLAVE          reduce using rule 12 (print -> printType APAR CPAR .)


state 163

    (13) print -> printType APAR ID . CPAR
    (27) funcion -> ID . PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> ID . PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> ID . PUNTO SIZE
    (30) funcion -> ID . PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> ID . PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> ID . PUNTO ISEMPTY APAR CPAR
    (33) funcion -> ID . PUNTO TOLIST APAR CPAR
    (34) funcion -> ID . PUNTO TOSTRING APAR CPAR
    (35) funcion -> ID . PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> ID . PUNTO SLICE APAR error CPAR
    (39) funcion -> ID . PUNTO INDEXOF APAR factorEspecial CPAR
    (117) compmiembro -> ID .
    (123) compsolo -> ID .
    (100) termino -> ID .
    (103) factor -> ID .

  ! shift/reduce conflict for CPAR resolved as shift
  ! shift/reduce conflict for CPAR resolved as shift
  ! reduce/reduce conflict for SUMA resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for RESTA resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for MULT resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for DIVISION resolved using rule 100 (termino -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 100 (termino -> ID .)
  ! shift/reduce conflict for CPAR resolved as shift
    CPAR            shift and go to state 219
    PUNTO           shift and go to state 52
    IGUALIGUAL      reduce using rule 117 (compmiembro -> ID .)
    NOIGUAL         reduce using rule 117 (compmiembro -> ID .)
    MAYOR           reduce using rule 117 (compmiembro -> ID .)
    MENOR           reduce using rule 117 (compmiembro -> ID .)
    MAYORIGUAL      reduce using rule 117 (compmiembro -> ID .)
    MENORIGUAL      reduce using rule 117 (compmiembro -> ID .)
    AND             reduce using rule 123 (compsolo -> ID .)
    OR              reduce using rule 123 (compsolo -> ID .)
    SUMA            reduce using rule 100 (termino -> ID .)
    RESTA           reduce using rule 100 (termino -> ID .)
    MULT            reduce using rule 100 (termino -> ID .)
    DIVISION        reduce using rule 100 (termino -> ID .)
    MODULO          reduce using rule 100 (termino -> ID .)

  ! CPAR            [ reduce using rule 123 (compsolo -> ID .) ]
  ! CPAR            [ reduce using rule 100 (termino -> ID .) ]
  ! SUMA            [ reduce using rule 103 (factor -> ID .) ]
  ! RESTA           [ reduce using rule 103 (factor -> ID .) ]
  ! MULT            [ reduce using rule 103 (factor -> ID .) ]
  ! DIVISION        [ reduce using rule 103 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 103 (factor -> ID .) ]
  ! CPAR            [ reduce using rule 103 (factor -> ID .) ]


state 164

    (14) print -> printType APAR funcion . CPAR
    (120) compmiembro -> funcion .
    (125) compsolo -> funcion .

  ! shift/reduce conflict for CPAR resolved as shift
    CPAR            shift and go to state 220
    IGUALIGUAL      reduce using rule 120 (compmiembro -> funcion .)
    NOIGUAL         reduce using rule 120 (compmiembro -> funcion .)
    MAYOR           reduce using rule 120 (compmiembro -> funcion .)
    MENOR           reduce using rule 120 (compmiembro -> funcion .)
    MAYORIGUAL      reduce using rule 120 (compmiembro -> funcion .)
    MENORIGUAL      reduce using rule 120 (compmiembro -> funcion .)
    AND             reduce using rule 125 (compsolo -> funcion .)
    OR              reduce using rule 125 (compsolo -> funcion .)

  ! CPAR            [ reduce using rule 125 (compsolo -> funcion .) ]


state 165

    (15) print -> printType APAR condicion . CPAR
    (130) condicion -> condicion . conector condicion
    (115) conector -> . AND
    (116) conector -> . OR

    CPAR            shift and go to state 221
    AND             shift and go to state 48
    OR              shift and go to state 49

    conector                       shift and go to state 47

state 166

    (16) print -> printType APAR expresion . CPAR
    (83) expresion -> expresion . SUMA termino
    (84) expresion -> expresion . RESTA termino
    (85) expresion -> expresion . DIVISION termino
    (86) expresion -> expresion . MULT termino
    (87) expresion -> expresion . MODULO termino

    CPAR            shift and go to state 222
    SUMA            shift and go to state 59
    RESTA           shift and go to state 60
    DIVISION        shift and go to state 61
    MULT            shift and go to state 62
    MODULO          shift and go to state 63


state 167

    (17) print -> printType APAR error . CPAR

    CPAR            shift and go to state 223


state 168

    (150) CADENAEXPRESION -> COMDOBLE content COMDOBLE .

    PUNTO           reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    PUNTOCOMA       reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    VAL             reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    VAR             reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    ID              reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    ENTEROEXPRESION reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    NEGACION        reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    APAR            reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    TRUE            reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    FALSE           reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    COMDOBLE        reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    LISTOF          reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    SETOF           reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    PAIR            reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    TRIPLE          reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    IF              reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    FOR             reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    WHILE           reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    PRINT           reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    PRINTLN         reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    $end            reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    IGUALIGUAL      reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    NOIGUAL         reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    MAYOR           reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    MENOR           reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    MAYORIGUAL      reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    MENORIGUAL      reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    SUMA            reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    RESTA           reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    MULT            reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    DIVISION        reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    MODULO          reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    CPAR            reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    ELSE            reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    CLLAVE          reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    AND             reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    OR              reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)
    COMA            reduce using rule 150 (CADENAEXPRESION -> COMDOBLE content COMDOBLE .)


state 169

    (162) content -> content content .
    (162) content -> content . content
    (152) content -> . SIGNODOLAR ID
    (153) content -> . ID
    (154) content -> . ENTEROEXPRESION
    (155) content -> . PUNTO
    (156) content -> . PUNTOPUNTO
    (157) content -> . comparador
    (158) content -> . SYMBOL
    (159) content -> . COMA
    (160) content -> . PUNTOCOMA
    (161) content -> . DOSPUNTOS
    (162) content -> . content content
    (109) comparador -> . IGUALIGUAL
    (110) comparador -> . NOIGUAL
    (111) comparador -> . MAYOR
    (112) comparador -> . MENOR
    (113) comparador -> . MAYORIGUAL
    (114) comparador -> . MENORIGUAL

  ! shift/reduce conflict for SIGNODOLAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTEROEXPRESION resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for PUNTOPUNTO resolved as shift
  ! shift/reduce conflict for SYMBOL resolved as shift
  ! shift/reduce conflict for COMA resolved as shift
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for DOSPUNTOS resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
    COMDOBLE        reduce using rule 162 (content -> content content .)
    SIGNODOLAR      shift and go to state 93
    ID              shift and go to state 94
    ENTEROEXPRESION shift and go to state 95
    PUNTO           shift and go to state 96
    PUNTOPUNTO      shift and go to state 97
    SYMBOL          shift and go to state 99
    COMA            shift and go to state 100
    PUNTOCOMA       shift and go to state 101
    DOSPUNTOS       shift and go to state 102
    IGUALIGUAL      shift and go to state 84
    NOIGUAL         shift and go to state 85
    MAYOR           shift and go to state 86
    MENOR           shift and go to state 87
    MAYORIGUAL      shift and go to state 88
    MENORIGUAL      shift and go to state 89

  ! SIGNODOLAR      [ reduce using rule 162 (content -> content content .) ]
  ! ID              [ reduce using rule 162 (content -> content content .) ]
  ! ENTEROEXPRESION [ reduce using rule 162 (content -> content content .) ]
  ! PUNTO           [ reduce using rule 162 (content -> content content .) ]
  ! PUNTOPUNTO      [ reduce using rule 162 (content -> content content .) ]
  ! SYMBOL          [ reduce using rule 162 (content -> content content .) ]
  ! COMA            [ reduce using rule 162 (content -> content content .) ]
  ! PUNTOCOMA       [ reduce using rule 162 (content -> content content .) ]
  ! DOSPUNTOS       [ reduce using rule 162 (content -> content content .) ]
  ! IGUALIGUAL      [ reduce using rule 162 (content -> content content .) ]
  ! NOIGUAL         [ reduce using rule 162 (content -> content content .) ]
  ! MAYOR           [ reduce using rule 162 (content -> content content .) ]
  ! MENOR           [ reduce using rule 162 (content -> content content .) ]
  ! MAYORIGUAL      [ reduce using rule 162 (content -> content content .) ]
  ! MENORIGUAL      [ reduce using rule 162 (content -> content content .) ]

    content                        shift and go to state 169
    comparador                     shift and go to state 98

state 170

    (152) content -> SIGNODOLAR ID .

    COMDOBLE        reduce using rule 152 (content -> SIGNODOLAR ID .)
    SIGNODOLAR      reduce using rule 152 (content -> SIGNODOLAR ID .)
    ID              reduce using rule 152 (content -> SIGNODOLAR ID .)
    ENTEROEXPRESION reduce using rule 152 (content -> SIGNODOLAR ID .)
    PUNTO           reduce using rule 152 (content -> SIGNODOLAR ID .)
    PUNTOPUNTO      reduce using rule 152 (content -> SIGNODOLAR ID .)
    SYMBOL          reduce using rule 152 (content -> SIGNODOLAR ID .)
    COMA            reduce using rule 152 (content -> SIGNODOLAR ID .)
    PUNTOCOMA       reduce using rule 152 (content -> SIGNODOLAR ID .)
    DOSPUNTOS       reduce using rule 152 (content -> SIGNODOLAR ID .)
    IGUALIGUAL      reduce using rule 152 (content -> SIGNODOLAR ID .)
    NOIGUAL         reduce using rule 152 (content -> SIGNODOLAR ID .)
    MAYOR           reduce using rule 152 (content -> SIGNODOLAR ID .)
    MENOR           reduce using rule 152 (content -> SIGNODOLAR ID .)
    MAYORIGUAL      reduce using rule 152 (content -> SIGNODOLAR ID .)
    MENORIGUAL      reduce using rule 152 (content -> SIGNODOLAR ID .)


state 171

    (73) list -> LISTOF APAR contenido . CPAR

    CPAR            shift and go to state 224


state 172

    (74) list -> LISTOF APAR error . CPAR
    (76) set -> LISTOF APAR error . CPAR
    (78) pair -> LISTOF APAR error . CPAR
    (80) triple -> LISTOF APAR error . CPAR

    CPAR            shift and go to state 225


state 173

    (81) contenido -> factorEspecial .
    (82) contenido -> factorEspecial . COMA contenido

    CPAR            reduce using rule 81 (contenido -> factorEspecial .)
    COMA            shift and go to state 226


state 174

    (104) factorEspecial -> factor .

    COMA            reduce using rule 104 (factorEspecial -> factor .)
    CPAR            reduce using rule 104 (factorEspecial -> factor .)
    SUMA            reduce using rule 104 (factorEspecial -> factor .)
    RESTA           reduce using rule 104 (factorEspecial -> factor .)
    MULT            reduce using rule 104 (factorEspecial -> factor .)
    DIVISION        reduce using rule 104 (factorEspecial -> factor .)
    MODULO          reduce using rule 104 (factorEspecial -> factor .)
    PUNTOCOMA       reduce using rule 104 (factorEspecial -> factor .)
    VAL             reduce using rule 104 (factorEspecial -> factor .)
    VAR             reduce using rule 104 (factorEspecial -> factor .)
    ID              reduce using rule 104 (factorEspecial -> factor .)
    ENTEROEXPRESION reduce using rule 104 (factorEspecial -> factor .)
    NEGACION        reduce using rule 104 (factorEspecial -> factor .)
    APAR            reduce using rule 104 (factorEspecial -> factor .)
    TRUE            reduce using rule 104 (factorEspecial -> factor .)
    FALSE           reduce using rule 104 (factorEspecial -> factor .)
    COMDOBLE        reduce using rule 104 (factorEspecial -> factor .)
    LISTOF          reduce using rule 104 (factorEspecial -> factor .)
    SETOF           reduce using rule 104 (factorEspecial -> factor .)
    PAIR            reduce using rule 104 (factorEspecial -> factor .)
    TRIPLE          reduce using rule 104 (factorEspecial -> factor .)
    IF              reduce using rule 104 (factorEspecial -> factor .)
    FOR             reduce using rule 104 (factorEspecial -> factor .)
    WHILE           reduce using rule 104 (factorEspecial -> factor .)
    PRINT           reduce using rule 104 (factorEspecial -> factor .)
    PRINTLN         reduce using rule 104 (factorEspecial -> factor .)
    $end            reduce using rule 104 (factorEspecial -> factor .)
    ELSE            reduce using rule 104 (factorEspecial -> factor .)
    CLLAVE          reduce using rule 104 (factorEspecial -> factor .)


state 175

    (105) factorEspecial -> CADENAEXPRESION .

    COMA            reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    CPAR            reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    SUMA            reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    RESTA           reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    MULT            reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    DIVISION        reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    MODULO          reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    PUNTOCOMA       reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    VAL             reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    VAR             reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    ID              reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    ENTEROEXPRESION reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    NEGACION        reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    APAR            reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    TRUE            reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    FALSE           reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    COMDOBLE        reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    LISTOF          reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    SETOF           reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    PAIR            reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    TRIPLE          reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    IF              reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    FOR             reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    WHILE           reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    PRINT           reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    PRINTLN         reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    $end            reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    ELSE            reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)
    CLLAVE          reduce using rule 105 (factorEspecial -> CADENAEXPRESION .)


state 176

    (106) factorEspecial -> list .

    COMA            reduce using rule 106 (factorEspecial -> list .)
    CPAR            reduce using rule 106 (factorEspecial -> list .)
    SUMA            reduce using rule 106 (factorEspecial -> list .)
    RESTA           reduce using rule 106 (factorEspecial -> list .)
    MULT            reduce using rule 106 (factorEspecial -> list .)
    DIVISION        reduce using rule 106 (factorEspecial -> list .)
    MODULO          reduce using rule 106 (factorEspecial -> list .)
    PUNTOCOMA       reduce using rule 106 (factorEspecial -> list .)
    VAL             reduce using rule 106 (factorEspecial -> list .)
    VAR             reduce using rule 106 (factorEspecial -> list .)
    ID              reduce using rule 106 (factorEspecial -> list .)
    ENTEROEXPRESION reduce using rule 106 (factorEspecial -> list .)
    NEGACION        reduce using rule 106 (factorEspecial -> list .)
    APAR            reduce using rule 106 (factorEspecial -> list .)
    TRUE            reduce using rule 106 (factorEspecial -> list .)
    FALSE           reduce using rule 106 (factorEspecial -> list .)
    COMDOBLE        reduce using rule 106 (factorEspecial -> list .)
    LISTOF          reduce using rule 106 (factorEspecial -> list .)
    SETOF           reduce using rule 106 (factorEspecial -> list .)
    PAIR            reduce using rule 106 (factorEspecial -> list .)
    TRIPLE          reduce using rule 106 (factorEspecial -> list .)
    IF              reduce using rule 106 (factorEspecial -> list .)
    FOR             reduce using rule 106 (factorEspecial -> list .)
    WHILE           reduce using rule 106 (factorEspecial -> list .)
    PRINT           reduce using rule 106 (factorEspecial -> list .)
    PRINTLN         reduce using rule 106 (factorEspecial -> list .)
    $end            reduce using rule 106 (factorEspecial -> list .)
    ELSE            reduce using rule 106 (factorEspecial -> list .)
    CLLAVE          reduce using rule 106 (factorEspecial -> list .)


state 177

    (107) factorEspecial -> set .

    COMA            reduce using rule 107 (factorEspecial -> set .)
    CPAR            reduce using rule 107 (factorEspecial -> set .)
    SUMA            reduce using rule 107 (factorEspecial -> set .)
    RESTA           reduce using rule 107 (factorEspecial -> set .)
    MULT            reduce using rule 107 (factorEspecial -> set .)
    DIVISION        reduce using rule 107 (factorEspecial -> set .)
    MODULO          reduce using rule 107 (factorEspecial -> set .)
    PUNTOCOMA       reduce using rule 107 (factorEspecial -> set .)
    VAL             reduce using rule 107 (factorEspecial -> set .)
    VAR             reduce using rule 107 (factorEspecial -> set .)
    ID              reduce using rule 107 (factorEspecial -> set .)
    ENTEROEXPRESION reduce using rule 107 (factorEspecial -> set .)
    NEGACION        reduce using rule 107 (factorEspecial -> set .)
    APAR            reduce using rule 107 (factorEspecial -> set .)
    TRUE            reduce using rule 107 (factorEspecial -> set .)
    FALSE           reduce using rule 107 (factorEspecial -> set .)
    COMDOBLE        reduce using rule 107 (factorEspecial -> set .)
    LISTOF          reduce using rule 107 (factorEspecial -> set .)
    SETOF           reduce using rule 107 (factorEspecial -> set .)
    PAIR            reduce using rule 107 (factorEspecial -> set .)
    TRIPLE          reduce using rule 107 (factorEspecial -> set .)
    IF              reduce using rule 107 (factorEspecial -> set .)
    FOR             reduce using rule 107 (factorEspecial -> set .)
    WHILE           reduce using rule 107 (factorEspecial -> set .)
    PRINT           reduce using rule 107 (factorEspecial -> set .)
    PRINTLN         reduce using rule 107 (factorEspecial -> set .)
    $end            reduce using rule 107 (factorEspecial -> set .)
    ELSE            reduce using rule 107 (factorEspecial -> set .)
    CLLAVE          reduce using rule 107 (factorEspecial -> set .)


state 178

    (101) factor -> ENTEROEXPRESION .
    (70) flotante -> ENTEROEXPRESION . F
    (71) flotante -> ENTEROEXPRESION . PUNTO ENTEROEXPRESION F
    (72) flotante -> ENTEROEXPRESION . error F

    COMA            reduce using rule 101 (factor -> ENTEROEXPRESION .)
    CPAR            reduce using rule 101 (factor -> ENTEROEXPRESION .)
    SUMA            reduce using rule 101 (factor -> ENTEROEXPRESION .)
    RESTA           reduce using rule 101 (factor -> ENTEROEXPRESION .)
    MULT            reduce using rule 101 (factor -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 101 (factor -> ENTEROEXPRESION .)
    MODULO          reduce using rule 101 (factor -> ENTEROEXPRESION .)
    PUNTOCOMA       reduce using rule 101 (factor -> ENTEROEXPRESION .)
    VAL             reduce using rule 101 (factor -> ENTEROEXPRESION .)
    VAR             reduce using rule 101 (factor -> ENTEROEXPRESION .)
    ID              reduce using rule 101 (factor -> ENTEROEXPRESION .)
    ENTEROEXPRESION reduce using rule 101 (factor -> ENTEROEXPRESION .)
    NEGACION        reduce using rule 101 (factor -> ENTEROEXPRESION .)
    APAR            reduce using rule 101 (factor -> ENTEROEXPRESION .)
    TRUE            reduce using rule 101 (factor -> ENTEROEXPRESION .)
    FALSE           reduce using rule 101 (factor -> ENTEROEXPRESION .)
    COMDOBLE        reduce using rule 101 (factor -> ENTEROEXPRESION .)
    LISTOF          reduce using rule 101 (factor -> ENTEROEXPRESION .)
    SETOF           reduce using rule 101 (factor -> ENTEROEXPRESION .)
    PAIR            reduce using rule 101 (factor -> ENTEROEXPRESION .)
    TRIPLE          reduce using rule 101 (factor -> ENTEROEXPRESION .)
    IF              reduce using rule 101 (factor -> ENTEROEXPRESION .)
    FOR             reduce using rule 101 (factor -> ENTEROEXPRESION .)
    WHILE           reduce using rule 101 (factor -> ENTEROEXPRESION .)
    PRINT           reduce using rule 101 (factor -> ENTEROEXPRESION .)
    PRINTLN         reduce using rule 101 (factor -> ENTEROEXPRESION .)
    $end            reduce using rule 101 (factor -> ENTEROEXPRESION .)
    ELSE            reduce using rule 101 (factor -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 101 (factor -> ENTEROEXPRESION .)
    F               shift and go to state 55
    PUNTO           shift and go to state 56
    error           shift and go to state 57


state 179

    (102) factor -> flotante .

    COMA            reduce using rule 102 (factor -> flotante .)
    CPAR            reduce using rule 102 (factor -> flotante .)
    SUMA            reduce using rule 102 (factor -> flotante .)
    RESTA           reduce using rule 102 (factor -> flotante .)
    MULT            reduce using rule 102 (factor -> flotante .)
    DIVISION        reduce using rule 102 (factor -> flotante .)
    MODULO          reduce using rule 102 (factor -> flotante .)
    PUNTOCOMA       reduce using rule 102 (factor -> flotante .)
    VAL             reduce using rule 102 (factor -> flotante .)
    VAR             reduce using rule 102 (factor -> flotante .)
    ID              reduce using rule 102 (factor -> flotante .)
    ENTEROEXPRESION reduce using rule 102 (factor -> flotante .)
    NEGACION        reduce using rule 102 (factor -> flotante .)
    APAR            reduce using rule 102 (factor -> flotante .)
    TRUE            reduce using rule 102 (factor -> flotante .)
    FALSE           reduce using rule 102 (factor -> flotante .)
    COMDOBLE        reduce using rule 102 (factor -> flotante .)
    LISTOF          reduce using rule 102 (factor -> flotante .)
    SETOF           reduce using rule 102 (factor -> flotante .)
    PAIR            reduce using rule 102 (factor -> flotante .)
    TRIPLE          reduce using rule 102 (factor -> flotante .)
    IF              reduce using rule 102 (factor -> flotante .)
    FOR             reduce using rule 102 (factor -> flotante .)
    WHILE           reduce using rule 102 (factor -> flotante .)
    PRINT           reduce using rule 102 (factor -> flotante .)
    PRINTLN         reduce using rule 102 (factor -> flotante .)
    $end            reduce using rule 102 (factor -> flotante .)
    ELSE            reduce using rule 102 (factor -> flotante .)
    CLLAVE          reduce using rule 102 (factor -> flotante .)


state 180

    (103) factor -> ID .

    COMA            reduce using rule 103 (factor -> ID .)
    CPAR            reduce using rule 103 (factor -> ID .)
    SUMA            reduce using rule 103 (factor -> ID .)
    RESTA           reduce using rule 103 (factor -> ID .)
    MULT            reduce using rule 103 (factor -> ID .)
    DIVISION        reduce using rule 103 (factor -> ID .)
    MODULO          reduce using rule 103 (factor -> ID .)
    PUNTOCOMA       reduce using rule 103 (factor -> ID .)
    VAL             reduce using rule 103 (factor -> ID .)
    VAR             reduce using rule 103 (factor -> ID .)
    ID              reduce using rule 103 (factor -> ID .)
    ENTEROEXPRESION reduce using rule 103 (factor -> ID .)
    NEGACION        reduce using rule 103 (factor -> ID .)
    APAR            reduce using rule 103 (factor -> ID .)
    TRUE            reduce using rule 103 (factor -> ID .)
    FALSE           reduce using rule 103 (factor -> ID .)
    COMDOBLE        reduce using rule 103 (factor -> ID .)
    LISTOF          reduce using rule 103 (factor -> ID .)
    SETOF           reduce using rule 103 (factor -> ID .)
    PAIR            reduce using rule 103 (factor -> ID .)
    TRIPLE          reduce using rule 103 (factor -> ID .)
    IF              reduce using rule 103 (factor -> ID .)
    FOR             reduce using rule 103 (factor -> ID .)
    WHILE           reduce using rule 103 (factor -> ID .)
    PRINT           reduce using rule 103 (factor -> ID .)
    PRINTLN         reduce using rule 103 (factor -> ID .)
    $end            reduce using rule 103 (factor -> ID .)
    ELSE            reduce using rule 103 (factor -> ID .)
    CLLAVE          reduce using rule 103 (factor -> ID .)


state 181

    (75) set -> SETOF APAR contenido . CPAR

    CPAR            shift and go to state 227


state 182

    (77) pair -> PAIR APAR factorEspecial . COMA factorEspecial CPAR

    COMA            shift and go to state 228


state 183

    (79) triple -> TRIPLE APAR factorEspecial . COMA factorEspecial COMA factorEspecial CPAR

    COMA            shift and go to state 229


state 184

    (89) termino -> termino SUMA factorEspecial .

    SUMA            reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    RESTA           reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    MULT            reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    DIVISION        reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    MODULO          reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    PUNTOCOMA       reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    VAL             reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    VAR             reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    ID              reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    ENTEROEXPRESION reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    NEGACION        reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    APAR            reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    TRUE            reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    FALSE           reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    COMDOBLE        reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    LISTOF          reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    SETOF           reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    PAIR            reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    TRIPLE          reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    IF              reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    FOR             reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    WHILE           reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    PRINT           reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    PRINTLN         reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    $end            reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    CPAR            reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    ELSE            reduce using rule 89 (termino -> termino SUMA factorEspecial .)
    CLLAVE          reduce using rule 89 (termino -> termino SUMA factorEspecial .)


state 185

    (90) termino -> termino RESTA factor .

    SUMA            reduce using rule 90 (termino -> termino RESTA factor .)
    RESTA           reduce using rule 90 (termino -> termino RESTA factor .)
    MULT            reduce using rule 90 (termino -> termino RESTA factor .)
    DIVISION        reduce using rule 90 (termino -> termino RESTA factor .)
    MODULO          reduce using rule 90 (termino -> termino RESTA factor .)
    PUNTOCOMA       reduce using rule 90 (termino -> termino RESTA factor .)
    VAL             reduce using rule 90 (termino -> termino RESTA factor .)
    VAR             reduce using rule 90 (termino -> termino RESTA factor .)
    ID              reduce using rule 90 (termino -> termino RESTA factor .)
    ENTEROEXPRESION reduce using rule 90 (termino -> termino RESTA factor .)
    NEGACION        reduce using rule 90 (termino -> termino RESTA factor .)
    APAR            reduce using rule 90 (termino -> termino RESTA factor .)
    TRUE            reduce using rule 90 (termino -> termino RESTA factor .)
    FALSE           reduce using rule 90 (termino -> termino RESTA factor .)
    COMDOBLE        reduce using rule 90 (termino -> termino RESTA factor .)
    LISTOF          reduce using rule 90 (termino -> termino RESTA factor .)
    SETOF           reduce using rule 90 (termino -> termino RESTA factor .)
    PAIR            reduce using rule 90 (termino -> termino RESTA factor .)
    TRIPLE          reduce using rule 90 (termino -> termino RESTA factor .)
    IF              reduce using rule 90 (termino -> termino RESTA factor .)
    FOR             reduce using rule 90 (termino -> termino RESTA factor .)
    WHILE           reduce using rule 90 (termino -> termino RESTA factor .)
    PRINT           reduce using rule 90 (termino -> termino RESTA factor .)
    PRINTLN         reduce using rule 90 (termino -> termino RESTA factor .)
    $end            reduce using rule 90 (termino -> termino RESTA factor .)
    CPAR            reduce using rule 90 (termino -> termino RESTA factor .)
    ELSE            reduce using rule 90 (termino -> termino RESTA factor .)
    CLLAVE          reduce using rule 90 (termino -> termino RESTA factor .)


state 186

    (91) termino -> termino MULT factor .

    SUMA            reduce using rule 91 (termino -> termino MULT factor .)
    RESTA           reduce using rule 91 (termino -> termino MULT factor .)
    MULT            reduce using rule 91 (termino -> termino MULT factor .)
    DIVISION        reduce using rule 91 (termino -> termino MULT factor .)
    MODULO          reduce using rule 91 (termino -> termino MULT factor .)
    PUNTOCOMA       reduce using rule 91 (termino -> termino MULT factor .)
    VAL             reduce using rule 91 (termino -> termino MULT factor .)
    VAR             reduce using rule 91 (termino -> termino MULT factor .)
    ID              reduce using rule 91 (termino -> termino MULT factor .)
    ENTEROEXPRESION reduce using rule 91 (termino -> termino MULT factor .)
    NEGACION        reduce using rule 91 (termino -> termino MULT factor .)
    APAR            reduce using rule 91 (termino -> termino MULT factor .)
    TRUE            reduce using rule 91 (termino -> termino MULT factor .)
    FALSE           reduce using rule 91 (termino -> termino MULT factor .)
    COMDOBLE        reduce using rule 91 (termino -> termino MULT factor .)
    LISTOF          reduce using rule 91 (termino -> termino MULT factor .)
    SETOF           reduce using rule 91 (termino -> termino MULT factor .)
    PAIR            reduce using rule 91 (termino -> termino MULT factor .)
    TRIPLE          reduce using rule 91 (termino -> termino MULT factor .)
    IF              reduce using rule 91 (termino -> termino MULT factor .)
    FOR             reduce using rule 91 (termino -> termino MULT factor .)
    WHILE           reduce using rule 91 (termino -> termino MULT factor .)
    PRINT           reduce using rule 91 (termino -> termino MULT factor .)
    PRINTLN         reduce using rule 91 (termino -> termino MULT factor .)
    $end            reduce using rule 91 (termino -> termino MULT factor .)
    CPAR            reduce using rule 91 (termino -> termino MULT factor .)
    ELSE            reduce using rule 91 (termino -> termino MULT factor .)
    CLLAVE          reduce using rule 91 (termino -> termino MULT factor .)


state 187

    (92) termino -> termino DIVISION factor .

    SUMA            reduce using rule 92 (termino -> termino DIVISION factor .)
    RESTA           reduce using rule 92 (termino -> termino DIVISION factor .)
    MULT            reduce using rule 92 (termino -> termino DIVISION factor .)
    DIVISION        reduce using rule 92 (termino -> termino DIVISION factor .)
    MODULO          reduce using rule 92 (termino -> termino DIVISION factor .)
    PUNTOCOMA       reduce using rule 92 (termino -> termino DIVISION factor .)
    VAL             reduce using rule 92 (termino -> termino DIVISION factor .)
    VAR             reduce using rule 92 (termino -> termino DIVISION factor .)
    ID              reduce using rule 92 (termino -> termino DIVISION factor .)
    ENTEROEXPRESION reduce using rule 92 (termino -> termino DIVISION factor .)
    NEGACION        reduce using rule 92 (termino -> termino DIVISION factor .)
    APAR            reduce using rule 92 (termino -> termino DIVISION factor .)
    TRUE            reduce using rule 92 (termino -> termino DIVISION factor .)
    FALSE           reduce using rule 92 (termino -> termino DIVISION factor .)
    COMDOBLE        reduce using rule 92 (termino -> termino DIVISION factor .)
    LISTOF          reduce using rule 92 (termino -> termino DIVISION factor .)
    SETOF           reduce using rule 92 (termino -> termino DIVISION factor .)
    PAIR            reduce using rule 92 (termino -> termino DIVISION factor .)
    TRIPLE          reduce using rule 92 (termino -> termino DIVISION factor .)
    IF              reduce using rule 92 (termino -> termino DIVISION factor .)
    FOR             reduce using rule 92 (termino -> termino DIVISION factor .)
    WHILE           reduce using rule 92 (termino -> termino DIVISION factor .)
    PRINT           reduce using rule 92 (termino -> termino DIVISION factor .)
    PRINTLN         reduce using rule 92 (termino -> termino DIVISION factor .)
    $end            reduce using rule 92 (termino -> termino DIVISION factor .)
    CPAR            reduce using rule 92 (termino -> termino DIVISION factor .)
    ELSE            reduce using rule 92 (termino -> termino DIVISION factor .)
    CLLAVE          reduce using rule 92 (termino -> termino DIVISION factor .)


state 188

    (93) termino -> termino MODULO factor .

    SUMA            reduce using rule 93 (termino -> termino MODULO factor .)
    RESTA           reduce using rule 93 (termino -> termino MODULO factor .)
    MULT            reduce using rule 93 (termino -> termino MODULO factor .)
    DIVISION        reduce using rule 93 (termino -> termino MODULO factor .)
    MODULO          reduce using rule 93 (termino -> termino MODULO factor .)
    PUNTOCOMA       reduce using rule 93 (termino -> termino MODULO factor .)
    VAL             reduce using rule 93 (termino -> termino MODULO factor .)
    VAR             reduce using rule 93 (termino -> termino MODULO factor .)
    ID              reduce using rule 93 (termino -> termino MODULO factor .)
    ENTEROEXPRESION reduce using rule 93 (termino -> termino MODULO factor .)
    NEGACION        reduce using rule 93 (termino -> termino MODULO factor .)
    APAR            reduce using rule 93 (termino -> termino MODULO factor .)
    TRUE            reduce using rule 93 (termino -> termino MODULO factor .)
    FALSE           reduce using rule 93 (termino -> termino MODULO factor .)
    COMDOBLE        reduce using rule 93 (termino -> termino MODULO factor .)
    LISTOF          reduce using rule 93 (termino -> termino MODULO factor .)
    SETOF           reduce using rule 93 (termino -> termino MODULO factor .)
    PAIR            reduce using rule 93 (termino -> termino MODULO factor .)
    TRIPLE          reduce using rule 93 (termino -> termino MODULO factor .)
    IF              reduce using rule 93 (termino -> termino MODULO factor .)
    FOR             reduce using rule 93 (termino -> termino MODULO factor .)
    WHILE           reduce using rule 93 (termino -> termino MODULO factor .)
    PRINT           reduce using rule 93 (termino -> termino MODULO factor .)
    PRINTLN         reduce using rule 93 (termino -> termino MODULO factor .)
    $end            reduce using rule 93 (termino -> termino MODULO factor .)
    CPAR            reduce using rule 93 (termino -> termino MODULO factor .)
    ELSE            reduce using rule 93 (termino -> termino MODULO factor .)
    CLLAVE          reduce using rule 93 (termino -> termino MODULO factor .)


state 189

    (137) if -> IF APAR condicion . CPAR cuerpo
    (138) if -> IF APAR condicion . CPAR cuerpo ELSE cuerpo
    (130) condicion -> condicion . conector condicion
    (115) conector -> . AND
    (116) conector -> . OR

    CPAR            shift and go to state 230
    AND             shift and go to state 48
    OR              shift and go to state 49

    conector                       shift and go to state 47

state 190

    (147) for -> FOR APAR APAR . ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> FOR APAR APAR . ID COMA ID CPAR IN ID CPAR cuerpo

    ID              shift and go to state 231


state 191

    (139) for -> FOR APAR ID . IN ID CPAR cuerpo
    (140) for -> FOR APAR ID . DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> FOR APAR ID . IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> FOR APAR ID . IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> FOR APAR ID . IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> FOR APAR ID . IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> FOR APAR ID . IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> FOR APAR ID . IN ID PUNTO ID CPAR cuerpo

    IN              shift and go to state 232
    DOSPUNTOS       shift and go to state 233


state 192

    (149) while -> WHILE APAR condicion . CPAR cuerpo
    (130) condicion -> condicion . conector condicion
    (115) conector -> . AND
    (116) conector -> . OR

    CPAR            shift and go to state 234
    AND             shift and go to state 48
    OR              shift and go to state 49

    conector                       shift and go to state 47

state 193

    (45) tipoAsignacion -> declaracion inicializacion .

    PUNTOCOMA       reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    VAL             reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    VAR             reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    ID              reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    ENTEROEXPRESION reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    NEGACION        reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    APAR            reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    TRUE            reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    FALSE           reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    COMDOBLE        reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    LISTOF          reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    SETOF           reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    PAIR            reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    TRIPLE          reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    IF              reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    FOR             reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    WHILE           reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    PRINT           reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    PRINTLN         reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    $end            reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    ELSE            reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)
    CLLAVE          reduce using rule 45 (tipoAsignacion -> declaracion inicializacion .)


state 194

    (46) declaracion -> DOSPUNTOS tipoDato .

    IGUAL           reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    PUNTOCOMA       reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    VAL             reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    VAR             reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    ID              reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    ENTEROEXPRESION reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    NEGACION        reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    APAR            reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    TRUE            reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    FALSE           reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    COMDOBLE        reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    LISTOF          reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    SETOF           reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    PAIR            reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    TRIPLE          reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    IF              reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    FOR             reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    WHILE           reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    PRINT           reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    PRINTLN         reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    $end            reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    ELSE            reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)
    CLLAVE          reduce using rule 46 (declaracion -> DOSPUNTOS tipoDato .)


state 195

    (48) tipoDato -> INT .

    IGUAL           reduce using rule 48 (tipoDato -> INT .)
    PUNTOCOMA       reduce using rule 48 (tipoDato -> INT .)
    VAL             reduce using rule 48 (tipoDato -> INT .)
    VAR             reduce using rule 48 (tipoDato -> INT .)
    ID              reduce using rule 48 (tipoDato -> INT .)
    ENTEROEXPRESION reduce using rule 48 (tipoDato -> INT .)
    NEGACION        reduce using rule 48 (tipoDato -> INT .)
    APAR            reduce using rule 48 (tipoDato -> INT .)
    TRUE            reduce using rule 48 (tipoDato -> INT .)
    FALSE           reduce using rule 48 (tipoDato -> INT .)
    COMDOBLE        reduce using rule 48 (tipoDato -> INT .)
    LISTOF          reduce using rule 48 (tipoDato -> INT .)
    SETOF           reduce using rule 48 (tipoDato -> INT .)
    PAIR            reduce using rule 48 (tipoDato -> INT .)
    TRIPLE          reduce using rule 48 (tipoDato -> INT .)
    IF              reduce using rule 48 (tipoDato -> INT .)
    FOR             reduce using rule 48 (tipoDato -> INT .)
    WHILE           reduce using rule 48 (tipoDato -> INT .)
    PRINT           reduce using rule 48 (tipoDato -> INT .)
    PRINTLN         reduce using rule 48 (tipoDato -> INT .)
    $end            reduce using rule 48 (tipoDato -> INT .)
    ELSE            reduce using rule 48 (tipoDato -> INT .)
    CLLAVE          reduce using rule 48 (tipoDato -> INT .)
    MAYOR           reduce using rule 48 (tipoDato -> INT .)
    COMA            reduce using rule 48 (tipoDato -> INT .)


state 196

    (49) tipoDato -> FLOAT .

    IGUAL           reduce using rule 49 (tipoDato -> FLOAT .)
    PUNTOCOMA       reduce using rule 49 (tipoDato -> FLOAT .)
    VAL             reduce using rule 49 (tipoDato -> FLOAT .)
    VAR             reduce using rule 49 (tipoDato -> FLOAT .)
    ID              reduce using rule 49 (tipoDato -> FLOAT .)
    ENTEROEXPRESION reduce using rule 49 (tipoDato -> FLOAT .)
    NEGACION        reduce using rule 49 (tipoDato -> FLOAT .)
    APAR            reduce using rule 49 (tipoDato -> FLOAT .)
    TRUE            reduce using rule 49 (tipoDato -> FLOAT .)
    FALSE           reduce using rule 49 (tipoDato -> FLOAT .)
    COMDOBLE        reduce using rule 49 (tipoDato -> FLOAT .)
    LISTOF          reduce using rule 49 (tipoDato -> FLOAT .)
    SETOF           reduce using rule 49 (tipoDato -> FLOAT .)
    PAIR            reduce using rule 49 (tipoDato -> FLOAT .)
    TRIPLE          reduce using rule 49 (tipoDato -> FLOAT .)
    IF              reduce using rule 49 (tipoDato -> FLOAT .)
    FOR             reduce using rule 49 (tipoDato -> FLOAT .)
    WHILE           reduce using rule 49 (tipoDato -> FLOAT .)
    PRINT           reduce using rule 49 (tipoDato -> FLOAT .)
    PRINTLN         reduce using rule 49 (tipoDato -> FLOAT .)
    $end            reduce using rule 49 (tipoDato -> FLOAT .)
    ELSE            reduce using rule 49 (tipoDato -> FLOAT .)
    CLLAVE          reduce using rule 49 (tipoDato -> FLOAT .)
    MAYOR           reduce using rule 49 (tipoDato -> FLOAT .)
    COMA            reduce using rule 49 (tipoDato -> FLOAT .)


state 197

    (50) tipoDato -> BOOLEAN .

    IGUAL           reduce using rule 50 (tipoDato -> BOOLEAN .)
    PUNTOCOMA       reduce using rule 50 (tipoDato -> BOOLEAN .)
    VAL             reduce using rule 50 (tipoDato -> BOOLEAN .)
    VAR             reduce using rule 50 (tipoDato -> BOOLEAN .)
    ID              reduce using rule 50 (tipoDato -> BOOLEAN .)
    ENTEROEXPRESION reduce using rule 50 (tipoDato -> BOOLEAN .)
    NEGACION        reduce using rule 50 (tipoDato -> BOOLEAN .)
    APAR            reduce using rule 50 (tipoDato -> BOOLEAN .)
    TRUE            reduce using rule 50 (tipoDato -> BOOLEAN .)
    FALSE           reduce using rule 50 (tipoDato -> BOOLEAN .)
    COMDOBLE        reduce using rule 50 (tipoDato -> BOOLEAN .)
    LISTOF          reduce using rule 50 (tipoDato -> BOOLEAN .)
    SETOF           reduce using rule 50 (tipoDato -> BOOLEAN .)
    PAIR            reduce using rule 50 (tipoDato -> BOOLEAN .)
    TRIPLE          reduce using rule 50 (tipoDato -> BOOLEAN .)
    IF              reduce using rule 50 (tipoDato -> BOOLEAN .)
    FOR             reduce using rule 50 (tipoDato -> BOOLEAN .)
    WHILE           reduce using rule 50 (tipoDato -> BOOLEAN .)
    PRINT           reduce using rule 50 (tipoDato -> BOOLEAN .)
    PRINTLN         reduce using rule 50 (tipoDato -> BOOLEAN .)
    $end            reduce using rule 50 (tipoDato -> BOOLEAN .)
    ELSE            reduce using rule 50 (tipoDato -> BOOLEAN .)
    CLLAVE          reduce using rule 50 (tipoDato -> BOOLEAN .)
    MAYOR           reduce using rule 50 (tipoDato -> BOOLEAN .)
    COMA            reduce using rule 50 (tipoDato -> BOOLEAN .)


state 198

    (51) tipoDato -> STRING .

    IGUAL           reduce using rule 51 (tipoDato -> STRING .)
    PUNTOCOMA       reduce using rule 51 (tipoDato -> STRING .)
    VAL             reduce using rule 51 (tipoDato -> STRING .)
    VAR             reduce using rule 51 (tipoDato -> STRING .)
    ID              reduce using rule 51 (tipoDato -> STRING .)
    ENTEROEXPRESION reduce using rule 51 (tipoDato -> STRING .)
    NEGACION        reduce using rule 51 (tipoDato -> STRING .)
    APAR            reduce using rule 51 (tipoDato -> STRING .)
    TRUE            reduce using rule 51 (tipoDato -> STRING .)
    FALSE           reduce using rule 51 (tipoDato -> STRING .)
    COMDOBLE        reduce using rule 51 (tipoDato -> STRING .)
    LISTOF          reduce using rule 51 (tipoDato -> STRING .)
    SETOF           reduce using rule 51 (tipoDato -> STRING .)
    PAIR            reduce using rule 51 (tipoDato -> STRING .)
    TRIPLE          reduce using rule 51 (tipoDato -> STRING .)
    IF              reduce using rule 51 (tipoDato -> STRING .)
    FOR             reduce using rule 51 (tipoDato -> STRING .)
    WHILE           reduce using rule 51 (tipoDato -> STRING .)
    PRINT           reduce using rule 51 (tipoDato -> STRING .)
    PRINTLN         reduce using rule 51 (tipoDato -> STRING .)
    $end            reduce using rule 51 (tipoDato -> STRING .)
    ELSE            reduce using rule 51 (tipoDato -> STRING .)
    CLLAVE          reduce using rule 51 (tipoDato -> STRING .)
    MAYOR           reduce using rule 51 (tipoDato -> STRING .)
    COMA            reduce using rule 51 (tipoDato -> STRING .)


state 199

    (52) tipoDato -> LIST . MENOR tipoDato MAYOR

    MENOR           shift and go to state 235


state 200

    (53) tipoDato -> SET . MENOR tipoDato MAYOR

    MENOR           shift and go to state 236


state 201

    (54) tipoDato -> PAIR . MENOR tipoDato COMA tipoDato MAYOR

    MENOR           shift and go to state 237


state 202

    (55) tipoDato -> TRIPLE . MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    MENOR           shift and go to state 238


state 203

    (27) funcion -> ID PUNTO CONTAINS APAR . factorEspecial CPAR
    (28) funcion -> ID PUNTO CONTAINS APAR . ID CPAR
    (104) factorEspecial -> . factor
    (105) factorEspecial -> . CADENAEXPRESION
    (106) factorEspecial -> . list
    (107) factorEspecial -> . set
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F

    ID              shift and go to state 239
    ENTEROEXPRESION shift and go to state 178
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    factorEspecial                 shift and go to state 240
    factor                         shift and go to state 174
    CADENAEXPRESION                shift and go to state 175
    list                           shift and go to state 176
    set                            shift and go to state 177
    flotante                       shift and go to state 179

state 204

    (30) funcion -> ID PUNTO GET APAR . ENTEROEXPRESION CPAR

    ENTEROEXPRESION shift and go to state 241


state 205

    (31) funcion -> ID PUNTO SET APAR . factorEspecial CPAR
    (104) factorEspecial -> . factor
    (105) factorEspecial -> . CADENAEXPRESION
    (106) factorEspecial -> . list
    (107) factorEspecial -> . set
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F

    ENTEROEXPRESION shift and go to state 178
    ID              shift and go to state 180
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    factorEspecial                 shift and go to state 242
    factor                         shift and go to state 174
    CADENAEXPRESION                shift and go to state 175
    list                           shift and go to state 176
    set                            shift and go to state 177
    flotante                       shift and go to state 179

state 206

    (32) funcion -> ID PUNTO ISEMPTY APAR . CPAR

    CPAR            shift and go to state 243


state 207

    (33) funcion -> ID PUNTO TOLIST APAR . CPAR

    CPAR            shift and go to state 244


state 208

    (34) funcion -> ID PUNTO TOSTRING APAR . CPAR

    CPAR            shift and go to state 245


state 209

    (35) funcion -> ID PUNTO SLICE APAR . contentSlice CPAR
    (38) funcion -> ID PUNTO SLICE APAR . error CPAR
    (36) contentSlice -> . ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION
    (37) contentSlice -> . ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION STEP ENTEROEXPRESION

    error           shift and go to state 247
    ENTEROEXPRESION shift and go to state 248

    contentSlice                   shift and go to state 246

state 210

    (39) funcion -> ID PUNTO INDEXOF APAR . factorEspecial CPAR
    (104) factorEspecial -> . factor
    (105) factorEspecial -> . CADENAEXPRESION
    (106) factorEspecial -> . list
    (107) factorEspecial -> . set
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F

    ENTEROEXPRESION shift and go to state 178
    ID              shift and go to state 180
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    factorEspecial                 shift and go to state 249
    factor                         shift and go to state 174
    CADENAEXPRESION                shift and go to state 175
    list                           shift and go to state 176
    set                            shift and go to state 177
    flotante                       shift and go to state 179

state 211

    (67) valor -> NEGACION ID .

    PUNTOCOMA       reduce using rule 67 (valor -> NEGACION ID .)
    VAL             reduce using rule 67 (valor -> NEGACION ID .)
    VAR             reduce using rule 67 (valor -> NEGACION ID .)
    ID              reduce using rule 67 (valor -> NEGACION ID .)
    ENTEROEXPRESION reduce using rule 67 (valor -> NEGACION ID .)
    NEGACION        reduce using rule 67 (valor -> NEGACION ID .)
    APAR            reduce using rule 67 (valor -> NEGACION ID .)
    TRUE            reduce using rule 67 (valor -> NEGACION ID .)
    FALSE           reduce using rule 67 (valor -> NEGACION ID .)
    COMDOBLE        reduce using rule 67 (valor -> NEGACION ID .)
    LISTOF          reduce using rule 67 (valor -> NEGACION ID .)
    SETOF           reduce using rule 67 (valor -> NEGACION ID .)
    PAIR            reduce using rule 67 (valor -> NEGACION ID .)
    TRIPLE          reduce using rule 67 (valor -> NEGACION ID .)
    IF              reduce using rule 67 (valor -> NEGACION ID .)
    FOR             reduce using rule 67 (valor -> NEGACION ID .)
    WHILE           reduce using rule 67 (valor -> NEGACION ID .)
    PRINT           reduce using rule 67 (valor -> NEGACION ID .)
    PRINTLN         reduce using rule 67 (valor -> NEGACION ID .)
    $end            reduce using rule 67 (valor -> NEGACION ID .)
    ELSE            reduce using rule 67 (valor -> NEGACION ID .)
    CLLAVE          reduce using rule 67 (valor -> NEGACION ID .)


state 212

    (71) flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .

    PUNTOCOMA       reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    VAL             reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    VAR             reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    ID              reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    ENTEROEXPRESION reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    NEGACION        reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    APAR            reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    TRUE            reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    FALSE           reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    COMDOBLE        reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    LISTOF          reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    SETOF           reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    PAIR            reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    TRIPLE          reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    IF              reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    FOR             reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    WHILE           reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    PRINT           reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    PRINTLN         reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    $end            reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    SUMA            reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    RESTA           reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    MULT            reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    DIVISION        reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    MODULO          reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    CPAR            reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    ELSE            reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    CLLAVE          reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)
    COMA            reduce using rule 71 (flotante -> ENTEROEXPRESION PUNTO ENTEROEXPRESION F .)


state 213

    (26) funcion -> CADENAEXPRESION PUNTO HASHCODE APAR . CPAR

    CPAR            shift and go to state 250


state 214

    (22) funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR . CADENAEXPRESION CPAR
    (23) funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR . error CPAR
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE

    error           shift and go to state 252
    COMDOBLE        shift and go to state 33

    CADENAEXPRESION                shift and go to state 251

state 215

    (24) funcionGet -> CADENAEXPRESION PUNTO GET APAR . ENTEROEXPRESION CPAR
    (25) funcionGet -> CADENAEXPRESION PUNTO GET APAR . error CPAR

    ENTEROEXPRESION shift and go to state 253
    error           shift and go to state 254


state 216

    (74) list -> LISTOF APAR error . CPAR
    (76) set -> LISTOF APAR error . CPAR

    CPAR            shift and go to state 255


state 217

    (122) compmiembro -> NEGACION compmiembro .

    AND             reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    OR              reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    PUNTOCOMA       reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    VAL             reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    VAR             reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    ID              reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    ENTEROEXPRESION reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    NEGACION        reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    APAR            reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    TRUE            reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    FALSE           reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    COMDOBLE        reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    LISTOF          reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    SETOF           reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    PAIR            reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    TRIPLE          reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    IF              reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    FOR             reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    WHILE           reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    PRINT           reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    PRINTLN         reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    $end            reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    ELSE            reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    CLLAVE          reduce using rule 122 (compmiembro -> NEGACION compmiembro .)
    CPAR            reduce using rule 122 (compmiembro -> NEGACION compmiembro .)


state 218

    (11) print -> printType APAR CADENAEXPRESION CPAR .

    PUNTOCOMA       reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    VAL             reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    VAR             reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    ID              reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    ENTEROEXPRESION reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    NEGACION        reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    APAR            reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    TRUE            reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    FALSE           reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    COMDOBLE        reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    LISTOF          reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    SETOF           reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    PAIR            reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    TRIPLE          reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    IF              reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    FOR             reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    WHILE           reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    PRINT           reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    PRINTLN         reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    $end            reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    ELSE            reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)
    CLLAVE          reduce using rule 11 (print -> printType APAR CADENAEXPRESION CPAR .)


state 219

    (13) print -> printType APAR ID CPAR .

    PUNTOCOMA       reduce using rule 13 (print -> printType APAR ID CPAR .)
    VAL             reduce using rule 13 (print -> printType APAR ID CPAR .)
    VAR             reduce using rule 13 (print -> printType APAR ID CPAR .)
    ID              reduce using rule 13 (print -> printType APAR ID CPAR .)
    ENTEROEXPRESION reduce using rule 13 (print -> printType APAR ID CPAR .)
    NEGACION        reduce using rule 13 (print -> printType APAR ID CPAR .)
    APAR            reduce using rule 13 (print -> printType APAR ID CPAR .)
    TRUE            reduce using rule 13 (print -> printType APAR ID CPAR .)
    FALSE           reduce using rule 13 (print -> printType APAR ID CPAR .)
    COMDOBLE        reduce using rule 13 (print -> printType APAR ID CPAR .)
    LISTOF          reduce using rule 13 (print -> printType APAR ID CPAR .)
    SETOF           reduce using rule 13 (print -> printType APAR ID CPAR .)
    PAIR            reduce using rule 13 (print -> printType APAR ID CPAR .)
    TRIPLE          reduce using rule 13 (print -> printType APAR ID CPAR .)
    IF              reduce using rule 13 (print -> printType APAR ID CPAR .)
    FOR             reduce using rule 13 (print -> printType APAR ID CPAR .)
    WHILE           reduce using rule 13 (print -> printType APAR ID CPAR .)
    PRINT           reduce using rule 13 (print -> printType APAR ID CPAR .)
    PRINTLN         reduce using rule 13 (print -> printType APAR ID CPAR .)
    $end            reduce using rule 13 (print -> printType APAR ID CPAR .)
    ELSE            reduce using rule 13 (print -> printType APAR ID CPAR .)
    CLLAVE          reduce using rule 13 (print -> printType APAR ID CPAR .)


state 220

    (14) print -> printType APAR funcion CPAR .

    PUNTOCOMA       reduce using rule 14 (print -> printType APAR funcion CPAR .)
    VAL             reduce using rule 14 (print -> printType APAR funcion CPAR .)
    VAR             reduce using rule 14 (print -> printType APAR funcion CPAR .)
    ID              reduce using rule 14 (print -> printType APAR funcion CPAR .)
    ENTEROEXPRESION reduce using rule 14 (print -> printType APAR funcion CPAR .)
    NEGACION        reduce using rule 14 (print -> printType APAR funcion CPAR .)
    APAR            reduce using rule 14 (print -> printType APAR funcion CPAR .)
    TRUE            reduce using rule 14 (print -> printType APAR funcion CPAR .)
    FALSE           reduce using rule 14 (print -> printType APAR funcion CPAR .)
    COMDOBLE        reduce using rule 14 (print -> printType APAR funcion CPAR .)
    LISTOF          reduce using rule 14 (print -> printType APAR funcion CPAR .)
    SETOF           reduce using rule 14 (print -> printType APAR funcion CPAR .)
    PAIR            reduce using rule 14 (print -> printType APAR funcion CPAR .)
    TRIPLE          reduce using rule 14 (print -> printType APAR funcion CPAR .)
    IF              reduce using rule 14 (print -> printType APAR funcion CPAR .)
    FOR             reduce using rule 14 (print -> printType APAR funcion CPAR .)
    WHILE           reduce using rule 14 (print -> printType APAR funcion CPAR .)
    PRINT           reduce using rule 14 (print -> printType APAR funcion CPAR .)
    PRINTLN         reduce using rule 14 (print -> printType APAR funcion CPAR .)
    $end            reduce using rule 14 (print -> printType APAR funcion CPAR .)
    ELSE            reduce using rule 14 (print -> printType APAR funcion CPAR .)
    CLLAVE          reduce using rule 14 (print -> printType APAR funcion CPAR .)


state 221

    (15) print -> printType APAR condicion CPAR .

    PUNTOCOMA       reduce using rule 15 (print -> printType APAR condicion CPAR .)
    VAL             reduce using rule 15 (print -> printType APAR condicion CPAR .)
    VAR             reduce using rule 15 (print -> printType APAR condicion CPAR .)
    ID              reduce using rule 15 (print -> printType APAR condicion CPAR .)
    ENTEROEXPRESION reduce using rule 15 (print -> printType APAR condicion CPAR .)
    NEGACION        reduce using rule 15 (print -> printType APAR condicion CPAR .)
    APAR            reduce using rule 15 (print -> printType APAR condicion CPAR .)
    TRUE            reduce using rule 15 (print -> printType APAR condicion CPAR .)
    FALSE           reduce using rule 15 (print -> printType APAR condicion CPAR .)
    COMDOBLE        reduce using rule 15 (print -> printType APAR condicion CPAR .)
    LISTOF          reduce using rule 15 (print -> printType APAR condicion CPAR .)
    SETOF           reduce using rule 15 (print -> printType APAR condicion CPAR .)
    PAIR            reduce using rule 15 (print -> printType APAR condicion CPAR .)
    TRIPLE          reduce using rule 15 (print -> printType APAR condicion CPAR .)
    IF              reduce using rule 15 (print -> printType APAR condicion CPAR .)
    FOR             reduce using rule 15 (print -> printType APAR condicion CPAR .)
    WHILE           reduce using rule 15 (print -> printType APAR condicion CPAR .)
    PRINT           reduce using rule 15 (print -> printType APAR condicion CPAR .)
    PRINTLN         reduce using rule 15 (print -> printType APAR condicion CPAR .)
    $end            reduce using rule 15 (print -> printType APAR condicion CPAR .)
    ELSE            reduce using rule 15 (print -> printType APAR condicion CPAR .)
    CLLAVE          reduce using rule 15 (print -> printType APAR condicion CPAR .)


state 222

    (16) print -> printType APAR expresion CPAR .

    PUNTOCOMA       reduce using rule 16 (print -> printType APAR expresion CPAR .)
    VAL             reduce using rule 16 (print -> printType APAR expresion CPAR .)
    VAR             reduce using rule 16 (print -> printType APAR expresion CPAR .)
    ID              reduce using rule 16 (print -> printType APAR expresion CPAR .)
    ENTEROEXPRESION reduce using rule 16 (print -> printType APAR expresion CPAR .)
    NEGACION        reduce using rule 16 (print -> printType APAR expresion CPAR .)
    APAR            reduce using rule 16 (print -> printType APAR expresion CPAR .)
    TRUE            reduce using rule 16 (print -> printType APAR expresion CPAR .)
    FALSE           reduce using rule 16 (print -> printType APAR expresion CPAR .)
    COMDOBLE        reduce using rule 16 (print -> printType APAR expresion CPAR .)
    LISTOF          reduce using rule 16 (print -> printType APAR expresion CPAR .)
    SETOF           reduce using rule 16 (print -> printType APAR expresion CPAR .)
    PAIR            reduce using rule 16 (print -> printType APAR expresion CPAR .)
    TRIPLE          reduce using rule 16 (print -> printType APAR expresion CPAR .)
    IF              reduce using rule 16 (print -> printType APAR expresion CPAR .)
    FOR             reduce using rule 16 (print -> printType APAR expresion CPAR .)
    WHILE           reduce using rule 16 (print -> printType APAR expresion CPAR .)
    PRINT           reduce using rule 16 (print -> printType APAR expresion CPAR .)
    PRINTLN         reduce using rule 16 (print -> printType APAR expresion CPAR .)
    $end            reduce using rule 16 (print -> printType APAR expresion CPAR .)
    ELSE            reduce using rule 16 (print -> printType APAR expresion CPAR .)
    CLLAVE          reduce using rule 16 (print -> printType APAR expresion CPAR .)


state 223

    (17) print -> printType APAR error CPAR .

    PUNTOCOMA       reduce using rule 17 (print -> printType APAR error CPAR .)
    VAL             reduce using rule 17 (print -> printType APAR error CPAR .)
    VAR             reduce using rule 17 (print -> printType APAR error CPAR .)
    ID              reduce using rule 17 (print -> printType APAR error CPAR .)
    ENTEROEXPRESION reduce using rule 17 (print -> printType APAR error CPAR .)
    NEGACION        reduce using rule 17 (print -> printType APAR error CPAR .)
    APAR            reduce using rule 17 (print -> printType APAR error CPAR .)
    TRUE            reduce using rule 17 (print -> printType APAR error CPAR .)
    FALSE           reduce using rule 17 (print -> printType APAR error CPAR .)
    COMDOBLE        reduce using rule 17 (print -> printType APAR error CPAR .)
    LISTOF          reduce using rule 17 (print -> printType APAR error CPAR .)
    SETOF           reduce using rule 17 (print -> printType APAR error CPAR .)
    PAIR            reduce using rule 17 (print -> printType APAR error CPAR .)
    TRIPLE          reduce using rule 17 (print -> printType APAR error CPAR .)
    IF              reduce using rule 17 (print -> printType APAR error CPAR .)
    FOR             reduce using rule 17 (print -> printType APAR error CPAR .)
    WHILE           reduce using rule 17 (print -> printType APAR error CPAR .)
    PRINT           reduce using rule 17 (print -> printType APAR error CPAR .)
    PRINTLN         reduce using rule 17 (print -> printType APAR error CPAR .)
    $end            reduce using rule 17 (print -> printType APAR error CPAR .)
    ELSE            reduce using rule 17 (print -> printType APAR error CPAR .)
    CLLAVE          reduce using rule 17 (print -> printType APAR error CPAR .)


state 224

    (73) list -> LISTOF APAR contenido CPAR .

    PUNTOCOMA       reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    VAL             reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    VAR             reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    ID              reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    ENTEROEXPRESION reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    NEGACION        reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    APAR            reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    TRUE            reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    FALSE           reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    COMDOBLE        reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    LISTOF          reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    SETOF           reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    PAIR            reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    TRIPLE          reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    IF              reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    FOR             reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    WHILE           reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    PRINT           reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    PRINTLN         reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    $end            reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    SUMA            reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    RESTA           reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    MULT            reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    DIVISION        reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    MODULO          reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    CPAR            reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    ELSE            reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    CLLAVE          reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)
    COMA            reduce using rule 73 (list -> LISTOF APAR contenido CPAR .)


state 225

    (74) list -> LISTOF APAR error CPAR .
    (76) set -> LISTOF APAR error CPAR .
    (78) pair -> LISTOF APAR error CPAR .
    (80) triple -> LISTOF APAR error CPAR .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for VAL resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for VAR resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for ID resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for NEGACION resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for APAR resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for TRUE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for FALSE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for LISTOF resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for SETOF resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for PAIR resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for IF resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for FOR resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for WHILE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for PRINT resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for $end resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for SUMA resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for RESTA resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for MULT resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for DIVISION resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for MODULO resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for ELSE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for VAL resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for VAR resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for ID resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for NEGACION resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for APAR resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for TRUE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for FALSE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for LISTOF resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for SETOF resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for PAIR resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for IF resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for FOR resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for WHILE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for PRINT resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for $end resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for ELSE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for VAL resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for VAR resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for ID resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for NEGACION resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for APAR resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for TRUE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for FALSE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for LISTOF resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for SETOF resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for PAIR resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for IF resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for FOR resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for WHILE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for PRINT resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for $end resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for ELSE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
    PUNTOCOMA       reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    VAL             reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    VAR             reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    ID              reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    ENTEROEXPRESION reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    NEGACION        reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    APAR            reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    TRUE            reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    FALSE           reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    COMDOBLE        reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    LISTOF          reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    SETOF           reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    PAIR            reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    TRIPLE          reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    IF              reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    FOR             reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    WHILE           reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    PRINT           reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    PRINTLN         reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    $end            reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    SUMA            reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    RESTA           reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    MULT            reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    DIVISION        reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    MODULO          reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    ELSE            reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    CLLAVE          reduce using rule 74 (list -> LISTOF APAR error CPAR .)

  ! PUNTOCOMA       [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! VAL             [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! VAR             [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! ID              [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! ENTEROEXPRESION [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! NEGACION        [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! APAR            [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! TRUE            [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! FALSE           [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! COMDOBLE        [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! LISTOF          [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! SETOF           [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! PAIR            [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! TRIPLE          [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! IF              [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! FOR             [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! WHILE           [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! PRINT           [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! PRINTLN         [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! $end            [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! SUMA            [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! RESTA           [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! MULT            [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! DIVISION        [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! MODULO          [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! ELSE            [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! CLLAVE          [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! PUNTOCOMA       [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! VAL             [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! VAR             [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! ID              [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! ENTEROEXPRESION [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! NEGACION        [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! APAR            [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! TRUE            [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! FALSE           [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! COMDOBLE        [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! LISTOF          [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! SETOF           [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! PAIR            [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! TRIPLE          [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! IF              [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! FOR             [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! WHILE           [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! PRINT           [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! PRINTLN         [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! $end            [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! ELSE            [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! CLLAVE          [ reduce using rule 78 (pair -> LISTOF APAR error CPAR .) ]
  ! PUNTOCOMA       [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! VAL             [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! VAR             [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! ID              [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! ENTEROEXPRESION [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! NEGACION        [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! APAR            [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! TRUE            [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! FALSE           [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! COMDOBLE        [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! LISTOF          [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! SETOF           [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! PAIR            [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! TRIPLE          [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! IF              [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! FOR             [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! WHILE           [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! PRINT           [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! PRINTLN         [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! $end            [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! ELSE            [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]
  ! CLLAVE          [ reduce using rule 80 (triple -> LISTOF APAR error CPAR .) ]


state 226

    (82) contenido -> factorEspecial COMA . contenido
    (81) contenido -> . factorEspecial
    (82) contenido -> . factorEspecial COMA contenido
    (104) factorEspecial -> . factor
    (105) factorEspecial -> . CADENAEXPRESION
    (106) factorEspecial -> . list
    (107) factorEspecial -> . set
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F

    ENTEROEXPRESION shift and go to state 178
    ID              shift and go to state 180
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    factorEspecial                 shift and go to state 173
    contenido                      shift and go to state 256
    factor                         shift and go to state 174
    CADENAEXPRESION                shift and go to state 175
    list                           shift and go to state 176
    set                            shift and go to state 177
    flotante                       shift and go to state 179

state 227

    (75) set -> SETOF APAR contenido CPAR .

    PUNTOCOMA       reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    VAL             reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    VAR             reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    ID              reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    ENTEROEXPRESION reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    NEGACION        reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    APAR            reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    TRUE            reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    FALSE           reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    COMDOBLE        reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    LISTOF          reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    SETOF           reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    PAIR            reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    TRIPLE          reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    IF              reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    FOR             reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    WHILE           reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    PRINT           reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    PRINTLN         reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    $end            reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    SUMA            reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    RESTA           reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    MULT            reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    DIVISION        reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    MODULO          reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    CPAR            reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    ELSE            reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    CLLAVE          reduce using rule 75 (set -> SETOF APAR contenido CPAR .)
    COMA            reduce using rule 75 (set -> SETOF APAR contenido CPAR .)


state 228

    (77) pair -> PAIR APAR factorEspecial COMA . factorEspecial CPAR
    (104) factorEspecial -> . factor
    (105) factorEspecial -> . CADENAEXPRESION
    (106) factorEspecial -> . list
    (107) factorEspecial -> . set
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F

    ENTEROEXPRESION shift and go to state 178
    ID              shift and go to state 180
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    factorEspecial                 shift and go to state 257
    factor                         shift and go to state 174
    CADENAEXPRESION                shift and go to state 175
    list                           shift and go to state 176
    set                            shift and go to state 177
    flotante                       shift and go to state 179

state 229

    (79) triple -> TRIPLE APAR factorEspecial COMA . factorEspecial COMA factorEspecial CPAR
    (104) factorEspecial -> . factor
    (105) factorEspecial -> . CADENAEXPRESION
    (106) factorEspecial -> . list
    (107) factorEspecial -> . set
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F

    ENTEROEXPRESION shift and go to state 178
    ID              shift and go to state 180
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    factorEspecial                 shift and go to state 258
    factor                         shift and go to state 174
    CADENAEXPRESION                shift and go to state 175
    list                           shift and go to state 176
    set                            shift and go to state 177
    flotante                       shift and go to state 179

state 230

    (137) if -> IF APAR condicion CPAR . cuerpo
    (138) if -> IF APAR condicion CPAR . cuerpo ELSE cuerpo
    (135) cuerpo -> . sentencia
    (136) cuerpo -> . ALLAVE todos CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (40) asignacion -> . VAL ID tipoAsignacion
    (41) asignacion -> . VAR ID tipoAsignacion
    (42) asignacion -> . ID inicializacion
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (132) control -> . if
    (133) control -> . for
    (134) control -> . while
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR condicion CPAR
    (16) print -> . printType APAR expresion CPAR
    (17) print -> . printType APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (139) for -> . FOR APAR ID IN ID CPAR cuerpo
    (140) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (149) while -> . WHILE APAR condicion CPAR cuerpo
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (18) printType -> . PRINT
    (19) printType -> . PRINTLN
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 261
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    NEGACION        shift and go to state 22
    APAR            shift and go to state 25
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    PRINT           shift and go to state 42
    PRINTLN         shift and go to state 43

    condicion                      shift and go to state 7
    cuerpo                         shift and go to state 259
    sentencia                      shift and go to state 260
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    CADENAEXPRESION                shift and go to state 15
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    for                            shift and go to state 26
    while                          shift and go to state 27
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    printType                      shift and go to state 30
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 231

    (147) for -> FOR APAR APAR ID . COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> FOR APAR APAR ID . COMA ID CPAR IN ID CPAR cuerpo

    COMA            shift and go to state 262


state 232

    (139) for -> FOR APAR ID IN . ID CPAR cuerpo
    (141) for -> FOR APAR ID IN . ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> FOR APAR ID IN . ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> FOR APAR ID IN . ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> FOR APAR ID IN . ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> FOR APAR ID IN . ID PUNTO INDICES CPAR cuerpo
    (146) for -> FOR APAR ID IN . ID PUNTO ID CPAR cuerpo

    ID              shift and go to state 263
    ENTEROEXPRESION shift and go to state 264


state 233

    (140) for -> FOR APAR ID DOSPUNTOS . INT IN ID CPAR cuerpo

    INT             shift and go to state 265


state 234

    (149) while -> WHILE APAR condicion CPAR . cuerpo
    (135) cuerpo -> . sentencia
    (136) cuerpo -> . ALLAVE todos CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (40) asignacion -> . VAL ID tipoAsignacion
    (41) asignacion -> . VAR ID tipoAsignacion
    (42) asignacion -> . ID inicializacion
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (132) control -> . if
    (133) control -> . for
    (134) control -> . while
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR condicion CPAR
    (16) print -> . printType APAR expresion CPAR
    (17) print -> . printType APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (139) for -> . FOR APAR ID IN ID CPAR cuerpo
    (140) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (149) while -> . WHILE APAR condicion CPAR cuerpo
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (18) printType -> . PRINT
    (19) printType -> . PRINTLN
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 261
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    NEGACION        shift and go to state 22
    APAR            shift and go to state 25
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    PRINT           shift and go to state 42
    PRINTLN         shift and go to state 43

    condicion                      shift and go to state 7
    cuerpo                         shift and go to state 266
    sentencia                      shift and go to state 260
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    CADENAEXPRESION                shift and go to state 15
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    for                            shift and go to state 26
    while                          shift and go to state 27
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    printType                      shift and go to state 30
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 235

    (52) tipoDato -> LIST MENOR . tipoDato MAYOR
    (48) tipoDato -> . INT
    (49) tipoDato -> . FLOAT
    (50) tipoDato -> . BOOLEAN
    (51) tipoDato -> . STRING
    (52) tipoDato -> . LIST MENOR tipoDato MAYOR
    (53) tipoDato -> . SET MENOR tipoDato MAYOR
    (54) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (55) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 195
    FLOAT           shift and go to state 196
    BOOLEAN         shift and go to state 197
    STRING          shift and go to state 198
    LIST            shift and go to state 199
    SET             shift and go to state 200
    PAIR            shift and go to state 201
    TRIPLE          shift and go to state 202

    tipoDato                       shift and go to state 267

state 236

    (53) tipoDato -> SET MENOR . tipoDato MAYOR
    (48) tipoDato -> . INT
    (49) tipoDato -> . FLOAT
    (50) tipoDato -> . BOOLEAN
    (51) tipoDato -> . STRING
    (52) tipoDato -> . LIST MENOR tipoDato MAYOR
    (53) tipoDato -> . SET MENOR tipoDato MAYOR
    (54) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (55) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 195
    FLOAT           shift and go to state 196
    BOOLEAN         shift and go to state 197
    STRING          shift and go to state 198
    LIST            shift and go to state 199
    SET             shift and go to state 200
    PAIR            shift and go to state 201
    TRIPLE          shift and go to state 202

    tipoDato                       shift and go to state 268

state 237

    (54) tipoDato -> PAIR MENOR . tipoDato COMA tipoDato MAYOR
    (48) tipoDato -> . INT
    (49) tipoDato -> . FLOAT
    (50) tipoDato -> . BOOLEAN
    (51) tipoDato -> . STRING
    (52) tipoDato -> . LIST MENOR tipoDato MAYOR
    (53) tipoDato -> . SET MENOR tipoDato MAYOR
    (54) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (55) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 195
    FLOAT           shift and go to state 196
    BOOLEAN         shift and go to state 197
    STRING          shift and go to state 198
    LIST            shift and go to state 199
    SET             shift and go to state 200
    PAIR            shift and go to state 201
    TRIPLE          shift and go to state 202

    tipoDato                       shift and go to state 269

state 238

    (55) tipoDato -> TRIPLE MENOR . tipoDato COMA tipoDato COMA tipoDato MAYOR
    (48) tipoDato -> . INT
    (49) tipoDato -> . FLOAT
    (50) tipoDato -> . BOOLEAN
    (51) tipoDato -> . STRING
    (52) tipoDato -> . LIST MENOR tipoDato MAYOR
    (53) tipoDato -> . SET MENOR tipoDato MAYOR
    (54) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (55) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 195
    FLOAT           shift and go to state 196
    BOOLEAN         shift and go to state 197
    STRING          shift and go to state 198
    LIST            shift and go to state 199
    SET             shift and go to state 200
    PAIR            shift and go to state 201
    TRIPLE          shift and go to state 202

    tipoDato                       shift and go to state 270

state 239

    (28) funcion -> ID PUNTO CONTAINS APAR ID . CPAR
    (103) factor -> ID .

  ! shift/reduce conflict for CPAR resolved as shift
    CPAR            shift and go to state 271

  ! CPAR            [ reduce using rule 103 (factor -> ID .) ]


state 240

    (27) funcion -> ID PUNTO CONTAINS APAR factorEspecial . CPAR

    CPAR            shift and go to state 272


state 241

    (30) funcion -> ID PUNTO GET APAR ENTEROEXPRESION . CPAR

    CPAR            shift and go to state 273


state 242

    (31) funcion -> ID PUNTO SET APAR factorEspecial . CPAR

    CPAR            shift and go to state 274


state 243

    (32) funcion -> ID PUNTO ISEMPTY APAR CPAR .

    PUNTOCOMA       reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    VAL             reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    VAR             reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    ID              reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    ENTEROEXPRESION reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    NEGACION        reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    APAR            reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    TRUE            reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    FALSE           reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    COMDOBLE        reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    LISTOF          reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    SETOF           reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    PAIR            reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    TRIPLE          reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    IF              reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    FOR             reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    WHILE           reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    PRINT           reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    PRINTLN         reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    $end            reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    IGUALIGUAL      reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    NOIGUAL         reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    MAYOR           reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    MENOR           reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    MAYORIGUAL      reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    MENORIGUAL      reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    AND             reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    OR              reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    ELSE            reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    CLLAVE          reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)
    CPAR            reduce using rule 32 (funcion -> ID PUNTO ISEMPTY APAR CPAR .)


state 244

    (33) funcion -> ID PUNTO TOLIST APAR CPAR .

    PUNTOCOMA       reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    VAL             reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    VAR             reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    ID              reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    ENTEROEXPRESION reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    NEGACION        reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    APAR            reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    TRUE            reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    FALSE           reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    COMDOBLE        reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    LISTOF          reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    SETOF           reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    PAIR            reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    TRIPLE          reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    IF              reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    FOR             reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    WHILE           reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    PRINT           reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    PRINTLN         reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    $end            reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    IGUALIGUAL      reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    NOIGUAL         reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    MAYOR           reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    MENOR           reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    MAYORIGUAL      reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    MENORIGUAL      reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    AND             reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    OR              reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    ELSE            reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    CLLAVE          reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)
    CPAR            reduce using rule 33 (funcion -> ID PUNTO TOLIST APAR CPAR .)


state 245

    (34) funcion -> ID PUNTO TOSTRING APAR CPAR .

    PUNTOCOMA       reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    VAL             reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    VAR             reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    ID              reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    ENTEROEXPRESION reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    NEGACION        reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    APAR            reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    TRUE            reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    FALSE           reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    COMDOBLE        reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    LISTOF          reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    SETOF           reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    PAIR            reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    TRIPLE          reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    IF              reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    FOR             reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    WHILE           reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    PRINT           reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    PRINTLN         reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    $end            reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    IGUALIGUAL      reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    NOIGUAL         reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    MAYOR           reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    MENOR           reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    MAYORIGUAL      reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    MENORIGUAL      reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    AND             reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    OR              reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    ELSE            reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    CLLAVE          reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)
    CPAR            reduce using rule 34 (funcion -> ID PUNTO TOSTRING APAR CPAR .)


state 246

    (35) funcion -> ID PUNTO SLICE APAR contentSlice . CPAR

    CPAR            shift and go to state 275


state 247

    (38) funcion -> ID PUNTO SLICE APAR error . CPAR

    CPAR            shift and go to state 276


state 248

    (36) contentSlice -> ENTEROEXPRESION . PUNTOPUNTO ENTEROEXPRESION
    (37) contentSlice -> ENTEROEXPRESION . PUNTOPUNTO ENTEROEXPRESION STEP ENTEROEXPRESION

    PUNTOPUNTO      shift and go to state 277


state 249

    (39) funcion -> ID PUNTO INDEXOF APAR factorEspecial . CPAR

    CPAR            shift and go to state 278


state 250

    (26) funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .

    PUNTOCOMA       reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    VAL             reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    VAR             reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    ID              reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    ENTEROEXPRESION reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    NEGACION        reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    APAR            reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    TRUE            reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    FALSE           reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    COMDOBLE        reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    LISTOF          reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    SETOF           reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    PAIR            reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    TRIPLE          reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    IF              reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    FOR             reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    WHILE           reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    PRINT           reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    PRINTLN         reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    $end            reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    IGUALIGUAL      reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    NOIGUAL         reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    MAYOR           reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    MENOR           reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    MAYORIGUAL      reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    MENORIGUAL      reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    AND             reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    OR              reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    ELSE            reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    CLLAVE          reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)
    CPAR            reduce using rule 26 (funcion -> CADENAEXPRESION PUNTO HASHCODE APAR CPAR .)


state 251

    (22) funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION . CPAR

    CPAR            shift and go to state 279


state 252

    (23) funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error . CPAR

    CPAR            shift and go to state 280


state 253

    (24) funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION . CPAR

    CPAR            shift and go to state 281


state 254

    (25) funcionGet -> CADENAEXPRESION PUNTO GET APAR error . CPAR

    CPAR            shift and go to state 282


state 255

    (74) list -> LISTOF APAR error CPAR .
    (76) set -> LISTOF APAR error CPAR .

  ! reduce/reduce conflict for SUMA resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for RESTA resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for MULT resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for DIVISION resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for MODULO resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for CPAR resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for VAL resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for VAR resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for ID resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for NEGACION resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for APAR resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for TRUE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for FALSE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for COMDOBLE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for LISTOF resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for SETOF resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for PAIR resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for TRIPLE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for IF resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for FOR resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for WHILE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for PRINT resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for $end resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for ELSE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 74 (list -> LISTOF APAR error CPAR .)
  ! reduce/reduce conflict for COMA resolved using rule 74 (list -> LISTOF APAR error CPAR .)
    SUMA            reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    RESTA           reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    MULT            reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    DIVISION        reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    MODULO          reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    CPAR            reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    PUNTOCOMA       reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    VAL             reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    VAR             reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    ID              reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    ENTEROEXPRESION reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    NEGACION        reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    APAR            reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    TRUE            reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    FALSE           reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    COMDOBLE        reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    LISTOF          reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    SETOF           reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    PAIR            reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    TRIPLE          reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    IF              reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    FOR             reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    WHILE           reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    PRINT           reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    PRINTLN         reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    $end            reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    ELSE            reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    CLLAVE          reduce using rule 74 (list -> LISTOF APAR error CPAR .)
    COMA            reduce using rule 74 (list -> LISTOF APAR error CPAR .)

  ! SUMA            [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! RESTA           [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! MULT            [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! DIVISION        [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! MODULO          [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! CPAR            [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! PUNTOCOMA       [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! VAL             [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! VAR             [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! ID              [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! ENTEROEXPRESION [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! NEGACION        [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! APAR            [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! TRUE            [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! FALSE           [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! COMDOBLE        [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! LISTOF          [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! SETOF           [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! PAIR            [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! TRIPLE          [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! IF              [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! FOR             [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! WHILE           [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! PRINT           [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! PRINTLN         [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! $end            [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! ELSE            [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! CLLAVE          [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]
  ! COMA            [ reduce using rule 76 (set -> LISTOF APAR error CPAR .) ]


state 256

    (82) contenido -> factorEspecial COMA contenido .

    CPAR            reduce using rule 82 (contenido -> factorEspecial COMA contenido .)


state 257

    (77) pair -> PAIR APAR factorEspecial COMA factorEspecial . CPAR

    CPAR            shift and go to state 283


state 258

    (79) triple -> TRIPLE APAR factorEspecial COMA factorEspecial . COMA factorEspecial CPAR

    COMA            shift and go to state 284


state 259

    (137) if -> IF APAR condicion CPAR cuerpo .
    (138) if -> IF APAR condicion CPAR cuerpo . ELSE cuerpo

  ! shift/reduce conflict for ELSE resolved as shift
    PUNTOCOMA       reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    VAL             reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    VAR             reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    ID              reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    NEGACION        reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    APAR            reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    TRUE            reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    FALSE           reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    COMDOBLE        reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    LISTOF          reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    SETOF           reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    PAIR            reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    TRIPLE          reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    IF              reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    FOR             reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    WHILE           reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    PRINT           reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    PRINTLN         reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    $end            reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    CLLAVE          reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .)
    ELSE            shift and go to state 285

  ! ELSE            [ reduce using rule 137 (if -> IF APAR condicion CPAR cuerpo .) ]


state 260

    (135) cuerpo -> sentencia .

    PUNTOCOMA       reduce using rule 135 (cuerpo -> sentencia .)
    VAL             reduce using rule 135 (cuerpo -> sentencia .)
    VAR             reduce using rule 135 (cuerpo -> sentencia .)
    ID              reduce using rule 135 (cuerpo -> sentencia .)
    ENTEROEXPRESION reduce using rule 135 (cuerpo -> sentencia .)
    NEGACION        reduce using rule 135 (cuerpo -> sentencia .)
    APAR            reduce using rule 135 (cuerpo -> sentencia .)
    TRUE            reduce using rule 135 (cuerpo -> sentencia .)
    FALSE           reduce using rule 135 (cuerpo -> sentencia .)
    COMDOBLE        reduce using rule 135 (cuerpo -> sentencia .)
    LISTOF          reduce using rule 135 (cuerpo -> sentencia .)
    SETOF           reduce using rule 135 (cuerpo -> sentencia .)
    PAIR            reduce using rule 135 (cuerpo -> sentencia .)
    TRIPLE          reduce using rule 135 (cuerpo -> sentencia .)
    IF              reduce using rule 135 (cuerpo -> sentencia .)
    FOR             reduce using rule 135 (cuerpo -> sentencia .)
    WHILE           reduce using rule 135 (cuerpo -> sentencia .)
    PRINT           reduce using rule 135 (cuerpo -> sentencia .)
    PRINTLN         reduce using rule 135 (cuerpo -> sentencia .)
    $end            reduce using rule 135 (cuerpo -> sentencia .)
    ELSE            reduce using rule 135 (cuerpo -> sentencia .)
    CLLAVE          reduce using rule 135 (cuerpo -> sentencia .)


state 261

    (136) cuerpo -> ALLAVE . todos CLLAVE
    (1) todos -> . sentencia PUNTOCOMA
    (2) todos -> . sentencia
    (3) todos -> . todos sentencia
    (4) todos -> . todos sentencia PUNTOCOMA
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (40) asignacion -> . VAL ID tipoAsignacion
    (41) asignacion -> . VAR ID tipoAsignacion
    (42) asignacion -> . ID inicializacion
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (132) control -> . if
    (133) control -> . for
    (134) control -> . while
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR condicion CPAR
    (16) print -> . printType APAR expresion CPAR
    (17) print -> . printType APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (139) for -> . FOR APAR ID IN ID CPAR cuerpo
    (140) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (149) while -> . WHILE APAR condicion CPAR cuerpo
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (18) printType -> . PRINT
    (19) printType -> . PRINTLN
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    NEGACION        shift and go to state 22
    APAR            shift and go to state 25
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    PRINT           shift and go to state 42
    PRINTLN         shift and go to state 43

    todos                          shift and go to state 286
    sentencia                      shift and go to state 2
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    CADENAEXPRESION                shift and go to state 15
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    for                            shift and go to state 26
    while                          shift and go to state 27
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    printType                      shift and go to state 30
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 262

    (147) for -> FOR APAR APAR ID COMA . ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> FOR APAR APAR ID COMA . ID CPAR IN ID CPAR cuerpo

    ID              shift and go to state 287


state 263

    (139) for -> FOR APAR ID IN ID . CPAR cuerpo
    (145) for -> FOR APAR ID IN ID . PUNTO INDICES CPAR cuerpo
    (146) for -> FOR APAR ID IN ID . PUNTO ID CPAR cuerpo

    CPAR            shift and go to state 288
    PUNTO           shift and go to state 289


state 264

    (141) for -> FOR APAR ID IN ENTEROEXPRESION . PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> FOR APAR ID IN ENTEROEXPRESION . UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> FOR APAR ID IN ENTEROEXPRESION . UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> FOR APAR ID IN ENTEROEXPRESION . DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo

    PUNTOPUNTO      shift and go to state 290
    UNTIL           shift and go to state 291
    DOWNTO          shift and go to state 292


state 265

    (140) for -> FOR APAR ID DOSPUNTOS INT . IN ID CPAR cuerpo

    IN              shift and go to state 293


state 266

    (149) while -> WHILE APAR condicion CPAR cuerpo .

    PUNTOCOMA       reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    VAL             reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    VAR             reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    ID              reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    NEGACION        reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    APAR            reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    TRUE            reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    FALSE           reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    COMDOBLE        reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    LISTOF          reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    SETOF           reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    PAIR            reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    TRIPLE          reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    IF              reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    FOR             reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    WHILE           reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    PRINT           reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    PRINTLN         reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    $end            reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    ELSE            reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)
    CLLAVE          reduce using rule 149 (while -> WHILE APAR condicion CPAR cuerpo .)


state 267

    (52) tipoDato -> LIST MENOR tipoDato . MAYOR

    MAYOR           shift and go to state 294


state 268

    (53) tipoDato -> SET MENOR tipoDato . MAYOR

    MAYOR           shift and go to state 295


state 269

    (54) tipoDato -> PAIR MENOR tipoDato . COMA tipoDato MAYOR

    COMA            shift and go to state 296


state 270

    (55) tipoDato -> TRIPLE MENOR tipoDato . COMA tipoDato COMA tipoDato MAYOR

    COMA            shift and go to state 297


state 271

    (28) funcion -> ID PUNTO CONTAINS APAR ID CPAR .

    PUNTOCOMA       reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    VAL             reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    VAR             reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    ID              reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    ENTEROEXPRESION reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    NEGACION        reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    APAR            reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    TRUE            reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    FALSE           reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    COMDOBLE        reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    LISTOF          reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    SETOF           reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    PAIR            reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    TRIPLE          reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    IF              reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    FOR             reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    WHILE           reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    PRINT           reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    PRINTLN         reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    $end            reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    IGUALIGUAL      reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    NOIGUAL         reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    MAYOR           reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    MENOR           reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    MAYORIGUAL      reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    MENORIGUAL      reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    AND             reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    OR              reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    ELSE            reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    CLLAVE          reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)
    CPAR            reduce using rule 28 (funcion -> ID PUNTO CONTAINS APAR ID CPAR .)


state 272

    (27) funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .

    PUNTOCOMA       reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    VAL             reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    VAR             reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    ID              reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    ENTEROEXPRESION reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    NEGACION        reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    APAR            reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    TRUE            reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    FALSE           reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    COMDOBLE        reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    LISTOF          reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    SETOF           reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    PAIR            reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    TRIPLE          reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    IF              reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    FOR             reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    WHILE           reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    PRINT           reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    PRINTLN         reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    $end            reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    IGUALIGUAL      reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    NOIGUAL         reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    MAYOR           reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    MENOR           reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    MAYORIGUAL      reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    MENORIGUAL      reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    AND             reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    OR              reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    ELSE            reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    CLLAVE          reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)
    CPAR            reduce using rule 27 (funcion -> ID PUNTO CONTAINS APAR factorEspecial CPAR .)


state 273

    (30) funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .

    PUNTOCOMA       reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    VAL             reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    VAR             reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    ID              reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    ENTEROEXPRESION reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    NEGACION        reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    APAR            reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    TRUE            reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    FALSE           reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    COMDOBLE        reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    LISTOF          reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    SETOF           reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    PAIR            reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    TRIPLE          reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    IF              reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    FOR             reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    WHILE           reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    PRINT           reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    PRINTLN         reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    $end            reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    IGUALIGUAL      reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    NOIGUAL         reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    MAYOR           reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    MENOR           reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    MAYORIGUAL      reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    MENORIGUAL      reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    AND             reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    OR              reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    ELSE            reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    CLLAVE          reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)
    CPAR            reduce using rule 30 (funcion -> ID PUNTO GET APAR ENTEROEXPRESION CPAR .)


state 274

    (31) funcion -> ID PUNTO SET APAR factorEspecial CPAR .

    PUNTOCOMA       reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    VAL             reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    VAR             reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    ID              reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    ENTEROEXPRESION reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    NEGACION        reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    APAR            reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    TRUE            reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    FALSE           reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    COMDOBLE        reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    LISTOF          reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    SETOF           reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    PAIR            reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    TRIPLE          reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    IF              reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    FOR             reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    WHILE           reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    PRINT           reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    PRINTLN         reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    $end            reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    IGUALIGUAL      reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    NOIGUAL         reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    MAYOR           reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    MENOR           reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    MAYORIGUAL      reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    MENORIGUAL      reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    AND             reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    OR              reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    ELSE            reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    CLLAVE          reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)
    CPAR            reduce using rule 31 (funcion -> ID PUNTO SET APAR factorEspecial CPAR .)


state 275

    (35) funcion -> ID PUNTO SLICE APAR contentSlice CPAR .

    PUNTOCOMA       reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    VAL             reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    VAR             reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    ID              reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    ENTEROEXPRESION reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    NEGACION        reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    APAR            reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    TRUE            reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    FALSE           reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    COMDOBLE        reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    LISTOF          reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    SETOF           reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    PAIR            reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    TRIPLE          reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    IF              reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    FOR             reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    WHILE           reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    PRINT           reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    PRINTLN         reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    $end            reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    IGUALIGUAL      reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    NOIGUAL         reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    MAYOR           reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    MENOR           reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    MAYORIGUAL      reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    MENORIGUAL      reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    AND             reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    OR              reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    ELSE            reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    CLLAVE          reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)
    CPAR            reduce using rule 35 (funcion -> ID PUNTO SLICE APAR contentSlice CPAR .)


state 276

    (38) funcion -> ID PUNTO SLICE APAR error CPAR .

    PUNTOCOMA       reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    VAL             reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    VAR             reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    ID              reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    ENTEROEXPRESION reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    NEGACION        reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    APAR            reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    TRUE            reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    FALSE           reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    COMDOBLE        reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    LISTOF          reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    SETOF           reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    PAIR            reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    TRIPLE          reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    IF              reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    FOR             reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    WHILE           reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    PRINT           reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    PRINTLN         reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    $end            reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    IGUALIGUAL      reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    NOIGUAL         reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    MAYOR           reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    MENOR           reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    MAYORIGUAL      reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    MENORIGUAL      reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    AND             reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    OR              reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    ELSE            reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    CLLAVE          reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)
    CPAR            reduce using rule 38 (funcion -> ID PUNTO SLICE APAR error CPAR .)


state 277

    (36) contentSlice -> ENTEROEXPRESION PUNTOPUNTO . ENTEROEXPRESION
    (37) contentSlice -> ENTEROEXPRESION PUNTOPUNTO . ENTEROEXPRESION STEP ENTEROEXPRESION

    ENTEROEXPRESION shift and go to state 298


state 278

    (39) funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .

    PUNTOCOMA       reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    VAL             reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    VAR             reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    ID              reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    ENTEROEXPRESION reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    NEGACION        reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    APAR            reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    TRUE            reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    FALSE           reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    COMDOBLE        reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    LISTOF          reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    SETOF           reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    PAIR            reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    TRIPLE          reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    IF              reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    FOR             reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    WHILE           reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    PRINT           reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    PRINTLN         reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    $end            reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    IGUALIGUAL      reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    NOIGUAL         reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    MAYOR           reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    MENOR           reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    MAYORIGUAL      reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    MENORIGUAL      reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    AND             reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    OR              reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    ELSE            reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    CLLAVE          reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)
    CPAR            reduce using rule 39 (funcion -> ID PUNTO INDEXOF APAR factorEspecial CPAR .)


state 279

    (22) funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .

    PUNTOCOMA       reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    VAL             reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    VAR             reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    ID              reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    ENTEROEXPRESION reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    NEGACION        reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    APAR            reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    TRUE            reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    FALSE           reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    COMDOBLE        reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    LISTOF          reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    SETOF           reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    PAIR            reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    TRIPLE          reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    IF              reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    FOR             reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    WHILE           reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    PRINT           reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    PRINTLN         reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    $end            reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    IGUALIGUAL      reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    NOIGUAL         reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    MAYOR           reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    MENOR           reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    MAYORIGUAL      reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    MENORIGUAL      reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    AND             reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    OR              reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    ELSE            reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    CLLAVE          reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)
    CPAR            reduce using rule 22 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR .)


state 280

    (23) funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .

    PUNTOCOMA       reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    VAL             reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    VAR             reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    ID              reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    ENTEROEXPRESION reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    NEGACION        reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    APAR            reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    TRUE            reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    FALSE           reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    COMDOBLE        reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    LISTOF          reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    SETOF           reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    PAIR            reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    TRIPLE          reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    IF              reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    FOR             reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    WHILE           reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    PRINT           reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    PRINTLN         reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    $end            reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    IGUALIGUAL      reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    NOIGUAL         reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    MAYOR           reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    MENOR           reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    MAYORIGUAL      reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    MENORIGUAL      reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    AND             reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    OR              reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    ELSE            reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    CLLAVE          reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)
    CPAR            reduce using rule 23 (funcionCompare -> CADENAEXPRESION PUNTO COMPARETO APAR error CPAR .)


state 281

    (24) funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .

    PUNTOCOMA       reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    VAL             reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    VAR             reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    ID              reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    ENTEROEXPRESION reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    NEGACION        reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    APAR            reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    TRUE            reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    FALSE           reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    COMDOBLE        reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    LISTOF          reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    SETOF           reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    PAIR            reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    TRIPLE          reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    IF              reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    FOR             reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    WHILE           reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    PRINT           reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    PRINTLN         reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    $end            reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    IGUALIGUAL      reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    NOIGUAL         reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    MAYOR           reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    MENOR           reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    MAYORIGUAL      reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    MENORIGUAL      reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    AND             reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    OR              reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    ELSE            reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    CLLAVE          reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)
    CPAR            reduce using rule 24 (funcionGet -> CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR .)


state 282

    (25) funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .

    PUNTOCOMA       reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    VAL             reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    VAR             reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    ID              reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    ENTEROEXPRESION reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    NEGACION        reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    APAR            reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    TRUE            reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    FALSE           reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    COMDOBLE        reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    LISTOF          reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    SETOF           reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    PAIR            reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    TRIPLE          reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    IF              reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    FOR             reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    WHILE           reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    PRINT           reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    PRINTLN         reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    $end            reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    IGUALIGUAL      reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    NOIGUAL         reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    MAYOR           reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    MENOR           reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    MAYORIGUAL      reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    MENORIGUAL      reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    AND             reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    OR              reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    ELSE            reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    CLLAVE          reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)
    CPAR            reduce using rule 25 (funcionGet -> CADENAEXPRESION PUNTO GET APAR error CPAR .)


state 283

    (77) pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .

    PUNTOCOMA       reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    VAL             reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    VAR             reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    ID              reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    ENTEROEXPRESION reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    NEGACION        reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    APAR            reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    TRUE            reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    FALSE           reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    COMDOBLE        reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    LISTOF          reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    SETOF           reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    PAIR            reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    TRIPLE          reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    IF              reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    FOR             reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    WHILE           reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    PRINT           reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    PRINTLN         reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    $end            reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    ELSE            reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)
    CLLAVE          reduce using rule 77 (pair -> PAIR APAR factorEspecial COMA factorEspecial CPAR .)


state 284

    (79) triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA . factorEspecial CPAR
    (104) factorEspecial -> . factor
    (105) factorEspecial -> . CADENAEXPRESION
    (106) factorEspecial -> . list
    (107) factorEspecial -> . set
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F

    ENTEROEXPRESION shift and go to state 178
    ID              shift and go to state 180
    APAR            shift and go to state 138
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 82
    SETOF           shift and go to state 35

    factorEspecial                 shift and go to state 299
    factor                         shift and go to state 174
    CADENAEXPRESION                shift and go to state 175
    list                           shift and go to state 176
    set                            shift and go to state 177
    flotante                       shift and go to state 179

state 285

    (138) if -> IF APAR condicion CPAR cuerpo ELSE . cuerpo
    (135) cuerpo -> . sentencia
    (136) cuerpo -> . ALLAVE todos CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (40) asignacion -> . VAL ID tipoAsignacion
    (41) asignacion -> . VAR ID tipoAsignacion
    (42) asignacion -> . ID inicializacion
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (132) control -> . if
    (133) control -> . for
    (134) control -> . while
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR condicion CPAR
    (16) print -> . printType APAR expresion CPAR
    (17) print -> . printType APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (139) for -> . FOR APAR ID IN ID CPAR cuerpo
    (140) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (149) while -> . WHILE APAR condicion CPAR cuerpo
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (18) printType -> . PRINT
    (19) printType -> . PRINTLN
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 261
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    NEGACION        shift and go to state 22
    APAR            shift and go to state 25
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    PRINT           shift and go to state 42
    PRINTLN         shift and go to state 43

    condicion                      shift and go to state 7
    cuerpo                         shift and go to state 300
    sentencia                      shift and go to state 260
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    CADENAEXPRESION                shift and go to state 15
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    for                            shift and go to state 26
    while                          shift and go to state 27
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    printType                      shift and go to state 30
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 286

    (136) cuerpo -> ALLAVE todos . CLLAVE
    (3) todos -> todos . sentencia
    (4) todos -> todos . sentencia PUNTOCOMA
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (40) asignacion -> . VAL ID tipoAsignacion
    (41) asignacion -> . VAR ID tipoAsignacion
    (42) asignacion -> . ID inicializacion
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (132) control -> . if
    (133) control -> . for
    (134) control -> . while
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR condicion CPAR
    (16) print -> . printType APAR expresion CPAR
    (17) print -> . printType APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (139) for -> . FOR APAR ID IN ID CPAR cuerpo
    (140) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (149) while -> . WHILE APAR condicion CPAR cuerpo
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (18) printType -> . PRINT
    (19) printType -> . PRINTLN
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    CLLAVE          shift and go to state 301
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    NEGACION        shift and go to state 22
    APAR            shift and go to state 25
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    PRINT           shift and go to state 42
    PRINTLN         shift and go to state 43

    sentencia                      shift and go to state 45
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    CADENAEXPRESION                shift and go to state 15
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    for                            shift and go to state 26
    while                          shift and go to state 27
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    printType                      shift and go to state 30
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 287

    (147) for -> FOR APAR APAR ID COMA ID . CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> FOR APAR APAR ID COMA ID . CPAR IN ID CPAR cuerpo

    CPAR            shift and go to state 302


state 288

    (139) for -> FOR APAR ID IN ID CPAR . cuerpo
    (135) cuerpo -> . sentencia
    (136) cuerpo -> . ALLAVE todos CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (40) asignacion -> . VAL ID tipoAsignacion
    (41) asignacion -> . VAR ID tipoAsignacion
    (42) asignacion -> . ID inicializacion
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (132) control -> . if
    (133) control -> . for
    (134) control -> . while
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR condicion CPAR
    (16) print -> . printType APAR expresion CPAR
    (17) print -> . printType APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (139) for -> . FOR APAR ID IN ID CPAR cuerpo
    (140) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (149) while -> . WHILE APAR condicion CPAR cuerpo
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (18) printType -> . PRINT
    (19) printType -> . PRINTLN
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 261
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    NEGACION        shift and go to state 22
    APAR            shift and go to state 25
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    PRINT           shift and go to state 42
    PRINTLN         shift and go to state 43

    cuerpo                         shift and go to state 303
    sentencia                      shift and go to state 260
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    CADENAEXPRESION                shift and go to state 15
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    for                            shift and go to state 26
    while                          shift and go to state 27
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    printType                      shift and go to state 30
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 289

    (145) for -> FOR APAR ID IN ID PUNTO . INDICES CPAR cuerpo
    (146) for -> FOR APAR ID IN ID PUNTO . ID CPAR cuerpo

    INDICES         shift and go to state 305
    ID              shift and go to state 304


state 290

    (141) for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO . ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 306


state 291

    (142) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL . ENTEROEXPRESION CPAR cuerpo
    (143) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL . ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 307


state 292

    (144) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO . ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 308


state 293

    (140) for -> FOR APAR ID DOSPUNTOS INT IN . ID CPAR cuerpo

    ID              shift and go to state 309


state 294

    (52) tipoDato -> LIST MENOR tipoDato MAYOR .

    IGUAL           reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    PUNTOCOMA       reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    VAL             reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    VAR             reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    ID              reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    ENTEROEXPRESION reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    NEGACION        reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    APAR            reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    TRUE            reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    FALSE           reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    COMDOBLE        reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    LISTOF          reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    SETOF           reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    PAIR            reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    TRIPLE          reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    IF              reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    FOR             reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    WHILE           reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    PRINT           reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    PRINTLN         reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    $end            reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    ELSE            reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    CLLAVE          reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    MAYOR           reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    COMA            reduce using rule 52 (tipoDato -> LIST MENOR tipoDato MAYOR .)


state 295

    (53) tipoDato -> SET MENOR tipoDato MAYOR .

    IGUAL           reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    PUNTOCOMA       reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    VAL             reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    VAR             reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    ID              reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    ENTEROEXPRESION reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    NEGACION        reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    APAR            reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    TRUE            reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    FALSE           reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    COMDOBLE        reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    LISTOF          reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    SETOF           reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    PAIR            reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    TRIPLE          reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    IF              reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    FOR             reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    WHILE           reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    PRINT           reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    PRINTLN         reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    $end            reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    ELSE            reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    CLLAVE          reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    MAYOR           reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)
    COMA            reduce using rule 53 (tipoDato -> SET MENOR tipoDato MAYOR .)


state 296

    (54) tipoDato -> PAIR MENOR tipoDato COMA . tipoDato MAYOR
    (48) tipoDato -> . INT
    (49) tipoDato -> . FLOAT
    (50) tipoDato -> . BOOLEAN
    (51) tipoDato -> . STRING
    (52) tipoDato -> . LIST MENOR tipoDato MAYOR
    (53) tipoDato -> . SET MENOR tipoDato MAYOR
    (54) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (55) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 195
    FLOAT           shift and go to state 196
    BOOLEAN         shift and go to state 197
    STRING          shift and go to state 198
    LIST            shift and go to state 199
    SET             shift and go to state 200
    PAIR            shift and go to state 201
    TRIPLE          shift and go to state 202

    tipoDato                       shift and go to state 310

state 297

    (55) tipoDato -> TRIPLE MENOR tipoDato COMA . tipoDato COMA tipoDato MAYOR
    (48) tipoDato -> . INT
    (49) tipoDato -> . FLOAT
    (50) tipoDato -> . BOOLEAN
    (51) tipoDato -> . STRING
    (52) tipoDato -> . LIST MENOR tipoDato MAYOR
    (53) tipoDato -> . SET MENOR tipoDato MAYOR
    (54) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (55) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 195
    FLOAT           shift and go to state 196
    BOOLEAN         shift and go to state 197
    STRING          shift and go to state 198
    LIST            shift and go to state 199
    SET             shift and go to state 200
    PAIR            shift and go to state 201
    TRIPLE          shift and go to state 202

    tipoDato                       shift and go to state 311

state 298

    (36) contentSlice -> ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION .
    (37) contentSlice -> ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION . STEP ENTEROEXPRESION

    CPAR            reduce using rule 36 (contentSlice -> ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION .)
    STEP            shift and go to state 312


state 299

    (79) triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial . CPAR

    CPAR            shift and go to state 313


state 300

    (138) if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .

    PUNTOCOMA       reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    VAL             reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    VAR             reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    ID              reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    ENTEROEXPRESION reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    NEGACION        reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    APAR            reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    TRUE            reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    FALSE           reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    COMDOBLE        reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    LISTOF          reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    SETOF           reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    PAIR            reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    TRIPLE          reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    IF              reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    FOR             reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    WHILE           reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    PRINT           reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    PRINTLN         reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    $end            reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    ELSE            reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    CLLAVE          reduce using rule 138 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)


state 301

    (136) cuerpo -> ALLAVE todos CLLAVE .

    PUNTOCOMA       reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    VAL             reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    VAR             reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    ID              reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    ENTEROEXPRESION reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    NEGACION        reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    APAR            reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    TRUE            reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    FALSE           reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    COMDOBLE        reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    LISTOF          reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    SETOF           reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    PAIR            reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    TRIPLE          reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    IF              reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    FOR             reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    WHILE           reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    PRINT           reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    PRINTLN         reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    $end            reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    ELSE            reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)
    CLLAVE          reduce using rule 136 (cuerpo -> ALLAVE todos CLLAVE .)


state 302

    (147) for -> FOR APAR APAR ID COMA ID CPAR . IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> FOR APAR APAR ID COMA ID CPAR . IN ID CPAR cuerpo

    IN              shift and go to state 314


state 303

    (139) for -> FOR APAR ID IN ID CPAR cuerpo .

    PUNTOCOMA       reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    VAL             reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    VAR             reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    ID              reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    NEGACION        reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    APAR            reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    TRUE            reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    FALSE           reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    COMDOBLE        reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    LISTOF          reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    SETOF           reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    PAIR            reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    TRIPLE          reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    IF              reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    FOR             reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    WHILE           reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    PRINT           reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    PRINTLN         reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    $end            reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    ELSE            reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    CLLAVE          reduce using rule 139 (for -> FOR APAR ID IN ID CPAR cuerpo .)


state 304

    (146) for -> FOR APAR ID IN ID PUNTO ID . CPAR cuerpo

    CPAR            shift and go to state 315


state 305

    (145) for -> FOR APAR ID IN ID PUNTO INDICES . CPAR cuerpo

    CPAR            shift and go to state 316


state 306

    (141) for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION . CPAR cuerpo

    CPAR            shift and go to state 317


state 307

    (142) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION . CPAR cuerpo
    (143) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION . STEP ENTEROEXPRESION CPAR cuerpo

    CPAR            shift and go to state 318
    STEP            shift and go to state 319


state 308

    (144) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION . STEP ENTEROEXPRESION CPAR cuerpo

    STEP            shift and go to state 320


state 309

    (140) for -> FOR APAR ID DOSPUNTOS INT IN ID . CPAR cuerpo

    CPAR            shift and go to state 321


state 310

    (54) tipoDato -> PAIR MENOR tipoDato COMA tipoDato . MAYOR

    MAYOR           shift and go to state 322


state 311

    (55) tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato . COMA tipoDato MAYOR

    COMA            shift and go to state 323


state 312

    (37) contentSlice -> ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION STEP . ENTEROEXPRESION

    ENTEROEXPRESION shift and go to state 324


state 313

    (79) triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .

    PUNTOCOMA       reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    VAL             reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    VAR             reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    ID              reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    ENTEROEXPRESION reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    NEGACION        reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    APAR            reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    TRUE            reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    FALSE           reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    COMDOBLE        reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    LISTOF          reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    SETOF           reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    PAIR            reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    TRIPLE          reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    IF              reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    FOR             reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    WHILE           reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    PRINT           reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    PRINTLN         reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    $end            reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    ELSE            reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)
    CLLAVE          reduce using rule 79 (triple -> TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR .)


state 314

    (147) for -> FOR APAR APAR ID COMA ID CPAR IN . ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> FOR APAR APAR ID COMA ID CPAR IN . ID CPAR cuerpo

    ID              shift and go to state 325


state 315

    (146) for -> FOR APAR ID IN ID PUNTO ID CPAR . cuerpo
    (135) cuerpo -> . sentencia
    (136) cuerpo -> . ALLAVE todos CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (40) asignacion -> . VAL ID tipoAsignacion
    (41) asignacion -> . VAR ID tipoAsignacion
    (42) asignacion -> . ID inicializacion
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (132) control -> . if
    (133) control -> . for
    (134) control -> . while
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR condicion CPAR
    (16) print -> . printType APAR expresion CPAR
    (17) print -> . printType APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (139) for -> . FOR APAR ID IN ID CPAR cuerpo
    (140) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (149) while -> . WHILE APAR condicion CPAR cuerpo
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (18) printType -> . PRINT
    (19) printType -> . PRINTLN
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 261
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    NEGACION        shift and go to state 22
    APAR            shift and go to state 25
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    PRINT           shift and go to state 42
    PRINTLN         shift and go to state 43

    cuerpo                         shift and go to state 326
    sentencia                      shift and go to state 260
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    CADENAEXPRESION                shift and go to state 15
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    for                            shift and go to state 26
    while                          shift and go to state 27
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    printType                      shift and go to state 30
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 316

    (145) for -> FOR APAR ID IN ID PUNTO INDICES CPAR . cuerpo
    (135) cuerpo -> . sentencia
    (136) cuerpo -> . ALLAVE todos CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (40) asignacion -> . VAL ID tipoAsignacion
    (41) asignacion -> . VAR ID tipoAsignacion
    (42) asignacion -> . ID inicializacion
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (132) control -> . if
    (133) control -> . for
    (134) control -> . while
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR condicion CPAR
    (16) print -> . printType APAR expresion CPAR
    (17) print -> . printType APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (139) for -> . FOR APAR ID IN ID CPAR cuerpo
    (140) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (149) while -> . WHILE APAR condicion CPAR cuerpo
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (18) printType -> . PRINT
    (19) printType -> . PRINTLN
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 261
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    NEGACION        shift and go to state 22
    APAR            shift and go to state 25
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    PRINT           shift and go to state 42
    PRINTLN         shift and go to state 43

    cuerpo                         shift and go to state 327
    sentencia                      shift and go to state 260
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    CADENAEXPRESION                shift and go to state 15
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    for                            shift and go to state 26
    while                          shift and go to state 27
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    printType                      shift and go to state 30
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 317

    (141) for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR . cuerpo
    (135) cuerpo -> . sentencia
    (136) cuerpo -> . ALLAVE todos CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (40) asignacion -> . VAL ID tipoAsignacion
    (41) asignacion -> . VAR ID tipoAsignacion
    (42) asignacion -> . ID inicializacion
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (132) control -> . if
    (133) control -> . for
    (134) control -> . while
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR condicion CPAR
    (16) print -> . printType APAR expresion CPAR
    (17) print -> . printType APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (139) for -> . FOR APAR ID IN ID CPAR cuerpo
    (140) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (149) while -> . WHILE APAR condicion CPAR cuerpo
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (18) printType -> . PRINT
    (19) printType -> . PRINTLN
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 261
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    NEGACION        shift and go to state 22
    APAR            shift and go to state 25
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    PRINT           shift and go to state 42
    PRINTLN         shift and go to state 43

    cuerpo                         shift and go to state 328
    sentencia                      shift and go to state 260
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    CADENAEXPRESION                shift and go to state 15
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    for                            shift and go to state 26
    while                          shift and go to state 27
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    printType                      shift and go to state 30
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 318

    (142) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR . cuerpo
    (135) cuerpo -> . sentencia
    (136) cuerpo -> . ALLAVE todos CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (40) asignacion -> . VAL ID tipoAsignacion
    (41) asignacion -> . VAR ID tipoAsignacion
    (42) asignacion -> . ID inicializacion
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (132) control -> . if
    (133) control -> . for
    (134) control -> . while
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR condicion CPAR
    (16) print -> . printType APAR expresion CPAR
    (17) print -> . printType APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (139) for -> . FOR APAR ID IN ID CPAR cuerpo
    (140) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (149) while -> . WHILE APAR condicion CPAR cuerpo
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (18) printType -> . PRINT
    (19) printType -> . PRINTLN
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 261
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    NEGACION        shift and go to state 22
    APAR            shift and go to state 25
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    PRINT           shift and go to state 42
    PRINTLN         shift and go to state 43

    cuerpo                         shift and go to state 329
    sentencia                      shift and go to state 260
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    CADENAEXPRESION                shift and go to state 15
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    for                            shift and go to state 26
    while                          shift and go to state 27
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    printType                      shift and go to state 30
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 319

    (143) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP . ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 330


state 320

    (144) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP . ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 331


state 321

    (140) for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR . cuerpo
    (135) cuerpo -> . sentencia
    (136) cuerpo -> . ALLAVE todos CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (40) asignacion -> . VAL ID tipoAsignacion
    (41) asignacion -> . VAR ID tipoAsignacion
    (42) asignacion -> . ID inicializacion
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (132) control -> . if
    (133) control -> . for
    (134) control -> . while
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR condicion CPAR
    (16) print -> . printType APAR expresion CPAR
    (17) print -> . printType APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (139) for -> . FOR APAR ID IN ID CPAR cuerpo
    (140) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (149) while -> . WHILE APAR condicion CPAR cuerpo
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (18) printType -> . PRINT
    (19) printType -> . PRINTLN
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 261
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    NEGACION        shift and go to state 22
    APAR            shift and go to state 25
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    PRINT           shift and go to state 42
    PRINTLN         shift and go to state 43

    cuerpo                         shift and go to state 332
    sentencia                      shift and go to state 260
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    CADENAEXPRESION                shift and go to state 15
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    for                            shift and go to state 26
    while                          shift and go to state 27
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    printType                      shift and go to state 30
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 322

    (54) tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .

    IGUAL           reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    PUNTOCOMA       reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    VAL             reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    VAR             reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    ID              reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    ENTEROEXPRESION reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    NEGACION        reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    APAR            reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    TRUE            reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    FALSE           reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    COMDOBLE        reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    LISTOF          reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    SETOF           reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    PAIR            reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    TRIPLE          reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    IF              reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    FOR             reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    WHILE           reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    PRINT           reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    PRINTLN         reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    $end            reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    ELSE            reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    CLLAVE          reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    MAYOR           reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    COMA            reduce using rule 54 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)


state 323

    (55) tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA . tipoDato MAYOR
    (48) tipoDato -> . INT
    (49) tipoDato -> . FLOAT
    (50) tipoDato -> . BOOLEAN
    (51) tipoDato -> . STRING
    (52) tipoDato -> . LIST MENOR tipoDato MAYOR
    (53) tipoDato -> . SET MENOR tipoDato MAYOR
    (54) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (55) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 195
    FLOAT           shift and go to state 196
    BOOLEAN         shift and go to state 197
    STRING          shift and go to state 198
    LIST            shift and go to state 199
    SET             shift and go to state 200
    PAIR            shift and go to state 201
    TRIPLE          shift and go to state 202

    tipoDato                       shift and go to state 333

state 324

    (37) contentSlice -> ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION STEP ENTEROEXPRESION .

    CPAR            reduce using rule 37 (contentSlice -> ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION STEP ENTEROEXPRESION .)


state 325

    (147) for -> FOR APAR APAR ID COMA ID CPAR IN ID . PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> FOR APAR APAR ID COMA ID CPAR IN ID . CPAR cuerpo

    PUNTO           shift and go to state 335
    CPAR            shift and go to state 334


state 326

    (146) for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .

    PUNTOCOMA       reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    VAL             reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    VAR             reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    ID              reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    NEGACION        reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    APAR            reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    TRUE            reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    FALSE           reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    COMDOBLE        reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    LISTOF          reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    SETOF           reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    PAIR            reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    TRIPLE          reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    IF              reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    FOR             reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    WHILE           reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    PRINT           reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    PRINTLN         reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    $end            reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    ELSE            reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    CLLAVE          reduce using rule 146 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)


state 327

    (145) for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .

    PUNTOCOMA       reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    VAL             reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    VAR             reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    ID              reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    NEGACION        reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    APAR            reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    TRUE            reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    FALSE           reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    COMDOBLE        reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    LISTOF          reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    SETOF           reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    PAIR            reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    TRIPLE          reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    IF              reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    FOR             reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    WHILE           reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    PRINT           reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    PRINTLN         reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    $end            reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    ELSE            reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    CLLAVE          reduce using rule 145 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)


state 328

    (141) for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .

    PUNTOCOMA       reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    VAL             reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    VAR             reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    ID              reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    NEGACION        reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    APAR            reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    TRUE            reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    FALSE           reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    COMDOBLE        reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    LISTOF          reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    SETOF           reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    PAIR            reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    TRIPLE          reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    IF              reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    FOR             reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    WHILE           reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    PRINT           reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    PRINTLN         reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    $end            reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    ELSE            reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    CLLAVE          reduce using rule 141 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)


state 329

    (142) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .

    PUNTOCOMA       reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    VAL             reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    VAR             reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    ID              reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    NEGACION        reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    APAR            reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    TRUE            reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    FALSE           reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    COMDOBLE        reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    LISTOF          reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    SETOF           reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    PAIR            reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    TRIPLE          reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    IF              reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    FOR             reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    WHILE           reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    PRINT           reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    PRINTLN         reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    $end            reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    ELSE            reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    CLLAVE          reduce using rule 142 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)


state 330

    (143) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION . CPAR cuerpo

    CPAR            shift and go to state 336


state 331

    (144) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION . CPAR cuerpo

    CPAR            shift and go to state 337


state 332

    (140) for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .

    PUNTOCOMA       reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    VAL             reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    VAR             reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    ID              reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    NEGACION        reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    APAR            reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    TRUE            reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    FALSE           reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    COMDOBLE        reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    LISTOF          reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    SETOF           reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    PAIR            reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    TRIPLE          reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    IF              reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    FOR             reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    WHILE           reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    PRINT           reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    PRINTLN         reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    $end            reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    ELSE            reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    CLLAVE          reduce using rule 140 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)


state 333

    (55) tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato . MAYOR

    MAYOR           shift and go to state 338


state 334

    (148) for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR . cuerpo
    (135) cuerpo -> . sentencia
    (136) cuerpo -> . ALLAVE todos CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (40) asignacion -> . VAL ID tipoAsignacion
    (41) asignacion -> . VAR ID tipoAsignacion
    (42) asignacion -> . ID inicializacion
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (132) control -> . if
    (133) control -> . for
    (134) control -> . while
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR condicion CPAR
    (16) print -> . printType APAR expresion CPAR
    (17) print -> . printType APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (139) for -> . FOR APAR ID IN ID CPAR cuerpo
    (140) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (149) while -> . WHILE APAR condicion CPAR cuerpo
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (18) printType -> . PRINT
    (19) printType -> . PRINTLN
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 261
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    NEGACION        shift and go to state 22
    APAR            shift and go to state 25
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    PRINT           shift and go to state 42
    PRINTLN         shift and go to state 43

    cuerpo                         shift and go to state 339
    sentencia                      shift and go to state 260
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    CADENAEXPRESION                shift and go to state 15
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    for                            shift and go to state 26
    while                          shift and go to state 27
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    printType                      shift and go to state 30
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 335

    (147) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO . WITHINDEX APAR CPAR CPAR cuerpo

    WITHINDEX       shift and go to state 340


state 336

    (143) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR . cuerpo
    (135) cuerpo -> . sentencia
    (136) cuerpo -> . ALLAVE todos CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (40) asignacion -> . VAL ID tipoAsignacion
    (41) asignacion -> . VAR ID tipoAsignacion
    (42) asignacion -> . ID inicializacion
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (132) control -> . if
    (133) control -> . for
    (134) control -> . while
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR condicion CPAR
    (16) print -> . printType APAR expresion CPAR
    (17) print -> . printType APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (139) for -> . FOR APAR ID IN ID CPAR cuerpo
    (140) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (149) while -> . WHILE APAR condicion CPAR cuerpo
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (18) printType -> . PRINT
    (19) printType -> . PRINTLN
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 261
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    NEGACION        shift and go to state 22
    APAR            shift and go to state 25
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    PRINT           shift and go to state 42
    PRINTLN         shift and go to state 43

    cuerpo                         shift and go to state 341
    sentencia                      shift and go to state 260
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    CADENAEXPRESION                shift and go to state 15
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    for                            shift and go to state 26
    while                          shift and go to state 27
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    printType                      shift and go to state 30
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 337

    (144) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR . cuerpo
    (135) cuerpo -> . sentencia
    (136) cuerpo -> . ALLAVE todos CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (40) asignacion -> . VAL ID tipoAsignacion
    (41) asignacion -> . VAR ID tipoAsignacion
    (42) asignacion -> . ID inicializacion
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (132) control -> . if
    (133) control -> . for
    (134) control -> . while
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR condicion CPAR
    (16) print -> . printType APAR expresion CPAR
    (17) print -> . printType APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (139) for -> . FOR APAR ID IN ID CPAR cuerpo
    (140) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (149) while -> . WHILE APAR condicion CPAR cuerpo
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (18) printType -> . PRINT
    (19) printType -> . PRINTLN
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 261
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    NEGACION        shift and go to state 22
    APAR            shift and go to state 25
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    PRINT           shift and go to state 42
    PRINTLN         shift and go to state 43

    cuerpo                         shift and go to state 342
    sentencia                      shift and go to state 260
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    CADENAEXPRESION                shift and go to state 15
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    for                            shift and go to state 26
    while                          shift and go to state 27
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    printType                      shift and go to state 30
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 338

    (55) tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .

    IGUAL           reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    PUNTOCOMA       reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    VAL             reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    VAR             reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    ID              reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    ENTEROEXPRESION reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    NEGACION        reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    APAR            reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    TRUE            reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    FALSE           reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    COMDOBLE        reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    LISTOF          reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    SETOF           reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    PAIR            reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    TRIPLE          reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    IF              reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    FOR             reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    WHILE           reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    PRINT           reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    PRINTLN         reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    $end            reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    ELSE            reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    CLLAVE          reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    MAYOR           reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    COMA            reduce using rule 55 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)


state 339

    (148) for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .

    PUNTOCOMA       reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    VAL             reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    VAR             reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    ID              reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    NEGACION        reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    APAR            reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    TRUE            reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    FALSE           reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    COMDOBLE        reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    LISTOF          reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    SETOF           reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    PAIR            reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    TRIPLE          reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    IF              reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    FOR             reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    WHILE           reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    PRINT           reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    PRINTLN         reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    $end            reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    ELSE            reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    CLLAVE          reduce using rule 148 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)


state 340

    (147) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX . APAR CPAR CPAR cuerpo

    APAR            shift and go to state 343


state 341

    (143) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .

    PUNTOCOMA       reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    VAL             reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    VAR             reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    ID              reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    NEGACION        reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    APAR            reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    TRUE            reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    FALSE           reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    COMDOBLE        reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    LISTOF          reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    SETOF           reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    PAIR            reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    TRIPLE          reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    IF              reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    FOR             reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    WHILE           reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    PRINT           reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    PRINTLN         reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    $end            reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    ELSE            reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    CLLAVE          reduce using rule 143 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)


state 342

    (144) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .

    PUNTOCOMA       reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    VAL             reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    VAR             reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    ID              reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    NEGACION        reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    APAR            reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    TRUE            reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    FALSE           reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    COMDOBLE        reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    LISTOF          reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    SETOF           reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    PAIR            reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    TRIPLE          reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    IF              reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    FOR             reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    WHILE           reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    PRINT           reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    PRINTLN         reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    $end            reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    ELSE            reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    CLLAVE          reduce using rule 144 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)


state 343

    (147) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR . CPAR CPAR cuerpo

    CPAR            shift and go to state 344


state 344

    (147) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR . CPAR cuerpo

    CPAR            shift and go to state 345


state 345

    (147) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR . cuerpo
    (135) cuerpo -> . sentencia
    (136) cuerpo -> . ALLAVE todos CLLAVE
    (5) sentencia -> . asignacion
    (6) sentencia -> . valor
    (7) sentencia -> . funcion
    (8) sentencia -> . control
    (9) sentencia -> . condicion
    (10) sentencia -> . print
    (40) asignacion -> . VAL ID tipoAsignacion
    (41) asignacion -> . VAR ID tipoAsignacion
    (42) asignacion -> . ID inicializacion
    (56) valor -> . ENTEROEXPRESION
    (57) valor -> . flotante
    (58) valor -> . expresionBooleano
    (59) valor -> . CADENAEXPRESION
    (60) valor -> . list
    (61) valor -> . set
    (62) valor -> . pair
    (63) valor -> . triple
    (64) valor -> . expresion
    (65) valor -> . ID
    (66) valor -> . if
    (67) valor -> . NEGACION ID
    (20) funcion -> . funcionCompare
    (21) funcion -> . funcionGet
    (26) funcion -> . CADENAEXPRESION PUNTO HASHCODE APAR CPAR
    (27) funcion -> . ID PUNTO CONTAINS APAR factorEspecial CPAR
    (28) funcion -> . ID PUNTO CONTAINS APAR ID CPAR
    (29) funcion -> . ID PUNTO SIZE
    (30) funcion -> . ID PUNTO GET APAR ENTEROEXPRESION CPAR
    (31) funcion -> . ID PUNTO SET APAR factorEspecial CPAR
    (32) funcion -> . ID PUNTO ISEMPTY APAR CPAR
    (33) funcion -> . ID PUNTO TOLIST APAR CPAR
    (34) funcion -> . ID PUNTO TOSTRING APAR CPAR
    (35) funcion -> . ID PUNTO SLICE APAR contentSlice CPAR
    (38) funcion -> . ID PUNTO SLICE APAR error CPAR
    (39) funcion -> . ID PUNTO INDEXOF APAR factorEspecial CPAR
    (132) control -> . if
    (133) control -> . for
    (134) control -> . while
    (127) condicion -> . compmiembro comparador compmiembro
    (128) condicion -> . compsolo
    (129) condicion -> . NEGACION condicion
    (130) condicion -> . condicion conector condicion
    (131) condicion -> . APAR condicion CPAR
    (11) print -> . printType APAR CADENAEXPRESION CPAR
    (12) print -> . printType APAR CPAR
    (13) print -> . printType APAR ID CPAR
    (14) print -> . printType APAR funcion CPAR
    (15) print -> . printType APAR condicion CPAR
    (16) print -> . printType APAR expresion CPAR
    (17) print -> . printType APAR error CPAR
    (70) flotante -> . ENTEROEXPRESION F
    (71) flotante -> . ENTEROEXPRESION PUNTO ENTEROEXPRESION F
    (72) flotante -> . ENTEROEXPRESION error F
    (68) expresionBooleano -> . TRUE
    (69) expresionBooleano -> . FALSE
    (150) CADENAEXPRESION -> . COMDOBLE content COMDOBLE
    (151) CADENAEXPRESION -> . COMDOBLE COMDOBLE
    (73) list -> . LISTOF APAR contenido CPAR
    (74) list -> . LISTOF APAR error CPAR
    (75) set -> . SETOF APAR contenido CPAR
    (76) set -> . LISTOF APAR error CPAR
    (77) pair -> . PAIR APAR factorEspecial COMA factorEspecial CPAR
    (78) pair -> . LISTOF APAR error CPAR
    (79) triple -> . TRIPLE APAR factorEspecial COMA factorEspecial COMA factorEspecial CPAR
    (80) triple -> . LISTOF APAR error CPAR
    (83) expresion -> . expresion SUMA termino
    (84) expresion -> . expresion RESTA termino
    (85) expresion -> . expresion DIVISION termino
    (86) expresion -> . expresion MULT termino
    (87) expresion -> . expresion MODULO termino
    (88) expresion -> . termino
    (137) if -> . IF APAR condicion CPAR cuerpo
    (138) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (22) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR CADENAEXPRESION CPAR
    (23) funcionCompare -> . CADENAEXPRESION PUNTO COMPARETO APAR error CPAR
    (24) funcionGet -> . CADENAEXPRESION PUNTO GET APAR ENTEROEXPRESION CPAR
    (25) funcionGet -> . CADENAEXPRESION PUNTO GET APAR error CPAR
    (139) for -> . FOR APAR ID IN ID CPAR cuerpo
    (140) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (141) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (142) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (143) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (144) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (145) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (146) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (147) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (148) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (149) while -> . WHILE APAR condicion CPAR cuerpo
    (117) compmiembro -> . ID
    (118) compmiembro -> . CADENAEXPRESION
    (119) compmiembro -> . ENTEROEXPRESION
    (120) compmiembro -> . funcion
    (121) compmiembro -> . expresionBooleano
    (122) compmiembro -> . NEGACION compmiembro
    (123) compsolo -> . ID
    (124) compsolo -> . expresionBooleano
    (125) compsolo -> . funcion
    (126) compsolo -> . NEGACION compsolo
    (18) printType -> . PRINT
    (19) printType -> . PRINTLN
    (89) termino -> . termino SUMA factorEspecial
    (90) termino -> . termino RESTA factor
    (91) termino -> . termino MULT factor
    (92) termino -> . termino DIVISION factor
    (93) termino -> . termino MODULO factor
    (94) termino -> . factor
    (95) termino -> . ENTEROEXPRESION
    (96) termino -> . flotante
    (97) termino -> . CADENAEXPRESION
    (98) termino -> . list
    (99) termino -> . set
    (100) termino -> . ID
    (101) factor -> . ENTEROEXPRESION
    (102) factor -> . flotante
    (103) factor -> . ID
    (108) factor -> . APAR expresion CPAR

    ALLAVE          shift and go to state 261
    VAL             shift and go to state 9
    VAR             shift and go to state 11
    ID              shift and go to state 10
    ENTEROEXPRESION shift and go to state 12
    NEGACION        shift and go to state 22
    APAR            shift and go to state 25
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    COMDOBLE        shift and go to state 33
    LISTOF          shift and go to state 34
    SETOF           shift and go to state 35
    PAIR            shift and go to state 36
    TRIPLE          shift and go to state 37
    IF              shift and go to state 39
    FOR             shift and go to state 40
    WHILE           shift and go to state 41
    PRINT           shift and go to state 42
    PRINTLN         shift and go to state 43

    cuerpo                         shift and go to state 346
    sentencia                      shift and go to state 260
    asignacion                     shift and go to state 3
    valor                          shift and go to state 4
    funcion                        shift and go to state 5
    control                        shift and go to state 6
    condicion                      shift and go to state 7
    print                          shift and go to state 8
    flotante                       shift and go to state 13
    expresionBooleano              shift and go to state 14
    CADENAEXPRESION                shift and go to state 15
    list                           shift and go to state 16
    set                            shift and go to state 17
    pair                           shift and go to state 18
    triple                         shift and go to state 19
    expresion                      shift and go to state 20
    if                             shift and go to state 21
    funcionCompare                 shift and go to state 23
    funcionGet                     shift and go to state 24
    for                            shift and go to state 26
    while                          shift and go to state 27
    compmiembro                    shift and go to state 28
    compsolo                       shift and go to state 29
    printType                      shift and go to state 30
    termino                        shift and go to state 38
    factor                         shift and go to state 44

state 346

    (147) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .

    PUNTOCOMA       reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    VAL             reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    VAR             reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    ID              reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    ENTEROEXPRESION reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    NEGACION        reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    APAR            reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    TRUE            reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    FALSE           reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    COMDOBLE        reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    LISTOF          reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    SETOF           reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    PAIR            reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    TRIPLE          reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    IF              reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    FOR             reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    WHILE           reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    PRINT           reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    PRINTLN         reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    $end            reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    ELSE            reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    CLLAVE          reduce using rule 147 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUMA in state 38 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 38 resolved as shift
WARNING: shift/reduce conflict for MULT in state 38 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 38 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 38 resolved as shift
WARNING: shift/reduce conflict for AND in state 66 resolved as shift
WARNING: shift/reduce conflict for OR in state 66 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 67 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 67 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for AND in state 116 resolved as shift
WARNING: shift/reduce conflict for OR in state 116 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 145 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 145 resolved as shift
WARNING: shift/reduce conflict for MULT in state 145 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 145 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 145 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 149 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 149 resolved as shift
WARNING: shift/reduce conflict for MULT in state 149 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 149 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 149 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 150 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 150 resolved as shift
WARNING: shift/reduce conflict for MULT in state 150 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 150 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 150 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 151 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 151 resolved as shift
WARNING: shift/reduce conflict for MULT in state 151 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 151 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 151 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 152 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 152 resolved as shift
WARNING: shift/reduce conflict for MULT in state 152 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 152 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 152 resolved as shift
WARNING: shift/reduce conflict for CPAR in state 161 resolved as shift
WARNING: shift/reduce conflict for CPAR in state 163 resolved as shift
WARNING: shift/reduce conflict for CPAR in state 163 resolved as shift
WARNING: shift/reduce conflict for CPAR in state 163 resolved as shift
WARNING: shift/reduce conflict for CPAR in state 164 resolved as shift
WARNING: shift/reduce conflict for SIGNODOLAR in state 169 resolved as shift
WARNING: shift/reduce conflict for ID in state 169 resolved as shift
WARNING: shift/reduce conflict for ENTEROEXPRESION in state 169 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 169 resolved as shift
WARNING: shift/reduce conflict for PUNTOPUNTO in state 169 resolved as shift
WARNING: shift/reduce conflict for SYMBOL in state 169 resolved as shift
WARNING: shift/reduce conflict for COMA in state 169 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 169 resolved as shift
WARNING: shift/reduce conflict for DOSPUNTOS in state 169 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 169 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 169 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 169 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 169 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 169 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 169 resolved as shift
WARNING: shift/reduce conflict for CPAR in state 239 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 259 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (sentencia -> funcion)
WARNING: rejected rule (compsolo -> funcion) in state 5
WARNING: reduce/reduce conflict in state 10 resolved using rule (valor -> ID)
WARNING: rejected rule (compsolo -> ID) in state 10
WARNING: reduce/reduce conflict in state 10 resolved using rule (valor -> ID)
WARNING: rejected rule (termino -> ID) in state 10
WARNING: reduce/reduce conflict in state 10 resolved using rule (termino -> ID)
WARNING: rejected rule (factor -> ID) in state 10
WARNING: reduce/reduce conflict in state 10 resolved using rule (valor -> ID)
WARNING: rejected rule (factor -> ID) in state 10
WARNING: reduce/reduce conflict in state 12 resolved using rule (valor -> ENTEROEXPRESION)
WARNING: rejected rule (termino -> ENTEROEXPRESION) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (termino -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (valor -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 12
WARNING: reduce/reduce conflict in state 13 resolved using rule (valor -> flotante)
WARNING: rejected rule (termino -> flotante) in state 13
WARNING: reduce/reduce conflict in state 13 resolved using rule (termino -> flotante)
WARNING: rejected rule (factor -> flotante) in state 13
WARNING: reduce/reduce conflict in state 13 resolved using rule (valor -> flotante)
WARNING: rejected rule (factor -> flotante) in state 13
WARNING: reduce/reduce conflict in state 14 resolved using rule (valor -> expresionBooleano)
WARNING: rejected rule (compsolo -> expresionBooleano) in state 14
WARNING: reduce/reduce conflict in state 15 resolved using rule (valor -> CADENAEXPRESION)
WARNING: rejected rule (termino -> CADENAEXPRESION) in state 15
WARNING: reduce/reduce conflict in state 16 resolved using rule (valor -> list)
WARNING: rejected rule (termino -> list) in state 16
WARNING: reduce/reduce conflict in state 17 resolved using rule (valor -> set)
WARNING: rejected rule (termino -> set) in state 17
WARNING: reduce/reduce conflict in state 21 resolved using rule (valor -> if)
WARNING: rejected rule (control -> if) in state 21
WARNING: reduce/reduce conflict in state 65 resolved using rule (valor -> NEGACION ID)
WARNING: rejected rule (compsolo -> ID) in state 65
WARNING: reduce/reduce conflict in state 68 resolved using rule (compsolo -> NEGACION compsolo)
WARNING: rejected rule (condicion -> compsolo) in state 68
WARNING: reduce/reduce conflict in state 76 resolved using rule (termino -> ID)
WARNING: rejected rule (compsolo -> ID) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (termino -> ID)
WARNING: rejected rule (factor -> ID) in state 76
WARNING: reduce/reduce conflict in state 78 resolved using rule (termino -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 78
WARNING: reduce/reduce conflict in state 79 resolved using rule (termino -> flotante)
WARNING: rejected rule (factor -> flotante) in state 79
WARNING: reduce/reduce conflict in state 132 resolved using rule (valor -> ENTEROEXPRESION)
WARNING: rejected rule (termino -> ENTEROEXPRESION) in state 132
WARNING: reduce/reduce conflict in state 132 resolved using rule (termino -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 132
WARNING: reduce/reduce conflict in state 132 resolved using rule (valor -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 132
WARNING: reduce/reduce conflict in state 134 resolved using rule (valor -> CADENAEXPRESION)
WARNING: rejected rule (termino -> CADENAEXPRESION) in state 134
WARNING: reduce/reduce conflict in state 135 resolved using rule (valor -> ID)
WARNING: rejected rule (termino -> ID) in state 135
WARNING: reduce/reduce conflict in state 135 resolved using rule (termino -> ID)
WARNING: rejected rule (factor -> ID) in state 135
WARNING: reduce/reduce conflict in state 135 resolved using rule (valor -> ID)
WARNING: rejected rule (factor -> ID) in state 135
WARNING: reduce/reduce conflict in state 146 resolved using rule (termino -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 146
WARNING: reduce/reduce conflict in state 148 resolved using rule (termino -> ID)
WARNING: rejected rule (factor -> ID) in state 148
WARNING: reduce/reduce conflict in state 163 resolved using rule (termino -> ID)
WARNING: rejected rule (factor -> ID) in state 163
WARNING: reduce/reduce conflict in state 225 resolved using rule (list -> LISTOF APAR error CPAR)
WARNING: rejected rule (set -> LISTOF APAR error CPAR) in state 225
WARNING: reduce/reduce conflict in state 225 resolved using rule (list -> LISTOF APAR error CPAR)
WARNING: rejected rule (pair -> LISTOF APAR error CPAR) in state 225
WARNING: reduce/reduce conflict in state 225 resolved using rule (list -> LISTOF APAR error CPAR)
WARNING: rejected rule (triple -> LISTOF APAR error CPAR) in state 225
WARNING: reduce/reduce conflict in state 255 resolved using rule (list -> LISTOF APAR error CPAR)
WARNING: rejected rule (set -> LISTOF APAR error CPAR) in state 255
WARNING: Rule (control -> if) is never reduced
WARNING: Rule (set -> LISTOF APAR error CPAR) is never reduced
WARNING: Rule (pair -> LISTOF APAR error CPAR) is never reduced
WARNING: Rule (triple -> LISTOF APAR error CPAR) is never reduced
