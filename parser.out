Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROBA
    BREAK
    COMDOBLE
    COMENTARIOMULTILINEA
    COMENTARIOSIMPLE
    COMSIMPLE
    FALSE
    FUN
    INICIOCOMENTARIO
    NEGACION
    PREGUNTA
    PUNTOCOMA
    SIGNODOLAR
    TRUE

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> asignacion
Rule 2     sentencia -> expresion
Rule 3     sentencia -> metodo
Rule 4     sentencia -> control
Rule 5     sentencia -> condicion
Rule 6     sentencia -> atributo
Rule 7     asignacion -> VAL ID tipoAsignacion
Rule 8     asignacion -> VAR ID tipoAsignacion
Rule 9     tipoAsignacion -> declaracion
Rule 10    tipoAsignacion -> inicializacion
Rule 11    tipoAsignacion -> declaracion inicializacion
Rule 12    declaracion -> DOSPUNTOS tipoDato
Rule 13    inicializacion -> IGUAL valor
Rule 14    tipoDato -> INT
Rule 15    tipoDato -> FLOAT
Rule 16    tipoDato -> BOOLEAN
Rule 17    tipoDato -> STRING
Rule 18    tipoDato -> LIST MENOR tipoDato MAYOR
Rule 19    tipoDato -> SET MENOR tipoDato MAYOR
Rule 20    tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR
Rule 21    tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR
Rule 22    valor -> ENTEROEXPRESION
Rule 23    valor -> FLOTANTEEXPRESION
Rule 24    valor -> BOOLEANOEXPRESION
Rule 25    valor -> CADENAEXPRESION
Rule 26    valor -> list
Rule 27    valor -> set
Rule 28    valor -> pair
Rule 29    valor -> triple
Rule 30    list -> ACOR contenido CCOR
Rule 31    set -> APAR contenido CPAR
Rule 32    pair -> APAR tipoFactor COMA tipoFactor CPAR
Rule 33    triple -> APAR tipoFactor COMA tipoFactor COMA tipoFactor CPAR
Rule 34    contenido -> elementos factor
Rule 35    contenido -> elementos factorEspecial
Rule 36    elementos -> elementos COMA
Rule 37    elementos -> factor
Rule 38    elementos -> factorEspecial
Rule 39    tipoFactor -> factor
Rule 40    tipoFactor -> factorEspecial
Rule 41    expresion -> expresion SUMA termino
Rule 42    expresion -> expresion RESTA termino
Rule 43    expresion -> expresion DIVISION termino
Rule 44    expresion -> expresion MULT termino
Rule 45    expresion -> expresion MODULO termino
Rule 46    expresion -> termino
Rule 47    termino -> termino SUMA factorEspecial
Rule 48    termino -> termino RESTA factor
Rule 49    termino -> termino MULT factor
Rule 50    termino -> termino DIVISION factor
Rule 51    termino -> termino MODULO factor
Rule 52    termino -> factor
Rule 53    termino -> ENTEROEXPRESION
Rule 54    termino -> FLOTANTEEXPRESION
Rule 55    termino -> CADENAEXPRESION
Rule 56    termino -> list
Rule 57    termino -> set
Rule 58    factor -> ENTEROEXPRESION
Rule 59    factor -> FLOTANTEEXPRESION
Rule 60    factorEspecial -> ENTEROEXPRESION
Rule 61    factorEspecial -> FLOTANTEEXPRESION
Rule 62    factorEspecial -> CADENAEXPRESION
Rule 63    factorEspecial -> list
Rule 64    factorEspecial -> set
Rule 65    factor -> APAR expresion CPAR
Rule 66    funcion -> WITHINDEX
Rule 67    funcion -> GET
Rule 68    funcion -> SLICE
Rule 69    funcion -> COMPARETO
Rule 70    funcion -> GETINDEX
Rule 71    funcion -> HASHCODE
Rule 72    funcion -> CONTAINS
Rule 73    funcion -> SIZE
Rule 74    funcion -> ISEMPTY
Rule 75    funcion -> TOSTRING
Rule 76    funcion -> TOLIST
Rule 77    funcion -> PRINT
Rule 78    funcion -> PRINTLN
Rule 79    funcion -> INDICES
Rule 80    metodo -> ID PUNTO ID APAR CPAR
Rule 81    metodo -> ID PUNTO ID APAR ID CPAR
Rule 82    metodo -> atributo PUNTO ID APAR CPAR
Rule 83    metodo -> atributo PUNTO ID APAR ID CPAR
Rule 84    metodo -> ID PUNTO funcion APAR CPAR
Rule 85    metodo -> ID PUNTO funcion APAR ID CPAR
Rule 86    metodo -> atributo PUNTO funcion APAR CPAR
Rule 87    metodo -> atributo PUNTO funcion APAR ID CPAR
Rule 88    atributo -> ID PUNTO ID
Rule 89    comparador -> IGUALIGUAL
Rule 90    comparador -> TRIPLEIGUAL
Rule 91    comparador -> NOIGUAL
Rule 92    comparador -> MAYOR
Rule 93    comparador -> MENOR
Rule 94    comparador -> MAYORIGUAL
Rule 95    comparador -> MENORIGUAL
Rule 96    conector -> AND
Rule 97    conector -> OR
Rule 98    compmiembro -> ID
Rule 99    compmiembro -> ENTEROEXPRESION
Rule 100   compmiembro -> metodo
Rule 101   compmiembro -> atributo
Rule 102   compmiembro -> asignacion
Rule 103   condicion -> compmiembro comparador compmiembro
Rule 104   condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro
Rule 105   control -> if
Rule 106   control -> for
Rule 107   control -> while
Rule 108   cuerpo -> sentencia
Rule 109   cuerpo -> ALLAVE sentencia CLLAVE
Rule 110   if -> IF APAR condicion CPAR cuerpo
Rule 111   if -> IF APAR condicion CPAR cuerpo ELSE cuerpo
Rule 112   for -> FOR APAR ID IN ID CPAR cuerpo
Rule 113   for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
Rule 114   for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
Rule 115   for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
Rule 116   for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
Rule 117   for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
Rule 118   for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
Rule 119   for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo
Rule 120   for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
Rule 121   for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
Rule 122   while -> WHILE APAR condicion CPAR cuerpo

Terminals, with rules where they appear

ACOR                 : 30
ALLAVE               : 109
AND                  : 96
APAR                 : 31 32 33 65 80 81 82 83 84 85 86 87 110 111 112 113 114 115 116 117 118 119 120 120 120 121 121 122
ARROBA               : 
BOOLEAN              : 16
BOOLEANOEXPRESION    : 24
BREAK                : 
CADENAEXPRESION      : 25 55 62
CCOR                 : 30
CLLAVE               : 109
COMA                 : 20 21 21 32 33 33 36 120 121
COMDOBLE             : 
COMENTARIOMULTILINEA : 
COMENTARIOSIMPLE     : 
COMPARETO            : 69
COMSIMPLE            : 
CONTAINS             : 72
CPAR                 : 31 32 33 65 80 81 82 83 84 85 86 87 110 111 112 113 114 115 116 117 118 119 120 120 120 121 121 122
DIVISION             : 43 50
DOSPUNTOS            : 12 113
DOWNTO               : 117
ELSE                 : 111
ENTEROEXPRESION      : 22 53 58 60 99 114 114 115 115 116 116 116 117 117 117
FALSE                : 
FLOAT                : 15
FLOTANTEEXPRESION    : 23 54 59 61
FOR                  : 112 113 114 115 116 117 118 119 120 121
FUN                  : 
GET                  : 67
GETINDEX             : 70
HASHCODE             : 71
ID                   : 7 8 80 80 81 81 81 82 83 83 84 85 85 87 88 88 98 112 112 113 113 114 115 116 117 118 118 119 119 119 120 120 120 121 121 121
IF                   : 110 111
IGUAL                : 13
IGUALIGUAL           : 89
IN                   : 112 113 114 115 116 117 118 119 120 121
INDICES              : 79 118
INICIOCOMENTARIO     : 
INT                  : 14 113
ISEMPTY              : 74
LIST                 : 18
MAYOR                : 18 19 20 21 92
MAYORIGUAL           : 94
MENOR                : 18 19 20 21 93
MENORIGUAL           : 95
MODULO               : 45 51
MULT                 : 44 49
NEGACION             : 
NOIGUAL              : 91
OR                   : 97
PAIR                 : 20
PREGUNTA             : 
PRINT                : 77
PRINTLN              : 78
PUNTO                : 80 81 82 83 84 85 86 87 88 118 119 120
PUNTOCOMA            : 
PUNTOPUNTO           : 114
RESTA                : 42 48
SET                  : 19
SIGNODOLAR           : 
SIZE                 : 73
SLICE                : 68
STEP                 : 116 117
STRING               : 17
SUMA                 : 41 47
TOLIST               : 76
TOSTRING             : 75
TRIPLE               : 21
TRIPLEIGUAL          : 90
TRUE                 : 
UNTIL                : 115 116
VAL                  : 7
VAR                  : 8
WHILE                : 122
WITHINDEX            : 66 120
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 102
atributo             : 6 82 83 86 87 101
comparador           : 103 104 104
compmiembro          : 103 103 104 104 104 104
condicion            : 5 110 111 122
conector             : 104
contenido            : 30 31
control              : 4
cuerpo               : 110 111 111 112 113 114 115 116 117 118 119 120 121 122
declaracion          : 9 11
elementos            : 34 35 36
expresion            : 2 41 42 43 44 45 65
factor               : 34 37 39 48 49 50 51 52
factorEspecial       : 35 38 40 47
for                  : 106
funcion              : 84 85 86 87
if                   : 105
inicializacion       : 10 11
list                 : 26 56 63
metodo               : 3 100
pair                 : 28
sentencia            : 108 109 0
set                  : 27 57 64
termino              : 41 42 43 44 45 46 47 48 49 50 51
tipoAsignacion       : 7 8
tipoDato             : 12 18 19 20 20 21 21 21
tipoFactor           : 32 32 33 33 33
triple               : 29
valor                : 13
while                : 107

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (105) control -> . if
    (106) control -> . for
    (107) control -> . while
    (103) condicion -> . compmiembro comparador compmiembro
    (104) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (88) atributo -> . ID PUNTO ID
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (110) if -> . IF APAR condicion CPAR cuerpo
    (111) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (112) for -> . FOR APAR ID IN ID CPAR cuerpo
    (113) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (120) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (122) while -> . WHILE APAR condicion CPAR cuerpo
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 18
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    sentencia                      shift and go to state 1
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    termino                        shift and go to state 11
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> asignacion .
    (102) compmiembro -> asignacion .

    $end            reduce using rule 1 (sentencia -> asignacion .)
    ELSE            reduce using rule 1 (sentencia -> asignacion .)
    CLLAVE          reduce using rule 1 (sentencia -> asignacion .)
    IGUALIGUAL      reduce using rule 102 (compmiembro -> asignacion .)
    TRIPLEIGUAL     reduce using rule 102 (compmiembro -> asignacion .)
    NOIGUAL         reduce using rule 102 (compmiembro -> asignacion .)
    MAYOR           reduce using rule 102 (compmiembro -> asignacion .)
    MENOR           reduce using rule 102 (compmiembro -> asignacion .)
    MAYORIGUAL      reduce using rule 102 (compmiembro -> asignacion .)
    MENORIGUAL      reduce using rule 102 (compmiembro -> asignacion .)


state 3

    (2) sentencia -> expresion .
    (41) expresion -> expresion . SUMA termino
    (42) expresion -> expresion . RESTA termino
    (43) expresion -> expresion . DIVISION termino
    (44) expresion -> expresion . MULT termino
    (45) expresion -> expresion . MODULO termino

    $end            reduce using rule 2 (sentencia -> expresion .)
    ELSE            reduce using rule 2 (sentencia -> expresion .)
    CLLAVE          reduce using rule 2 (sentencia -> expresion .)
    SUMA            shift and go to state 27
    RESTA           shift and go to state 28
    DIVISION        shift and go to state 29
    MULT            shift and go to state 30
    MODULO          shift and go to state 31


state 4

    (3) sentencia -> metodo .
    (100) compmiembro -> metodo .

    $end            reduce using rule 3 (sentencia -> metodo .)
    ELSE            reduce using rule 3 (sentencia -> metodo .)
    CLLAVE          reduce using rule 3 (sentencia -> metodo .)
    IGUALIGUAL      reduce using rule 100 (compmiembro -> metodo .)
    TRIPLEIGUAL     reduce using rule 100 (compmiembro -> metodo .)
    NOIGUAL         reduce using rule 100 (compmiembro -> metodo .)
    MAYOR           reduce using rule 100 (compmiembro -> metodo .)
    MENOR           reduce using rule 100 (compmiembro -> metodo .)
    MAYORIGUAL      reduce using rule 100 (compmiembro -> metodo .)
    MENORIGUAL      reduce using rule 100 (compmiembro -> metodo .)


state 5

    (4) sentencia -> control .

    $end            reduce using rule 4 (sentencia -> control .)
    ELSE            reduce using rule 4 (sentencia -> control .)
    CLLAVE          reduce using rule 4 (sentencia -> control .)


state 6

    (5) sentencia -> condicion .

    $end            reduce using rule 5 (sentencia -> condicion .)
    ELSE            reduce using rule 5 (sentencia -> condicion .)
    CLLAVE          reduce using rule 5 (sentencia -> condicion .)


state 7

    (6) sentencia -> atributo .
    (82) metodo -> atributo . PUNTO ID APAR CPAR
    (83) metodo -> atributo . PUNTO ID APAR ID CPAR
    (86) metodo -> atributo . PUNTO funcion APAR CPAR
    (87) metodo -> atributo . PUNTO funcion APAR ID CPAR
    (101) compmiembro -> atributo .

    $end            reduce using rule 6 (sentencia -> atributo .)
    ELSE            reduce using rule 6 (sentencia -> atributo .)
    CLLAVE          reduce using rule 6 (sentencia -> atributo .)
    PUNTO           shift and go to state 32
    IGUALIGUAL      reduce using rule 101 (compmiembro -> atributo .)
    TRIPLEIGUAL     reduce using rule 101 (compmiembro -> atributo .)
    NOIGUAL         reduce using rule 101 (compmiembro -> atributo .)
    MAYOR           reduce using rule 101 (compmiembro -> atributo .)
    MENOR           reduce using rule 101 (compmiembro -> atributo .)
    MAYORIGUAL      reduce using rule 101 (compmiembro -> atributo .)
    MENORIGUAL      reduce using rule 101 (compmiembro -> atributo .)


state 8

    (7) asignacion -> VAL . ID tipoAsignacion

    ID              shift and go to state 33


state 9

    (80) metodo -> ID . PUNTO ID APAR CPAR
    (81) metodo -> ID . PUNTO ID APAR ID CPAR
    (84) metodo -> ID . PUNTO funcion APAR CPAR
    (85) metodo -> ID . PUNTO funcion APAR ID CPAR
    (88) atributo -> ID . PUNTO ID
    (98) compmiembro -> ID .

    PUNTO           shift and go to state 34
    IGUALIGUAL      reduce using rule 98 (compmiembro -> ID .)
    TRIPLEIGUAL     reduce using rule 98 (compmiembro -> ID .)
    NOIGUAL         reduce using rule 98 (compmiembro -> ID .)
    MAYOR           reduce using rule 98 (compmiembro -> ID .)
    MENOR           reduce using rule 98 (compmiembro -> ID .)
    MAYORIGUAL      reduce using rule 98 (compmiembro -> ID .)
    MENORIGUAL      reduce using rule 98 (compmiembro -> ID .)


state 10

    (8) asignacion -> VAR . ID tipoAsignacion

    ID              shift and go to state 35


state 11

    (46) expresion -> termino .
    (47) termino -> termino . SUMA factorEspecial
    (48) termino -> termino . RESTA factor
    (49) termino -> termino . MULT factor
    (50) termino -> termino . DIVISION factor
    (51) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 46 (expresion -> termino .)
    CPAR            reduce using rule 46 (expresion -> termino .)
    ELSE            reduce using rule 46 (expresion -> termino .)
    CLLAVE          reduce using rule 46 (expresion -> termino .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    MULT            shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40

  ! SUMA            [ reduce using rule 46 (expresion -> termino .) ]
  ! RESTA           [ reduce using rule 46 (expresion -> termino .) ]
  ! DIVISION        [ reduce using rule 46 (expresion -> termino .) ]
  ! MULT            [ reduce using rule 46 (expresion -> termino .) ]
  ! MODULO          [ reduce using rule 46 (expresion -> termino .) ]


state 12

    (65) factor -> APAR . expresion CPAR
    (31) set -> APAR . contenido CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (34) contenido -> . elementos factor
    (35) contenido -> . elementos factorEspecial
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (36) elementos -> . elementos COMA
    (37) elementos -> . factor
    (38) elementos -> . factorEspecial
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR
    (60) factorEspecial -> . ENTEROEXPRESION
    (61) factorEspecial -> . FLOTANTEEXPRESION
    (62) factorEspecial -> . CADENAEXPRESION
    (63) factorEspecial -> . list
    (64) factorEspecial -> . set

    ENTEROEXPRESION shift and go to state 46
    FLOTANTEEXPRESION shift and go to state 47
    CADENAEXPRESION shift and go to state 48
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    expresion                      shift and go to state 41
    contenido                      shift and go to state 42
    termino                        shift and go to state 11
    elementos                      shift and go to state 43
    factor                         shift and go to state 44
    factorEspecial                 shift and go to state 45
    list                           shift and go to state 49
    set                            shift and go to state 50

state 13

    (105) control -> if .

    $end            reduce using rule 105 (control -> if .)
    ELSE            reduce using rule 105 (control -> if .)
    CLLAVE          reduce using rule 105 (control -> if .)


state 14

    (106) control -> for .

    $end            reduce using rule 106 (control -> for .)
    ELSE            reduce using rule 106 (control -> for .)
    CLLAVE          reduce using rule 106 (control -> for .)


state 15

    (107) control -> while .

    $end            reduce using rule 107 (control -> while .)
    ELSE            reduce using rule 107 (control -> while .)
    CLLAVE          reduce using rule 107 (control -> while .)


state 16

    (103) condicion -> compmiembro . comparador compmiembro
    (104) condicion -> compmiembro . comparador compmiembro conector compmiembro comparador compmiembro
    (89) comparador -> . IGUALIGUAL
    (90) comparador -> . TRIPLEIGUAL
    (91) comparador -> . NOIGUAL
    (92) comparador -> . MAYOR
    (93) comparador -> . MENOR
    (94) comparador -> . MAYORIGUAL
    (95) comparador -> . MENORIGUAL

    IGUALIGUAL      shift and go to state 52
    TRIPLEIGUAL     shift and go to state 53
    NOIGUAL         shift and go to state 54
    MAYOR           shift and go to state 55
    MENOR           shift and go to state 56
    MAYORIGUAL      shift and go to state 57
    MENORIGUAL      shift and go to state 58

    comparador                     shift and go to state 51

state 17

    (52) termino -> factor .

    SUMA            reduce using rule 52 (termino -> factor .)
    RESTA           reduce using rule 52 (termino -> factor .)
    MULT            reduce using rule 52 (termino -> factor .)
    DIVISION        reduce using rule 52 (termino -> factor .)
    MODULO          reduce using rule 52 (termino -> factor .)
    $end            reduce using rule 52 (termino -> factor .)
    CPAR            reduce using rule 52 (termino -> factor .)
    ELSE            reduce using rule 52 (termino -> factor .)
    CLLAVE          reduce using rule 52 (termino -> factor .)


state 18

    (53) termino -> ENTEROEXPRESION .
    (99) compmiembro -> ENTEROEXPRESION .
    (58) factor -> ENTEROEXPRESION .

  ! reduce/reduce conflict for SUMA resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for RESTA resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MULT resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for DIVISION resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MODULO resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 53 (termino -> ENTEROEXPRESION .)
    SUMA            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    RESTA           reduce using rule 53 (termino -> ENTEROEXPRESION .)
    MULT            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 53 (termino -> ENTEROEXPRESION .)
    MODULO          reduce using rule 53 (termino -> ENTEROEXPRESION .)
    $end            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    ELSE            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 53 (termino -> ENTEROEXPRESION .)
    IGUALIGUAL      reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    TRIPLEIGUAL     reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    NOIGUAL         reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    MAYOR           reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    MENOR           reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    MAYORIGUAL      reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    MENORIGUAL      reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)

  ! SUMA            [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! RESTA           [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! MULT            [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! DIVISION        [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! MODULO          [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! $end            [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! ELSE            [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]


state 19

    (54) termino -> FLOTANTEEXPRESION .
    (59) factor -> FLOTANTEEXPRESION .

  ! reduce/reduce conflict for SUMA resolved using rule 54 (termino -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for RESTA resolved using rule 54 (termino -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for MULT resolved using rule 54 (termino -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for DIVISION resolved using rule 54 (termino -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for MODULO resolved using rule 54 (termino -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 54 (termino -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 54 (termino -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 54 (termino -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 54 (termino -> FLOTANTEEXPRESION .)
    SUMA            reduce using rule 54 (termino -> FLOTANTEEXPRESION .)
    RESTA           reduce using rule 54 (termino -> FLOTANTEEXPRESION .)
    MULT            reduce using rule 54 (termino -> FLOTANTEEXPRESION .)
    DIVISION        reduce using rule 54 (termino -> FLOTANTEEXPRESION .)
    MODULO          reduce using rule 54 (termino -> FLOTANTEEXPRESION .)
    $end            reduce using rule 54 (termino -> FLOTANTEEXPRESION .)
    CPAR            reduce using rule 54 (termino -> FLOTANTEEXPRESION .)
    ELSE            reduce using rule 54 (termino -> FLOTANTEEXPRESION .)
    CLLAVE          reduce using rule 54 (termino -> FLOTANTEEXPRESION .)

  ! SUMA            [ reduce using rule 59 (factor -> FLOTANTEEXPRESION .) ]
  ! RESTA           [ reduce using rule 59 (factor -> FLOTANTEEXPRESION .) ]
  ! MULT            [ reduce using rule 59 (factor -> FLOTANTEEXPRESION .) ]
  ! DIVISION        [ reduce using rule 59 (factor -> FLOTANTEEXPRESION .) ]
  ! MODULO          [ reduce using rule 59 (factor -> FLOTANTEEXPRESION .) ]
  ! $end            [ reduce using rule 59 (factor -> FLOTANTEEXPRESION .) ]
  ! CPAR            [ reduce using rule 59 (factor -> FLOTANTEEXPRESION .) ]
  ! ELSE            [ reduce using rule 59 (factor -> FLOTANTEEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 59 (factor -> FLOTANTEEXPRESION .) ]


state 20

    (55) termino -> CADENAEXPRESION .

    SUMA            reduce using rule 55 (termino -> CADENAEXPRESION .)
    RESTA           reduce using rule 55 (termino -> CADENAEXPRESION .)
    MULT            reduce using rule 55 (termino -> CADENAEXPRESION .)
    DIVISION        reduce using rule 55 (termino -> CADENAEXPRESION .)
    MODULO          reduce using rule 55 (termino -> CADENAEXPRESION .)
    $end            reduce using rule 55 (termino -> CADENAEXPRESION .)
    CPAR            reduce using rule 55 (termino -> CADENAEXPRESION .)
    ELSE            reduce using rule 55 (termino -> CADENAEXPRESION .)
    CLLAVE          reduce using rule 55 (termino -> CADENAEXPRESION .)


state 21

    (56) termino -> list .

    SUMA            reduce using rule 56 (termino -> list .)
    RESTA           reduce using rule 56 (termino -> list .)
    MULT            reduce using rule 56 (termino -> list .)
    DIVISION        reduce using rule 56 (termino -> list .)
    MODULO          reduce using rule 56 (termino -> list .)
    $end            reduce using rule 56 (termino -> list .)
    CPAR            reduce using rule 56 (termino -> list .)
    ELSE            reduce using rule 56 (termino -> list .)
    CLLAVE          reduce using rule 56 (termino -> list .)


state 22

    (57) termino -> set .

    SUMA            reduce using rule 57 (termino -> set .)
    RESTA           reduce using rule 57 (termino -> set .)
    MULT            reduce using rule 57 (termino -> set .)
    DIVISION        reduce using rule 57 (termino -> set .)
    MODULO          reduce using rule 57 (termino -> set .)
    $end            reduce using rule 57 (termino -> set .)
    CPAR            reduce using rule 57 (termino -> set .)
    ELSE            reduce using rule 57 (termino -> set .)
    CLLAVE          reduce using rule 57 (termino -> set .)


state 23

    (110) if -> IF . APAR condicion CPAR cuerpo
    (111) if -> IF . APAR condicion CPAR cuerpo ELSE cuerpo

    APAR            shift and go to state 59


state 24

    (112) for -> FOR . APAR ID IN ID CPAR cuerpo
    (113) for -> FOR . APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> FOR . APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> FOR . APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> FOR . APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> FOR . APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> FOR . APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> FOR . APAR ID IN ID PUNTO ID CPAR cuerpo
    (120) for -> FOR . APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> FOR . APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo

    APAR            shift and go to state 60


state 25

    (122) while -> WHILE . APAR condicion CPAR cuerpo

    APAR            shift and go to state 61


state 26

    (30) list -> ACOR . contenido CCOR
    (34) contenido -> . elementos factor
    (35) contenido -> . elementos factorEspecial
    (36) elementos -> . elementos COMA
    (37) elementos -> . factor
    (38) elementos -> . factorEspecial
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (60) factorEspecial -> . ENTEROEXPRESION
    (61) factorEspecial -> . FLOTANTEEXPRESION
    (62) factorEspecial -> . CADENAEXPRESION
    (63) factorEspecial -> . list
    (64) factorEspecial -> . set
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 64
    FLOTANTEEXPRESION shift and go to state 65
    APAR            shift and go to state 12
    CADENAEXPRESION shift and go to state 66
    ACOR            shift and go to state 26

    contenido                      shift and go to state 62
    elementos                      shift and go to state 43
    factor                         shift and go to state 63
    factorEspecial                 shift and go to state 45
    list                           shift and go to state 67
    set                            shift and go to state 68

state 27

    (41) expresion -> expresion SUMA . termino
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 70
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    termino                        shift and go to state 69
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 28

    (42) expresion -> expresion RESTA . termino
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 70
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    termino                        shift and go to state 71
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 29

    (43) expresion -> expresion DIVISION . termino
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 70
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    termino                        shift and go to state 72
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 30

    (44) expresion -> expresion MULT . termino
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 70
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    termino                        shift and go to state 73
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 31

    (45) expresion -> expresion MODULO . termino
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 70
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    termino                        shift and go to state 74
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 32

    (82) metodo -> atributo PUNTO . ID APAR CPAR
    (83) metodo -> atributo PUNTO . ID APAR ID CPAR
    (86) metodo -> atributo PUNTO . funcion APAR CPAR
    (87) metodo -> atributo PUNTO . funcion APAR ID CPAR
    (66) funcion -> . WITHINDEX
    (67) funcion -> . GET
    (68) funcion -> . SLICE
    (69) funcion -> . COMPARETO
    (70) funcion -> . GETINDEX
    (71) funcion -> . HASHCODE
    (72) funcion -> . CONTAINS
    (73) funcion -> . SIZE
    (74) funcion -> . ISEMPTY
    (75) funcion -> . TOSTRING
    (76) funcion -> . TOLIST
    (77) funcion -> . PRINT
    (78) funcion -> . PRINTLN
    (79) funcion -> . INDICES

    ID              shift and go to state 75
    WITHINDEX       shift and go to state 77
    GET             shift and go to state 78
    SLICE           shift and go to state 79
    COMPARETO       shift and go to state 80
    GETINDEX        shift and go to state 81
    HASHCODE        shift and go to state 82
    CONTAINS        shift and go to state 83
    SIZE            shift and go to state 84
    ISEMPTY         shift and go to state 85
    TOSTRING        shift and go to state 86
    TOLIST          shift and go to state 87
    PRINT           shift and go to state 88
    PRINTLN         shift and go to state 89
    INDICES         shift and go to state 90

    funcion                        shift and go to state 76

state 33

    (7) asignacion -> VAL ID . tipoAsignacion
    (9) tipoAsignacion -> . declaracion
    (10) tipoAsignacion -> . inicializacion
    (11) tipoAsignacion -> . declaracion inicializacion
    (12) declaracion -> . DOSPUNTOS tipoDato
    (13) inicializacion -> . IGUAL valor

    DOSPUNTOS       shift and go to state 94
    IGUAL           shift and go to state 95

    tipoAsignacion                 shift and go to state 91
    declaracion                    shift and go to state 92
    inicializacion                 shift and go to state 93

state 34

    (80) metodo -> ID PUNTO . ID APAR CPAR
    (81) metodo -> ID PUNTO . ID APAR ID CPAR
    (84) metodo -> ID PUNTO . funcion APAR CPAR
    (85) metodo -> ID PUNTO . funcion APAR ID CPAR
    (88) atributo -> ID PUNTO . ID
    (66) funcion -> . WITHINDEX
    (67) funcion -> . GET
    (68) funcion -> . SLICE
    (69) funcion -> . COMPARETO
    (70) funcion -> . GETINDEX
    (71) funcion -> . HASHCODE
    (72) funcion -> . CONTAINS
    (73) funcion -> . SIZE
    (74) funcion -> . ISEMPTY
    (75) funcion -> . TOSTRING
    (76) funcion -> . TOLIST
    (77) funcion -> . PRINT
    (78) funcion -> . PRINTLN
    (79) funcion -> . INDICES

    ID              shift and go to state 96
    WITHINDEX       shift and go to state 77
    GET             shift and go to state 78
    SLICE           shift and go to state 79
    COMPARETO       shift and go to state 80
    GETINDEX        shift and go to state 81
    HASHCODE        shift and go to state 82
    CONTAINS        shift and go to state 83
    SIZE            shift and go to state 84
    ISEMPTY         shift and go to state 85
    TOSTRING        shift and go to state 86
    TOLIST          shift and go to state 87
    PRINT           shift and go to state 88
    PRINTLN         shift and go to state 89
    INDICES         shift and go to state 90

    funcion                        shift and go to state 97

state 35

    (8) asignacion -> VAR ID . tipoAsignacion
    (9) tipoAsignacion -> . declaracion
    (10) tipoAsignacion -> . inicializacion
    (11) tipoAsignacion -> . declaracion inicializacion
    (12) declaracion -> . DOSPUNTOS tipoDato
    (13) inicializacion -> . IGUAL valor

    DOSPUNTOS       shift and go to state 94
    IGUAL           shift and go to state 95

    tipoAsignacion                 shift and go to state 98
    declaracion                    shift and go to state 92
    inicializacion                 shift and go to state 93

state 36

    (47) termino -> termino SUMA . factorEspecial
    (60) factorEspecial -> . ENTEROEXPRESION
    (61) factorEspecial -> . FLOTANTEEXPRESION
    (62) factorEspecial -> . CADENAEXPRESION
    (63) factorEspecial -> . list
    (64) factorEspecial -> . set
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 100
    FLOTANTEEXPRESION shift and go to state 101
    CADENAEXPRESION shift and go to state 66
    ACOR            shift and go to state 26
    APAR            shift and go to state 102

    factorEspecial                 shift and go to state 99
    list                           shift and go to state 67
    set                            shift and go to state 68

state 37

    (48) termino -> termino RESTA . factor
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR

    ENTEROEXPRESION shift and go to state 104
    FLOTANTEEXPRESION shift and go to state 105
    APAR            shift and go to state 106

    factor                         shift and go to state 103

state 38

    (49) termino -> termino MULT . factor
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR

    ENTEROEXPRESION shift and go to state 104
    FLOTANTEEXPRESION shift and go to state 105
    APAR            shift and go to state 106

    factor                         shift and go to state 107

state 39

    (50) termino -> termino DIVISION . factor
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR

    ENTEROEXPRESION shift and go to state 104
    FLOTANTEEXPRESION shift and go to state 105
    APAR            shift and go to state 106

    factor                         shift and go to state 108

state 40

    (51) termino -> termino MODULO . factor
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR

    ENTEROEXPRESION shift and go to state 104
    FLOTANTEEXPRESION shift and go to state 105
    APAR            shift and go to state 106

    factor                         shift and go to state 109

state 41

    (65) factor -> APAR expresion . CPAR
    (41) expresion -> expresion . SUMA termino
    (42) expresion -> expresion . RESTA termino
    (43) expresion -> expresion . DIVISION termino
    (44) expresion -> expresion . MULT termino
    (45) expresion -> expresion . MODULO termino

    CPAR            shift and go to state 110
    SUMA            shift and go to state 27
    RESTA           shift and go to state 28
    DIVISION        shift and go to state 29
    MULT            shift and go to state 30
    MODULO          shift and go to state 31


state 42

    (31) set -> APAR contenido . CPAR

    CPAR            shift and go to state 111


state 43

    (34) contenido -> elementos . factor
    (35) contenido -> elementos . factorEspecial
    (36) elementos -> elementos . COMA
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (60) factorEspecial -> . ENTEROEXPRESION
    (61) factorEspecial -> . FLOTANTEEXPRESION
    (62) factorEspecial -> . CADENAEXPRESION
    (63) factorEspecial -> . list
    (64) factorEspecial -> . set
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    COMA            shift and go to state 114
    ENTEROEXPRESION shift and go to state 64
    FLOTANTEEXPRESION shift and go to state 65
    APAR            shift and go to state 12
    CADENAEXPRESION shift and go to state 66
    ACOR            shift and go to state 26

    factor                         shift and go to state 112
    factorEspecial                 shift and go to state 113
    list                           shift and go to state 67
    set                            shift and go to state 68

state 44

    (52) termino -> factor .
    (37) elementos -> factor .

    SUMA            reduce using rule 52 (termino -> factor .)
    RESTA           reduce using rule 52 (termino -> factor .)
    MULT            reduce using rule 52 (termino -> factor .)
    DIVISION        reduce using rule 52 (termino -> factor .)
    MODULO          reduce using rule 52 (termino -> factor .)
    CPAR            reduce using rule 52 (termino -> factor .)
    COMA            reduce using rule 37 (elementos -> factor .)
    ENTEROEXPRESION reduce using rule 37 (elementos -> factor .)
    FLOTANTEEXPRESION reduce using rule 37 (elementos -> factor .)
    APAR            reduce using rule 37 (elementos -> factor .)
    CADENAEXPRESION reduce using rule 37 (elementos -> factor .)
    ACOR            reduce using rule 37 (elementos -> factor .)


state 45

    (38) elementos -> factorEspecial .

    COMA            reduce using rule 38 (elementos -> factorEspecial .)
    ENTEROEXPRESION reduce using rule 38 (elementos -> factorEspecial .)
    FLOTANTEEXPRESION reduce using rule 38 (elementos -> factorEspecial .)
    APAR            reduce using rule 38 (elementos -> factorEspecial .)
    CADENAEXPRESION reduce using rule 38 (elementos -> factorEspecial .)
    ACOR            reduce using rule 38 (elementos -> factorEspecial .)


state 46

    (53) termino -> ENTEROEXPRESION .
    (58) factor -> ENTEROEXPRESION .
    (60) factorEspecial -> ENTEROEXPRESION .

  ! reduce/reduce conflict for SUMA resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for RESTA resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MULT resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for DIVISION resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MODULO resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for COMA resolved using rule 58 (factor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 58 (factor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FLOTANTEEXPRESION resolved using rule 58 (factor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 58 (factor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 58 (factor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ACOR resolved using rule 58 (factor -> ENTEROEXPRESION .)
    SUMA            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    RESTA           reduce using rule 53 (termino -> ENTEROEXPRESION .)
    MULT            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 53 (termino -> ENTEROEXPRESION .)
    MODULO          reduce using rule 53 (termino -> ENTEROEXPRESION .)
    CPAR            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    COMA            reduce using rule 58 (factor -> ENTEROEXPRESION .)
    ENTEROEXPRESION reduce using rule 58 (factor -> ENTEROEXPRESION .)
    FLOTANTEEXPRESION reduce using rule 58 (factor -> ENTEROEXPRESION .)
    APAR            reduce using rule 58 (factor -> ENTEROEXPRESION .)
    CADENAEXPRESION reduce using rule 58 (factor -> ENTEROEXPRESION .)
    ACOR            reduce using rule 58 (factor -> ENTEROEXPRESION .)

  ! SUMA            [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! RESTA           [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! MULT            [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! DIVISION        [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! MODULO          [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! CPAR            [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! COMA            [ reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .) ]
  ! FLOTANTEEXPRESION [ reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .) ]
  ! APAR            [ reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .) ]
  ! CADENAEXPRESION [ reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .) ]
  ! ACOR            [ reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .) ]


state 47

    (54) termino -> FLOTANTEEXPRESION .
    (59) factor -> FLOTANTEEXPRESION .
    (61) factorEspecial -> FLOTANTEEXPRESION .

  ! reduce/reduce conflict for SUMA resolved using rule 54 (termino -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for RESTA resolved using rule 54 (termino -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for MULT resolved using rule 54 (termino -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for DIVISION resolved using rule 54 (termino -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for MODULO resolved using rule 54 (termino -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 54 (termino -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for COMA resolved using rule 59 (factor -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 59 (factor -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for FLOTANTEEXPRESION resolved using rule 59 (factor -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 59 (factor -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 59 (factor -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for ACOR resolved using rule 59 (factor -> FLOTANTEEXPRESION .)
    SUMA            reduce using rule 54 (termino -> FLOTANTEEXPRESION .)
    RESTA           reduce using rule 54 (termino -> FLOTANTEEXPRESION .)
    MULT            reduce using rule 54 (termino -> FLOTANTEEXPRESION .)
    DIVISION        reduce using rule 54 (termino -> FLOTANTEEXPRESION .)
    MODULO          reduce using rule 54 (termino -> FLOTANTEEXPRESION .)
    CPAR            reduce using rule 54 (termino -> FLOTANTEEXPRESION .)
    COMA            reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    ENTEROEXPRESION reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    FLOTANTEEXPRESION reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    APAR            reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    CADENAEXPRESION reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    ACOR            reduce using rule 59 (factor -> FLOTANTEEXPRESION .)

  ! SUMA            [ reduce using rule 59 (factor -> FLOTANTEEXPRESION .) ]
  ! RESTA           [ reduce using rule 59 (factor -> FLOTANTEEXPRESION .) ]
  ! MULT            [ reduce using rule 59 (factor -> FLOTANTEEXPRESION .) ]
  ! DIVISION        [ reduce using rule 59 (factor -> FLOTANTEEXPRESION .) ]
  ! MODULO          [ reduce using rule 59 (factor -> FLOTANTEEXPRESION .) ]
  ! CPAR            [ reduce using rule 59 (factor -> FLOTANTEEXPRESION .) ]
  ! COMA            [ reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .) ]
  ! FLOTANTEEXPRESION [ reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .) ]
  ! APAR            [ reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .) ]
  ! CADENAEXPRESION [ reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .) ]
  ! ACOR            [ reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .) ]


state 48

    (55) termino -> CADENAEXPRESION .
    (62) factorEspecial -> CADENAEXPRESION .

    SUMA            reduce using rule 55 (termino -> CADENAEXPRESION .)
    RESTA           reduce using rule 55 (termino -> CADENAEXPRESION .)
    MULT            reduce using rule 55 (termino -> CADENAEXPRESION .)
    DIVISION        reduce using rule 55 (termino -> CADENAEXPRESION .)
    MODULO          reduce using rule 55 (termino -> CADENAEXPRESION .)
    CPAR            reduce using rule 55 (termino -> CADENAEXPRESION .)
    COMA            reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    ENTEROEXPRESION reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    FLOTANTEEXPRESION reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    APAR            reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    CADENAEXPRESION reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    ACOR            reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)


state 49

    (56) termino -> list .
    (63) factorEspecial -> list .

    SUMA            reduce using rule 56 (termino -> list .)
    RESTA           reduce using rule 56 (termino -> list .)
    MULT            reduce using rule 56 (termino -> list .)
    DIVISION        reduce using rule 56 (termino -> list .)
    MODULO          reduce using rule 56 (termino -> list .)
    CPAR            reduce using rule 56 (termino -> list .)
    COMA            reduce using rule 63 (factorEspecial -> list .)
    ENTEROEXPRESION reduce using rule 63 (factorEspecial -> list .)
    FLOTANTEEXPRESION reduce using rule 63 (factorEspecial -> list .)
    APAR            reduce using rule 63 (factorEspecial -> list .)
    CADENAEXPRESION reduce using rule 63 (factorEspecial -> list .)
    ACOR            reduce using rule 63 (factorEspecial -> list .)


state 50

    (57) termino -> set .
    (64) factorEspecial -> set .

    SUMA            reduce using rule 57 (termino -> set .)
    RESTA           reduce using rule 57 (termino -> set .)
    MULT            reduce using rule 57 (termino -> set .)
    DIVISION        reduce using rule 57 (termino -> set .)
    MODULO          reduce using rule 57 (termino -> set .)
    CPAR            reduce using rule 57 (termino -> set .)
    COMA            reduce using rule 64 (factorEspecial -> set .)
    ENTEROEXPRESION reduce using rule 64 (factorEspecial -> set .)
    FLOTANTEEXPRESION reduce using rule 64 (factorEspecial -> set .)
    APAR            reduce using rule 64 (factorEspecial -> set .)
    CADENAEXPRESION reduce using rule 64 (factorEspecial -> set .)
    ACOR            reduce using rule 64 (factorEspecial -> set .)


state 51

    (103) condicion -> compmiembro comparador . compmiembro
    (104) condicion -> compmiembro comparador . compmiembro conector compmiembro comparador compmiembro
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (88) atributo -> . ID PUNTO ID
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion

    ID              shift and go to state 116
    ENTEROEXPRESION shift and go to state 117
    VAL             shift and go to state 8
    VAR             shift and go to state 10

    compmiembro                    shift and go to state 115
    metodo                         shift and go to state 118
    atributo                       shift and go to state 119
    asignacion                     shift and go to state 120

state 52

    (89) comparador -> IGUALIGUAL .

    ID              reduce using rule 89 (comparador -> IGUALIGUAL .)
    ENTEROEXPRESION reduce using rule 89 (comparador -> IGUALIGUAL .)
    VAL             reduce using rule 89 (comparador -> IGUALIGUAL .)
    VAR             reduce using rule 89 (comparador -> IGUALIGUAL .)


state 53

    (90) comparador -> TRIPLEIGUAL .

    ID              reduce using rule 90 (comparador -> TRIPLEIGUAL .)
    ENTEROEXPRESION reduce using rule 90 (comparador -> TRIPLEIGUAL .)
    VAL             reduce using rule 90 (comparador -> TRIPLEIGUAL .)
    VAR             reduce using rule 90 (comparador -> TRIPLEIGUAL .)


state 54

    (91) comparador -> NOIGUAL .

    ID              reduce using rule 91 (comparador -> NOIGUAL .)
    ENTEROEXPRESION reduce using rule 91 (comparador -> NOIGUAL .)
    VAL             reduce using rule 91 (comparador -> NOIGUAL .)
    VAR             reduce using rule 91 (comparador -> NOIGUAL .)


state 55

    (92) comparador -> MAYOR .

    ID              reduce using rule 92 (comparador -> MAYOR .)
    ENTEROEXPRESION reduce using rule 92 (comparador -> MAYOR .)
    VAL             reduce using rule 92 (comparador -> MAYOR .)
    VAR             reduce using rule 92 (comparador -> MAYOR .)


state 56

    (93) comparador -> MENOR .

    ID              reduce using rule 93 (comparador -> MENOR .)
    ENTEROEXPRESION reduce using rule 93 (comparador -> MENOR .)
    VAL             reduce using rule 93 (comparador -> MENOR .)
    VAR             reduce using rule 93 (comparador -> MENOR .)


state 57

    (94) comparador -> MAYORIGUAL .

    ID              reduce using rule 94 (comparador -> MAYORIGUAL .)
    ENTEROEXPRESION reduce using rule 94 (comparador -> MAYORIGUAL .)
    VAL             reduce using rule 94 (comparador -> MAYORIGUAL .)
    VAR             reduce using rule 94 (comparador -> MAYORIGUAL .)


state 58

    (95) comparador -> MENORIGUAL .

    ID              reduce using rule 95 (comparador -> MENORIGUAL .)
    ENTEROEXPRESION reduce using rule 95 (comparador -> MENORIGUAL .)
    VAL             reduce using rule 95 (comparador -> MENORIGUAL .)
    VAR             reduce using rule 95 (comparador -> MENORIGUAL .)


state 59

    (110) if -> IF APAR . condicion CPAR cuerpo
    (111) if -> IF APAR . condicion CPAR cuerpo ELSE cuerpo
    (103) condicion -> . compmiembro comparador compmiembro
    (104) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (88) atributo -> . ID PUNTO ID
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion

    ID              shift and go to state 116
    ENTEROEXPRESION shift and go to state 117
    VAL             shift and go to state 8
    VAR             shift and go to state 10

    condicion                      shift and go to state 121
    compmiembro                    shift and go to state 16
    metodo                         shift and go to state 118
    atributo                       shift and go to state 119
    asignacion                     shift and go to state 120

state 60

    (112) for -> FOR APAR . ID IN ID CPAR cuerpo
    (113) for -> FOR APAR . ID DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> FOR APAR . ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> FOR APAR . ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> FOR APAR . ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> FOR APAR . ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> FOR APAR . ID IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> FOR APAR . ID IN ID PUNTO ID CPAR cuerpo
    (120) for -> FOR APAR . APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> FOR APAR . APAR ID COMA ID CPAR IN ID CPAR cuerpo

    ID              shift and go to state 123
    APAR            shift and go to state 122


state 61

    (122) while -> WHILE APAR . condicion CPAR cuerpo
    (103) condicion -> . compmiembro comparador compmiembro
    (104) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (88) atributo -> . ID PUNTO ID
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion

    ID              shift and go to state 116
    ENTEROEXPRESION shift and go to state 117
    VAL             shift and go to state 8
    VAR             shift and go to state 10

    condicion                      shift and go to state 124
    compmiembro                    shift and go to state 16
    metodo                         shift and go to state 118
    atributo                       shift and go to state 119
    asignacion                     shift and go to state 120

state 62

    (30) list -> ACOR contenido . CCOR

    CCOR            shift and go to state 125


state 63

    (37) elementos -> factor .

    COMA            reduce using rule 37 (elementos -> factor .)
    ENTEROEXPRESION reduce using rule 37 (elementos -> factor .)
    FLOTANTEEXPRESION reduce using rule 37 (elementos -> factor .)
    APAR            reduce using rule 37 (elementos -> factor .)
    CADENAEXPRESION reduce using rule 37 (elementos -> factor .)
    ACOR            reduce using rule 37 (elementos -> factor .)


state 64

    (58) factor -> ENTEROEXPRESION .
    (60) factorEspecial -> ENTEROEXPRESION .

  ! reduce/reduce conflict for COMA resolved using rule 58 (factor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 58 (factor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for FLOTANTEEXPRESION resolved using rule 58 (factor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 58 (factor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 58 (factor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ACOR resolved using rule 58 (factor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 58 (factor -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CCOR resolved using rule 58 (factor -> ENTEROEXPRESION .)
    COMA            reduce using rule 58 (factor -> ENTEROEXPRESION .)
    ENTEROEXPRESION reduce using rule 58 (factor -> ENTEROEXPRESION .)
    FLOTANTEEXPRESION reduce using rule 58 (factor -> ENTEROEXPRESION .)
    APAR            reduce using rule 58 (factor -> ENTEROEXPRESION .)
    CADENAEXPRESION reduce using rule 58 (factor -> ENTEROEXPRESION .)
    ACOR            reduce using rule 58 (factor -> ENTEROEXPRESION .)
    CPAR            reduce using rule 58 (factor -> ENTEROEXPRESION .)
    CCOR            reduce using rule 58 (factor -> ENTEROEXPRESION .)

  ! COMA            [ reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .) ]
  ! FLOTANTEEXPRESION [ reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .) ]
  ! APAR            [ reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .) ]
  ! CADENAEXPRESION [ reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .) ]
  ! ACOR            [ reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .) ]
  ! CPAR            [ reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .) ]
  ! CCOR            [ reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .) ]


state 65

    (59) factor -> FLOTANTEEXPRESION .
    (61) factorEspecial -> FLOTANTEEXPRESION .

  ! reduce/reduce conflict for COMA resolved using rule 59 (factor -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for ENTEROEXPRESION resolved using rule 59 (factor -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for FLOTANTEEXPRESION resolved using rule 59 (factor -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for APAR resolved using rule 59 (factor -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for CADENAEXPRESION resolved using rule 59 (factor -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for ACOR resolved using rule 59 (factor -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 59 (factor -> FLOTANTEEXPRESION .)
  ! reduce/reduce conflict for CCOR resolved using rule 59 (factor -> FLOTANTEEXPRESION .)
    COMA            reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    ENTEROEXPRESION reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    FLOTANTEEXPRESION reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    APAR            reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    CADENAEXPRESION reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    ACOR            reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    CPAR            reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    CCOR            reduce using rule 59 (factor -> FLOTANTEEXPRESION .)

  ! COMA            [ reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .) ]
  ! ENTEROEXPRESION [ reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .) ]
  ! FLOTANTEEXPRESION [ reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .) ]
  ! APAR            [ reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .) ]
  ! CADENAEXPRESION [ reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .) ]
  ! ACOR            [ reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .) ]
  ! CPAR            [ reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .) ]
  ! CCOR            [ reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .) ]


state 66

    (62) factorEspecial -> CADENAEXPRESION .

    COMA            reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    ENTEROEXPRESION reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    FLOTANTEEXPRESION reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    APAR            reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    CADENAEXPRESION reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    ACOR            reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    SUMA            reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    RESTA           reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    MULT            reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    DIVISION        reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    MODULO          reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    $end            reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    CPAR            reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    ELSE            reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    CLLAVE          reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)
    CCOR            reduce using rule 62 (factorEspecial -> CADENAEXPRESION .)


state 67

    (63) factorEspecial -> list .

    COMA            reduce using rule 63 (factorEspecial -> list .)
    ENTEROEXPRESION reduce using rule 63 (factorEspecial -> list .)
    FLOTANTEEXPRESION reduce using rule 63 (factorEspecial -> list .)
    APAR            reduce using rule 63 (factorEspecial -> list .)
    CADENAEXPRESION reduce using rule 63 (factorEspecial -> list .)
    ACOR            reduce using rule 63 (factorEspecial -> list .)
    SUMA            reduce using rule 63 (factorEspecial -> list .)
    RESTA           reduce using rule 63 (factorEspecial -> list .)
    MULT            reduce using rule 63 (factorEspecial -> list .)
    DIVISION        reduce using rule 63 (factorEspecial -> list .)
    MODULO          reduce using rule 63 (factorEspecial -> list .)
    $end            reduce using rule 63 (factorEspecial -> list .)
    CPAR            reduce using rule 63 (factorEspecial -> list .)
    ELSE            reduce using rule 63 (factorEspecial -> list .)
    CLLAVE          reduce using rule 63 (factorEspecial -> list .)
    CCOR            reduce using rule 63 (factorEspecial -> list .)


state 68

    (64) factorEspecial -> set .

    COMA            reduce using rule 64 (factorEspecial -> set .)
    ENTEROEXPRESION reduce using rule 64 (factorEspecial -> set .)
    FLOTANTEEXPRESION reduce using rule 64 (factorEspecial -> set .)
    APAR            reduce using rule 64 (factorEspecial -> set .)
    CADENAEXPRESION reduce using rule 64 (factorEspecial -> set .)
    ACOR            reduce using rule 64 (factorEspecial -> set .)
    SUMA            reduce using rule 64 (factorEspecial -> set .)
    RESTA           reduce using rule 64 (factorEspecial -> set .)
    MULT            reduce using rule 64 (factorEspecial -> set .)
    DIVISION        reduce using rule 64 (factorEspecial -> set .)
    MODULO          reduce using rule 64 (factorEspecial -> set .)
    $end            reduce using rule 64 (factorEspecial -> set .)
    CPAR            reduce using rule 64 (factorEspecial -> set .)
    ELSE            reduce using rule 64 (factorEspecial -> set .)
    CLLAVE          reduce using rule 64 (factorEspecial -> set .)
    CCOR            reduce using rule 64 (factorEspecial -> set .)


state 69

    (41) expresion -> expresion SUMA termino .
    (47) termino -> termino . SUMA factorEspecial
    (48) termino -> termino . RESTA factor
    (49) termino -> termino . MULT factor
    (50) termino -> termino . DIVISION factor
    (51) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 41 (expresion -> expresion SUMA termino .)
    CPAR            reduce using rule 41 (expresion -> expresion SUMA termino .)
    ELSE            reduce using rule 41 (expresion -> expresion SUMA termino .)
    CLLAVE          reduce using rule 41 (expresion -> expresion SUMA termino .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    MULT            shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40

  ! SUMA            [ reduce using rule 41 (expresion -> expresion SUMA termino .) ]
  ! RESTA           [ reduce using rule 41 (expresion -> expresion SUMA termino .) ]
  ! DIVISION        [ reduce using rule 41 (expresion -> expresion SUMA termino .) ]
  ! MULT            [ reduce using rule 41 (expresion -> expresion SUMA termino .) ]
  ! MODULO          [ reduce using rule 41 (expresion -> expresion SUMA termino .) ]


state 70

    (53) termino -> ENTEROEXPRESION .
    (58) factor -> ENTEROEXPRESION .

  ! reduce/reduce conflict for SUMA resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for RESTA resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MULT resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for DIVISION resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for MODULO resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for $end resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CPAR resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for ELSE resolved using rule 53 (termino -> ENTEROEXPRESION .)
  ! reduce/reduce conflict for CLLAVE resolved using rule 53 (termino -> ENTEROEXPRESION .)
    SUMA            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    RESTA           reduce using rule 53 (termino -> ENTEROEXPRESION .)
    MULT            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 53 (termino -> ENTEROEXPRESION .)
    MODULO          reduce using rule 53 (termino -> ENTEROEXPRESION .)
    $end            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    CPAR            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    ELSE            reduce using rule 53 (termino -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 53 (termino -> ENTEROEXPRESION .)

  ! SUMA            [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! RESTA           [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! MULT            [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! DIVISION        [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! MODULO          [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! $end            [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! CPAR            [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! ELSE            [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]
  ! CLLAVE          [ reduce using rule 58 (factor -> ENTEROEXPRESION .) ]


state 71

    (42) expresion -> expresion RESTA termino .
    (47) termino -> termino . SUMA factorEspecial
    (48) termino -> termino . RESTA factor
    (49) termino -> termino . MULT factor
    (50) termino -> termino . DIVISION factor
    (51) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 42 (expresion -> expresion RESTA termino .)
    CPAR            reduce using rule 42 (expresion -> expresion RESTA termino .)
    ELSE            reduce using rule 42 (expresion -> expresion RESTA termino .)
    CLLAVE          reduce using rule 42 (expresion -> expresion RESTA termino .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    MULT            shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40

  ! SUMA            [ reduce using rule 42 (expresion -> expresion RESTA termino .) ]
  ! RESTA           [ reduce using rule 42 (expresion -> expresion RESTA termino .) ]
  ! DIVISION        [ reduce using rule 42 (expresion -> expresion RESTA termino .) ]
  ! MULT            [ reduce using rule 42 (expresion -> expresion RESTA termino .) ]
  ! MODULO          [ reduce using rule 42 (expresion -> expresion RESTA termino .) ]


state 72

    (43) expresion -> expresion DIVISION termino .
    (47) termino -> termino . SUMA factorEspecial
    (48) termino -> termino . RESTA factor
    (49) termino -> termino . MULT factor
    (50) termino -> termino . DIVISION factor
    (51) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 43 (expresion -> expresion DIVISION termino .)
    CPAR            reduce using rule 43 (expresion -> expresion DIVISION termino .)
    ELSE            reduce using rule 43 (expresion -> expresion DIVISION termino .)
    CLLAVE          reduce using rule 43 (expresion -> expresion DIVISION termino .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    MULT            shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40

  ! SUMA            [ reduce using rule 43 (expresion -> expresion DIVISION termino .) ]
  ! RESTA           [ reduce using rule 43 (expresion -> expresion DIVISION termino .) ]
  ! DIVISION        [ reduce using rule 43 (expresion -> expresion DIVISION termino .) ]
  ! MULT            [ reduce using rule 43 (expresion -> expresion DIVISION termino .) ]
  ! MODULO          [ reduce using rule 43 (expresion -> expresion DIVISION termino .) ]


state 73

    (44) expresion -> expresion MULT termino .
    (47) termino -> termino . SUMA factorEspecial
    (48) termino -> termino . RESTA factor
    (49) termino -> termino . MULT factor
    (50) termino -> termino . DIVISION factor
    (51) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 44 (expresion -> expresion MULT termino .)
    CPAR            reduce using rule 44 (expresion -> expresion MULT termino .)
    ELSE            reduce using rule 44 (expresion -> expresion MULT termino .)
    CLLAVE          reduce using rule 44 (expresion -> expresion MULT termino .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    MULT            shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40

  ! SUMA            [ reduce using rule 44 (expresion -> expresion MULT termino .) ]
  ! RESTA           [ reduce using rule 44 (expresion -> expresion MULT termino .) ]
  ! DIVISION        [ reduce using rule 44 (expresion -> expresion MULT termino .) ]
  ! MULT            [ reduce using rule 44 (expresion -> expresion MULT termino .) ]
  ! MODULO          [ reduce using rule 44 (expresion -> expresion MULT termino .) ]


state 74

    (45) expresion -> expresion MODULO termino .
    (47) termino -> termino . SUMA factorEspecial
    (48) termino -> termino . RESTA factor
    (49) termino -> termino . MULT factor
    (50) termino -> termino . DIVISION factor
    (51) termino -> termino . MODULO factor

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 45 (expresion -> expresion MODULO termino .)
    CPAR            reduce using rule 45 (expresion -> expresion MODULO termino .)
    ELSE            reduce using rule 45 (expresion -> expresion MODULO termino .)
    CLLAVE          reduce using rule 45 (expresion -> expresion MODULO termino .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    MULT            shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40

  ! SUMA            [ reduce using rule 45 (expresion -> expresion MODULO termino .) ]
  ! RESTA           [ reduce using rule 45 (expresion -> expresion MODULO termino .) ]
  ! DIVISION        [ reduce using rule 45 (expresion -> expresion MODULO termino .) ]
  ! MULT            [ reduce using rule 45 (expresion -> expresion MODULO termino .) ]
  ! MODULO          [ reduce using rule 45 (expresion -> expresion MODULO termino .) ]


state 75

    (82) metodo -> atributo PUNTO ID . APAR CPAR
    (83) metodo -> atributo PUNTO ID . APAR ID CPAR

    APAR            shift and go to state 126


state 76

    (86) metodo -> atributo PUNTO funcion . APAR CPAR
    (87) metodo -> atributo PUNTO funcion . APAR ID CPAR

    APAR            shift and go to state 127


state 77

    (66) funcion -> WITHINDEX .

    APAR            reduce using rule 66 (funcion -> WITHINDEX .)


state 78

    (67) funcion -> GET .

    APAR            reduce using rule 67 (funcion -> GET .)


state 79

    (68) funcion -> SLICE .

    APAR            reduce using rule 68 (funcion -> SLICE .)


state 80

    (69) funcion -> COMPARETO .

    APAR            reduce using rule 69 (funcion -> COMPARETO .)


state 81

    (70) funcion -> GETINDEX .

    APAR            reduce using rule 70 (funcion -> GETINDEX .)


state 82

    (71) funcion -> HASHCODE .

    APAR            reduce using rule 71 (funcion -> HASHCODE .)


state 83

    (72) funcion -> CONTAINS .

    APAR            reduce using rule 72 (funcion -> CONTAINS .)


state 84

    (73) funcion -> SIZE .

    APAR            reduce using rule 73 (funcion -> SIZE .)


state 85

    (74) funcion -> ISEMPTY .

    APAR            reduce using rule 74 (funcion -> ISEMPTY .)


state 86

    (75) funcion -> TOSTRING .

    APAR            reduce using rule 75 (funcion -> TOSTRING .)


state 87

    (76) funcion -> TOLIST .

    APAR            reduce using rule 76 (funcion -> TOLIST .)


state 88

    (77) funcion -> PRINT .

    APAR            reduce using rule 77 (funcion -> PRINT .)


state 89

    (78) funcion -> PRINTLN .

    APAR            reduce using rule 78 (funcion -> PRINTLN .)


state 90

    (79) funcion -> INDICES .

    APAR            reduce using rule 79 (funcion -> INDICES .)


state 91

    (7) asignacion -> VAL ID tipoAsignacion .

    $end            reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    IGUALIGUAL      reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    TRIPLEIGUAL     reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    NOIGUAL         reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    MAYOR           reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    MENOR           reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    MAYORIGUAL      reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    MENORIGUAL      reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    AND             reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    OR              reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    CPAR            reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    ELSE            reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)
    CLLAVE          reduce using rule 7 (asignacion -> VAL ID tipoAsignacion .)


state 92

    (9) tipoAsignacion -> declaracion .
    (11) tipoAsignacion -> declaracion . inicializacion
    (13) inicializacion -> . IGUAL valor

    $end            reduce using rule 9 (tipoAsignacion -> declaracion .)
    IGUALIGUAL      reduce using rule 9 (tipoAsignacion -> declaracion .)
    TRIPLEIGUAL     reduce using rule 9 (tipoAsignacion -> declaracion .)
    NOIGUAL         reduce using rule 9 (tipoAsignacion -> declaracion .)
    MAYOR           reduce using rule 9 (tipoAsignacion -> declaracion .)
    MENOR           reduce using rule 9 (tipoAsignacion -> declaracion .)
    MAYORIGUAL      reduce using rule 9 (tipoAsignacion -> declaracion .)
    MENORIGUAL      reduce using rule 9 (tipoAsignacion -> declaracion .)
    AND             reduce using rule 9 (tipoAsignacion -> declaracion .)
    OR              reduce using rule 9 (tipoAsignacion -> declaracion .)
    CPAR            reduce using rule 9 (tipoAsignacion -> declaracion .)
    ELSE            reduce using rule 9 (tipoAsignacion -> declaracion .)
    CLLAVE          reduce using rule 9 (tipoAsignacion -> declaracion .)
    IGUAL           shift and go to state 95

    inicializacion                 shift and go to state 128

state 93

    (10) tipoAsignacion -> inicializacion .

    $end            reduce using rule 10 (tipoAsignacion -> inicializacion .)
    IGUALIGUAL      reduce using rule 10 (tipoAsignacion -> inicializacion .)
    TRIPLEIGUAL     reduce using rule 10 (tipoAsignacion -> inicializacion .)
    NOIGUAL         reduce using rule 10 (tipoAsignacion -> inicializacion .)
    MAYOR           reduce using rule 10 (tipoAsignacion -> inicializacion .)
    MENOR           reduce using rule 10 (tipoAsignacion -> inicializacion .)
    MAYORIGUAL      reduce using rule 10 (tipoAsignacion -> inicializacion .)
    MENORIGUAL      reduce using rule 10 (tipoAsignacion -> inicializacion .)
    AND             reduce using rule 10 (tipoAsignacion -> inicializacion .)
    OR              reduce using rule 10 (tipoAsignacion -> inicializacion .)
    CPAR            reduce using rule 10 (tipoAsignacion -> inicializacion .)
    ELSE            reduce using rule 10 (tipoAsignacion -> inicializacion .)
    CLLAVE          reduce using rule 10 (tipoAsignacion -> inicializacion .)


state 94

    (12) declaracion -> DOSPUNTOS . tipoDato
    (14) tipoDato -> . INT
    (15) tipoDato -> . FLOAT
    (16) tipoDato -> . BOOLEAN
    (17) tipoDato -> . STRING
    (18) tipoDato -> . LIST MENOR tipoDato MAYOR
    (19) tipoDato -> . SET MENOR tipoDato MAYOR
    (20) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (21) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 130
    FLOAT           shift and go to state 131
    BOOLEAN         shift and go to state 132
    STRING          shift and go to state 133
    LIST            shift and go to state 134
    SET             shift and go to state 135
    PAIR            shift and go to state 136
    TRIPLE          shift and go to state 137

    tipoDato                       shift and go to state 129

state 95

    (13) inicializacion -> IGUAL . valor
    (22) valor -> . ENTEROEXPRESION
    (23) valor -> . FLOTANTEEXPRESION
    (24) valor -> . BOOLEANOEXPRESION
    (25) valor -> . CADENAEXPRESION
    (26) valor -> . list
    (27) valor -> . set
    (28) valor -> . pair
    (29) valor -> . triple
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR
    (32) pair -> . APAR tipoFactor COMA tipoFactor CPAR
    (33) triple -> . APAR tipoFactor COMA tipoFactor COMA tipoFactor CPAR

    ENTEROEXPRESION shift and go to state 139
    FLOTANTEEXPRESION shift and go to state 140
    BOOLEANOEXPRESION shift and go to state 141
    CADENAEXPRESION shift and go to state 142
    ACOR            shift and go to state 26
    APAR            shift and go to state 147

    valor                          shift and go to state 138
    list                           shift and go to state 143
    set                            shift and go to state 144
    pair                           shift and go to state 145
    triple                         shift and go to state 146

state 96

    (80) metodo -> ID PUNTO ID . APAR CPAR
    (81) metodo -> ID PUNTO ID . APAR ID CPAR
    (88) atributo -> ID PUNTO ID .

    APAR            shift and go to state 148
    PUNTO           reduce using rule 88 (atributo -> ID PUNTO ID .)
    $end            reduce using rule 88 (atributo -> ID PUNTO ID .)
    IGUALIGUAL      reduce using rule 88 (atributo -> ID PUNTO ID .)
    TRIPLEIGUAL     reduce using rule 88 (atributo -> ID PUNTO ID .)
    NOIGUAL         reduce using rule 88 (atributo -> ID PUNTO ID .)
    MAYOR           reduce using rule 88 (atributo -> ID PUNTO ID .)
    MENOR           reduce using rule 88 (atributo -> ID PUNTO ID .)
    MAYORIGUAL      reduce using rule 88 (atributo -> ID PUNTO ID .)
    MENORIGUAL      reduce using rule 88 (atributo -> ID PUNTO ID .)
    AND             reduce using rule 88 (atributo -> ID PUNTO ID .)
    OR              reduce using rule 88 (atributo -> ID PUNTO ID .)
    CPAR            reduce using rule 88 (atributo -> ID PUNTO ID .)
    ELSE            reduce using rule 88 (atributo -> ID PUNTO ID .)
    CLLAVE          reduce using rule 88 (atributo -> ID PUNTO ID .)


state 97

    (84) metodo -> ID PUNTO funcion . APAR CPAR
    (85) metodo -> ID PUNTO funcion . APAR ID CPAR

    APAR            shift and go to state 149


state 98

    (8) asignacion -> VAR ID tipoAsignacion .

    $end            reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    IGUALIGUAL      reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    TRIPLEIGUAL     reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    NOIGUAL         reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    MAYOR           reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    MENOR           reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    MAYORIGUAL      reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    MENORIGUAL      reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    AND             reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    OR              reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    CPAR            reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    ELSE            reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)
    CLLAVE          reduce using rule 8 (asignacion -> VAR ID tipoAsignacion .)


state 99

    (47) termino -> termino SUMA factorEspecial .

    SUMA            reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    RESTA           reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    MULT            reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    DIVISION        reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    MODULO          reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    $end            reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    CPAR            reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    ELSE            reduce using rule 47 (termino -> termino SUMA factorEspecial .)
    CLLAVE          reduce using rule 47 (termino -> termino SUMA factorEspecial .)


state 100

    (60) factorEspecial -> ENTEROEXPRESION .

    SUMA            reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .)
    RESTA           reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .)
    MULT            reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .)
    MODULO          reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .)
    $end            reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .)
    CPAR            reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .)
    ELSE            reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 60 (factorEspecial -> ENTEROEXPRESION .)


state 101

    (61) factorEspecial -> FLOTANTEEXPRESION .

    SUMA            reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .)
    RESTA           reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .)
    MULT            reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .)
    DIVISION        reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .)
    MODULO          reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .)
    $end            reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .)
    CPAR            reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .)
    ELSE            reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .)
    CLLAVE          reduce using rule 61 (factorEspecial -> FLOTANTEEXPRESION .)


state 102

    (31) set -> APAR . contenido CPAR
    (34) contenido -> . elementos factor
    (35) contenido -> . elementos factorEspecial
    (36) elementos -> . elementos COMA
    (37) elementos -> . factor
    (38) elementos -> . factorEspecial
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (60) factorEspecial -> . ENTEROEXPRESION
    (61) factorEspecial -> . FLOTANTEEXPRESION
    (62) factorEspecial -> . CADENAEXPRESION
    (63) factorEspecial -> . list
    (64) factorEspecial -> . set
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 64
    FLOTANTEEXPRESION shift and go to state 65
    APAR            shift and go to state 12
    CADENAEXPRESION shift and go to state 66
    ACOR            shift and go to state 26

    contenido                      shift and go to state 42
    elementos                      shift and go to state 43
    factor                         shift and go to state 63
    factorEspecial                 shift and go to state 45
    list                           shift and go to state 67
    set                            shift and go to state 68

state 103

    (48) termino -> termino RESTA factor .

    SUMA            reduce using rule 48 (termino -> termino RESTA factor .)
    RESTA           reduce using rule 48 (termino -> termino RESTA factor .)
    MULT            reduce using rule 48 (termino -> termino RESTA factor .)
    DIVISION        reduce using rule 48 (termino -> termino RESTA factor .)
    MODULO          reduce using rule 48 (termino -> termino RESTA factor .)
    $end            reduce using rule 48 (termino -> termino RESTA factor .)
    CPAR            reduce using rule 48 (termino -> termino RESTA factor .)
    ELSE            reduce using rule 48 (termino -> termino RESTA factor .)
    CLLAVE          reduce using rule 48 (termino -> termino RESTA factor .)


state 104

    (58) factor -> ENTEROEXPRESION .

    SUMA            reduce using rule 58 (factor -> ENTEROEXPRESION .)
    RESTA           reduce using rule 58 (factor -> ENTEROEXPRESION .)
    MULT            reduce using rule 58 (factor -> ENTEROEXPRESION .)
    DIVISION        reduce using rule 58 (factor -> ENTEROEXPRESION .)
    MODULO          reduce using rule 58 (factor -> ENTEROEXPRESION .)
    $end            reduce using rule 58 (factor -> ENTEROEXPRESION .)
    CPAR            reduce using rule 58 (factor -> ENTEROEXPRESION .)
    ELSE            reduce using rule 58 (factor -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 58 (factor -> ENTEROEXPRESION .)


state 105

    (59) factor -> FLOTANTEEXPRESION .

    SUMA            reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    RESTA           reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    MULT            reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    DIVISION        reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    MODULO          reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    $end            reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    CPAR            reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    ELSE            reduce using rule 59 (factor -> FLOTANTEEXPRESION .)
    CLLAVE          reduce using rule 59 (factor -> FLOTANTEEXPRESION .)


state 106

    (65) factor -> APAR . expresion CPAR
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 70
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    expresion                      shift and go to state 41
    termino                        shift and go to state 11
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 107

    (49) termino -> termino MULT factor .

    SUMA            reduce using rule 49 (termino -> termino MULT factor .)
    RESTA           reduce using rule 49 (termino -> termino MULT factor .)
    MULT            reduce using rule 49 (termino -> termino MULT factor .)
    DIVISION        reduce using rule 49 (termino -> termino MULT factor .)
    MODULO          reduce using rule 49 (termino -> termino MULT factor .)
    $end            reduce using rule 49 (termino -> termino MULT factor .)
    CPAR            reduce using rule 49 (termino -> termino MULT factor .)
    ELSE            reduce using rule 49 (termino -> termino MULT factor .)
    CLLAVE          reduce using rule 49 (termino -> termino MULT factor .)


state 108

    (50) termino -> termino DIVISION factor .

    SUMA            reduce using rule 50 (termino -> termino DIVISION factor .)
    RESTA           reduce using rule 50 (termino -> termino DIVISION factor .)
    MULT            reduce using rule 50 (termino -> termino DIVISION factor .)
    DIVISION        reduce using rule 50 (termino -> termino DIVISION factor .)
    MODULO          reduce using rule 50 (termino -> termino DIVISION factor .)
    $end            reduce using rule 50 (termino -> termino DIVISION factor .)
    CPAR            reduce using rule 50 (termino -> termino DIVISION factor .)
    ELSE            reduce using rule 50 (termino -> termino DIVISION factor .)
    CLLAVE          reduce using rule 50 (termino -> termino DIVISION factor .)


state 109

    (51) termino -> termino MODULO factor .

    SUMA            reduce using rule 51 (termino -> termino MODULO factor .)
    RESTA           reduce using rule 51 (termino -> termino MODULO factor .)
    MULT            reduce using rule 51 (termino -> termino MODULO factor .)
    DIVISION        reduce using rule 51 (termino -> termino MODULO factor .)
    MODULO          reduce using rule 51 (termino -> termino MODULO factor .)
    $end            reduce using rule 51 (termino -> termino MODULO factor .)
    CPAR            reduce using rule 51 (termino -> termino MODULO factor .)
    ELSE            reduce using rule 51 (termino -> termino MODULO factor .)
    CLLAVE          reduce using rule 51 (termino -> termino MODULO factor .)


state 110

    (65) factor -> APAR expresion CPAR .

    SUMA            reduce using rule 65 (factor -> APAR expresion CPAR .)
    RESTA           reduce using rule 65 (factor -> APAR expresion CPAR .)
    MULT            reduce using rule 65 (factor -> APAR expresion CPAR .)
    DIVISION        reduce using rule 65 (factor -> APAR expresion CPAR .)
    MODULO          reduce using rule 65 (factor -> APAR expresion CPAR .)
    $end            reduce using rule 65 (factor -> APAR expresion CPAR .)
    CPAR            reduce using rule 65 (factor -> APAR expresion CPAR .)
    COMA            reduce using rule 65 (factor -> APAR expresion CPAR .)
    ENTEROEXPRESION reduce using rule 65 (factor -> APAR expresion CPAR .)
    FLOTANTEEXPRESION reduce using rule 65 (factor -> APAR expresion CPAR .)
    APAR            reduce using rule 65 (factor -> APAR expresion CPAR .)
    CADENAEXPRESION reduce using rule 65 (factor -> APAR expresion CPAR .)
    ACOR            reduce using rule 65 (factor -> APAR expresion CPAR .)
    ELSE            reduce using rule 65 (factor -> APAR expresion CPAR .)
    CLLAVE          reduce using rule 65 (factor -> APAR expresion CPAR .)
    CCOR            reduce using rule 65 (factor -> APAR expresion CPAR .)


state 111

    (31) set -> APAR contenido CPAR .

    SUMA            reduce using rule 31 (set -> APAR contenido CPAR .)
    RESTA           reduce using rule 31 (set -> APAR contenido CPAR .)
    MULT            reduce using rule 31 (set -> APAR contenido CPAR .)
    DIVISION        reduce using rule 31 (set -> APAR contenido CPAR .)
    MODULO          reduce using rule 31 (set -> APAR contenido CPAR .)
    $end            reduce using rule 31 (set -> APAR contenido CPAR .)
    CPAR            reduce using rule 31 (set -> APAR contenido CPAR .)
    COMA            reduce using rule 31 (set -> APAR contenido CPAR .)
    ENTEROEXPRESION reduce using rule 31 (set -> APAR contenido CPAR .)
    FLOTANTEEXPRESION reduce using rule 31 (set -> APAR contenido CPAR .)
    APAR            reduce using rule 31 (set -> APAR contenido CPAR .)
    CADENAEXPRESION reduce using rule 31 (set -> APAR contenido CPAR .)
    ACOR            reduce using rule 31 (set -> APAR contenido CPAR .)
    ELSE            reduce using rule 31 (set -> APAR contenido CPAR .)
    CLLAVE          reduce using rule 31 (set -> APAR contenido CPAR .)
    CCOR            reduce using rule 31 (set -> APAR contenido CPAR .)
    IGUALIGUAL      reduce using rule 31 (set -> APAR contenido CPAR .)
    TRIPLEIGUAL     reduce using rule 31 (set -> APAR contenido CPAR .)
    NOIGUAL         reduce using rule 31 (set -> APAR contenido CPAR .)
    MAYOR           reduce using rule 31 (set -> APAR contenido CPAR .)
    MENOR           reduce using rule 31 (set -> APAR contenido CPAR .)
    MAYORIGUAL      reduce using rule 31 (set -> APAR contenido CPAR .)
    MENORIGUAL      reduce using rule 31 (set -> APAR contenido CPAR .)
    AND             reduce using rule 31 (set -> APAR contenido CPAR .)
    OR              reduce using rule 31 (set -> APAR contenido CPAR .)


state 112

    (34) contenido -> elementos factor .

    CPAR            reduce using rule 34 (contenido -> elementos factor .)
    CCOR            reduce using rule 34 (contenido -> elementos factor .)


state 113

    (35) contenido -> elementos factorEspecial .

    CPAR            reduce using rule 35 (contenido -> elementos factorEspecial .)
    CCOR            reduce using rule 35 (contenido -> elementos factorEspecial .)


state 114

    (36) elementos -> elementos COMA .

    COMA            reduce using rule 36 (elementos -> elementos COMA .)
    ENTEROEXPRESION reduce using rule 36 (elementos -> elementos COMA .)
    FLOTANTEEXPRESION reduce using rule 36 (elementos -> elementos COMA .)
    APAR            reduce using rule 36 (elementos -> elementos COMA .)
    CADENAEXPRESION reduce using rule 36 (elementos -> elementos COMA .)
    ACOR            reduce using rule 36 (elementos -> elementos COMA .)


state 115

    (103) condicion -> compmiembro comparador compmiembro .
    (104) condicion -> compmiembro comparador compmiembro . conector compmiembro comparador compmiembro
    (96) conector -> . AND
    (97) conector -> . OR

    $end            reduce using rule 103 (condicion -> compmiembro comparador compmiembro .)
    CPAR            reduce using rule 103 (condicion -> compmiembro comparador compmiembro .)
    ELSE            reduce using rule 103 (condicion -> compmiembro comparador compmiembro .)
    CLLAVE          reduce using rule 103 (condicion -> compmiembro comparador compmiembro .)
    AND             shift and go to state 151
    OR              shift and go to state 152

    conector                       shift and go to state 150

state 116

    (98) compmiembro -> ID .
    (80) metodo -> ID . PUNTO ID APAR CPAR
    (81) metodo -> ID . PUNTO ID APAR ID CPAR
    (84) metodo -> ID . PUNTO funcion APAR CPAR
    (85) metodo -> ID . PUNTO funcion APAR ID CPAR
    (88) atributo -> ID . PUNTO ID

    AND             reduce using rule 98 (compmiembro -> ID .)
    OR              reduce using rule 98 (compmiembro -> ID .)
    $end            reduce using rule 98 (compmiembro -> ID .)
    CPAR            reduce using rule 98 (compmiembro -> ID .)
    ELSE            reduce using rule 98 (compmiembro -> ID .)
    CLLAVE          reduce using rule 98 (compmiembro -> ID .)
    IGUALIGUAL      reduce using rule 98 (compmiembro -> ID .)
    TRIPLEIGUAL     reduce using rule 98 (compmiembro -> ID .)
    NOIGUAL         reduce using rule 98 (compmiembro -> ID .)
    MAYOR           reduce using rule 98 (compmiembro -> ID .)
    MENOR           reduce using rule 98 (compmiembro -> ID .)
    MAYORIGUAL      reduce using rule 98 (compmiembro -> ID .)
    MENORIGUAL      reduce using rule 98 (compmiembro -> ID .)
    PUNTO           shift and go to state 34


state 117

    (99) compmiembro -> ENTEROEXPRESION .

    AND             reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    OR              reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    $end            reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    CPAR            reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    ELSE            reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    IGUALIGUAL      reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    TRIPLEIGUAL     reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    NOIGUAL         reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    MAYOR           reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    MENOR           reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    MAYORIGUAL      reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)
    MENORIGUAL      reduce using rule 99 (compmiembro -> ENTEROEXPRESION .)


state 118

    (100) compmiembro -> metodo .

    AND             reduce using rule 100 (compmiembro -> metodo .)
    OR              reduce using rule 100 (compmiembro -> metodo .)
    $end            reduce using rule 100 (compmiembro -> metodo .)
    CPAR            reduce using rule 100 (compmiembro -> metodo .)
    ELSE            reduce using rule 100 (compmiembro -> metodo .)
    CLLAVE          reduce using rule 100 (compmiembro -> metodo .)
    IGUALIGUAL      reduce using rule 100 (compmiembro -> metodo .)
    TRIPLEIGUAL     reduce using rule 100 (compmiembro -> metodo .)
    NOIGUAL         reduce using rule 100 (compmiembro -> metodo .)
    MAYOR           reduce using rule 100 (compmiembro -> metodo .)
    MENOR           reduce using rule 100 (compmiembro -> metodo .)
    MAYORIGUAL      reduce using rule 100 (compmiembro -> metodo .)
    MENORIGUAL      reduce using rule 100 (compmiembro -> metodo .)


state 119

    (101) compmiembro -> atributo .
    (82) metodo -> atributo . PUNTO ID APAR CPAR
    (83) metodo -> atributo . PUNTO ID APAR ID CPAR
    (86) metodo -> atributo . PUNTO funcion APAR CPAR
    (87) metodo -> atributo . PUNTO funcion APAR ID CPAR

    AND             reduce using rule 101 (compmiembro -> atributo .)
    OR              reduce using rule 101 (compmiembro -> atributo .)
    $end            reduce using rule 101 (compmiembro -> atributo .)
    CPAR            reduce using rule 101 (compmiembro -> atributo .)
    ELSE            reduce using rule 101 (compmiembro -> atributo .)
    CLLAVE          reduce using rule 101 (compmiembro -> atributo .)
    IGUALIGUAL      reduce using rule 101 (compmiembro -> atributo .)
    TRIPLEIGUAL     reduce using rule 101 (compmiembro -> atributo .)
    NOIGUAL         reduce using rule 101 (compmiembro -> atributo .)
    MAYOR           reduce using rule 101 (compmiembro -> atributo .)
    MENOR           reduce using rule 101 (compmiembro -> atributo .)
    MAYORIGUAL      reduce using rule 101 (compmiembro -> atributo .)
    MENORIGUAL      reduce using rule 101 (compmiembro -> atributo .)
    PUNTO           shift and go to state 32


state 120

    (102) compmiembro -> asignacion .

    AND             reduce using rule 102 (compmiembro -> asignacion .)
    OR              reduce using rule 102 (compmiembro -> asignacion .)
    $end            reduce using rule 102 (compmiembro -> asignacion .)
    CPAR            reduce using rule 102 (compmiembro -> asignacion .)
    ELSE            reduce using rule 102 (compmiembro -> asignacion .)
    CLLAVE          reduce using rule 102 (compmiembro -> asignacion .)
    IGUALIGUAL      reduce using rule 102 (compmiembro -> asignacion .)
    TRIPLEIGUAL     reduce using rule 102 (compmiembro -> asignacion .)
    NOIGUAL         reduce using rule 102 (compmiembro -> asignacion .)
    MAYOR           reduce using rule 102 (compmiembro -> asignacion .)
    MENOR           reduce using rule 102 (compmiembro -> asignacion .)
    MAYORIGUAL      reduce using rule 102 (compmiembro -> asignacion .)
    MENORIGUAL      reduce using rule 102 (compmiembro -> asignacion .)


state 121

    (110) if -> IF APAR condicion . CPAR cuerpo
    (111) if -> IF APAR condicion . CPAR cuerpo ELSE cuerpo

    CPAR            shift and go to state 153


state 122

    (120) for -> FOR APAR APAR . ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> FOR APAR APAR . ID COMA ID CPAR IN ID CPAR cuerpo

    ID              shift and go to state 154


state 123

    (112) for -> FOR APAR ID . IN ID CPAR cuerpo
    (113) for -> FOR APAR ID . DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> FOR APAR ID . IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> FOR APAR ID . IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> FOR APAR ID . IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> FOR APAR ID . IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> FOR APAR ID . IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> FOR APAR ID . IN ID PUNTO ID CPAR cuerpo

    IN              shift and go to state 155
    DOSPUNTOS       shift and go to state 156


state 124

    (122) while -> WHILE APAR condicion . CPAR cuerpo

    CPAR            shift and go to state 157


state 125

    (30) list -> ACOR contenido CCOR .

    SUMA            reduce using rule 30 (list -> ACOR contenido CCOR .)
    RESTA           reduce using rule 30 (list -> ACOR contenido CCOR .)
    MULT            reduce using rule 30 (list -> ACOR contenido CCOR .)
    DIVISION        reduce using rule 30 (list -> ACOR contenido CCOR .)
    MODULO          reduce using rule 30 (list -> ACOR contenido CCOR .)
    $end            reduce using rule 30 (list -> ACOR contenido CCOR .)
    CPAR            reduce using rule 30 (list -> ACOR contenido CCOR .)
    COMA            reduce using rule 30 (list -> ACOR contenido CCOR .)
    ENTEROEXPRESION reduce using rule 30 (list -> ACOR contenido CCOR .)
    FLOTANTEEXPRESION reduce using rule 30 (list -> ACOR contenido CCOR .)
    APAR            reduce using rule 30 (list -> ACOR contenido CCOR .)
    CADENAEXPRESION reduce using rule 30 (list -> ACOR contenido CCOR .)
    ACOR            reduce using rule 30 (list -> ACOR contenido CCOR .)
    ELSE            reduce using rule 30 (list -> ACOR contenido CCOR .)
    CLLAVE          reduce using rule 30 (list -> ACOR contenido CCOR .)
    CCOR            reduce using rule 30 (list -> ACOR contenido CCOR .)
    IGUALIGUAL      reduce using rule 30 (list -> ACOR contenido CCOR .)
    TRIPLEIGUAL     reduce using rule 30 (list -> ACOR contenido CCOR .)
    NOIGUAL         reduce using rule 30 (list -> ACOR contenido CCOR .)
    MAYOR           reduce using rule 30 (list -> ACOR contenido CCOR .)
    MENOR           reduce using rule 30 (list -> ACOR contenido CCOR .)
    MAYORIGUAL      reduce using rule 30 (list -> ACOR contenido CCOR .)
    MENORIGUAL      reduce using rule 30 (list -> ACOR contenido CCOR .)
    AND             reduce using rule 30 (list -> ACOR contenido CCOR .)
    OR              reduce using rule 30 (list -> ACOR contenido CCOR .)


state 126

    (82) metodo -> atributo PUNTO ID APAR . CPAR
    (83) metodo -> atributo PUNTO ID APAR . ID CPAR

    CPAR            shift and go to state 159
    ID              shift and go to state 158


state 127

    (86) metodo -> atributo PUNTO funcion APAR . CPAR
    (87) metodo -> atributo PUNTO funcion APAR . ID CPAR

    CPAR            shift and go to state 160
    ID              shift and go to state 161


state 128

    (11) tipoAsignacion -> declaracion inicializacion .

    $end            reduce using rule 11 (tipoAsignacion -> declaracion inicializacion .)
    IGUALIGUAL      reduce using rule 11 (tipoAsignacion -> declaracion inicializacion .)
    TRIPLEIGUAL     reduce using rule 11 (tipoAsignacion -> declaracion inicializacion .)
    NOIGUAL         reduce using rule 11 (tipoAsignacion -> declaracion inicializacion .)
    MAYOR           reduce using rule 11 (tipoAsignacion -> declaracion inicializacion .)
    MENOR           reduce using rule 11 (tipoAsignacion -> declaracion inicializacion .)
    MAYORIGUAL      reduce using rule 11 (tipoAsignacion -> declaracion inicializacion .)
    MENORIGUAL      reduce using rule 11 (tipoAsignacion -> declaracion inicializacion .)
    AND             reduce using rule 11 (tipoAsignacion -> declaracion inicializacion .)
    OR              reduce using rule 11 (tipoAsignacion -> declaracion inicializacion .)
    CPAR            reduce using rule 11 (tipoAsignacion -> declaracion inicializacion .)
    ELSE            reduce using rule 11 (tipoAsignacion -> declaracion inicializacion .)
    CLLAVE          reduce using rule 11 (tipoAsignacion -> declaracion inicializacion .)


state 129

    (12) declaracion -> DOSPUNTOS tipoDato .

    IGUAL           reduce using rule 12 (declaracion -> DOSPUNTOS tipoDato .)
    $end            reduce using rule 12 (declaracion -> DOSPUNTOS tipoDato .)
    IGUALIGUAL      reduce using rule 12 (declaracion -> DOSPUNTOS tipoDato .)
    TRIPLEIGUAL     reduce using rule 12 (declaracion -> DOSPUNTOS tipoDato .)
    NOIGUAL         reduce using rule 12 (declaracion -> DOSPUNTOS tipoDato .)
    MAYOR           reduce using rule 12 (declaracion -> DOSPUNTOS tipoDato .)
    MENOR           reduce using rule 12 (declaracion -> DOSPUNTOS tipoDato .)
    MAYORIGUAL      reduce using rule 12 (declaracion -> DOSPUNTOS tipoDato .)
    MENORIGUAL      reduce using rule 12 (declaracion -> DOSPUNTOS tipoDato .)
    AND             reduce using rule 12 (declaracion -> DOSPUNTOS tipoDato .)
    OR              reduce using rule 12 (declaracion -> DOSPUNTOS tipoDato .)
    CPAR            reduce using rule 12 (declaracion -> DOSPUNTOS tipoDato .)
    ELSE            reduce using rule 12 (declaracion -> DOSPUNTOS tipoDato .)
    CLLAVE          reduce using rule 12 (declaracion -> DOSPUNTOS tipoDato .)


state 130

    (14) tipoDato -> INT .

    IGUAL           reduce using rule 14 (tipoDato -> INT .)
    $end            reduce using rule 14 (tipoDato -> INT .)
    IGUALIGUAL      reduce using rule 14 (tipoDato -> INT .)
    TRIPLEIGUAL     reduce using rule 14 (tipoDato -> INT .)
    NOIGUAL         reduce using rule 14 (tipoDato -> INT .)
    MAYOR           reduce using rule 14 (tipoDato -> INT .)
    MENOR           reduce using rule 14 (tipoDato -> INT .)
    MAYORIGUAL      reduce using rule 14 (tipoDato -> INT .)
    MENORIGUAL      reduce using rule 14 (tipoDato -> INT .)
    AND             reduce using rule 14 (tipoDato -> INT .)
    OR              reduce using rule 14 (tipoDato -> INT .)
    CPAR            reduce using rule 14 (tipoDato -> INT .)
    ELSE            reduce using rule 14 (tipoDato -> INT .)
    CLLAVE          reduce using rule 14 (tipoDato -> INT .)
    COMA            reduce using rule 14 (tipoDato -> INT .)


state 131

    (15) tipoDato -> FLOAT .

    IGUAL           reduce using rule 15 (tipoDato -> FLOAT .)
    $end            reduce using rule 15 (tipoDato -> FLOAT .)
    IGUALIGUAL      reduce using rule 15 (tipoDato -> FLOAT .)
    TRIPLEIGUAL     reduce using rule 15 (tipoDato -> FLOAT .)
    NOIGUAL         reduce using rule 15 (tipoDato -> FLOAT .)
    MAYOR           reduce using rule 15 (tipoDato -> FLOAT .)
    MENOR           reduce using rule 15 (tipoDato -> FLOAT .)
    MAYORIGUAL      reduce using rule 15 (tipoDato -> FLOAT .)
    MENORIGUAL      reduce using rule 15 (tipoDato -> FLOAT .)
    AND             reduce using rule 15 (tipoDato -> FLOAT .)
    OR              reduce using rule 15 (tipoDato -> FLOAT .)
    CPAR            reduce using rule 15 (tipoDato -> FLOAT .)
    ELSE            reduce using rule 15 (tipoDato -> FLOAT .)
    CLLAVE          reduce using rule 15 (tipoDato -> FLOAT .)
    COMA            reduce using rule 15 (tipoDato -> FLOAT .)


state 132

    (16) tipoDato -> BOOLEAN .

    IGUAL           reduce using rule 16 (tipoDato -> BOOLEAN .)
    $end            reduce using rule 16 (tipoDato -> BOOLEAN .)
    IGUALIGUAL      reduce using rule 16 (tipoDato -> BOOLEAN .)
    TRIPLEIGUAL     reduce using rule 16 (tipoDato -> BOOLEAN .)
    NOIGUAL         reduce using rule 16 (tipoDato -> BOOLEAN .)
    MAYOR           reduce using rule 16 (tipoDato -> BOOLEAN .)
    MENOR           reduce using rule 16 (tipoDato -> BOOLEAN .)
    MAYORIGUAL      reduce using rule 16 (tipoDato -> BOOLEAN .)
    MENORIGUAL      reduce using rule 16 (tipoDato -> BOOLEAN .)
    AND             reduce using rule 16 (tipoDato -> BOOLEAN .)
    OR              reduce using rule 16 (tipoDato -> BOOLEAN .)
    CPAR            reduce using rule 16 (tipoDato -> BOOLEAN .)
    ELSE            reduce using rule 16 (tipoDato -> BOOLEAN .)
    CLLAVE          reduce using rule 16 (tipoDato -> BOOLEAN .)
    COMA            reduce using rule 16 (tipoDato -> BOOLEAN .)


state 133

    (17) tipoDato -> STRING .

    IGUAL           reduce using rule 17 (tipoDato -> STRING .)
    $end            reduce using rule 17 (tipoDato -> STRING .)
    IGUALIGUAL      reduce using rule 17 (tipoDato -> STRING .)
    TRIPLEIGUAL     reduce using rule 17 (tipoDato -> STRING .)
    NOIGUAL         reduce using rule 17 (tipoDato -> STRING .)
    MAYOR           reduce using rule 17 (tipoDato -> STRING .)
    MENOR           reduce using rule 17 (tipoDato -> STRING .)
    MAYORIGUAL      reduce using rule 17 (tipoDato -> STRING .)
    MENORIGUAL      reduce using rule 17 (tipoDato -> STRING .)
    AND             reduce using rule 17 (tipoDato -> STRING .)
    OR              reduce using rule 17 (tipoDato -> STRING .)
    CPAR            reduce using rule 17 (tipoDato -> STRING .)
    ELSE            reduce using rule 17 (tipoDato -> STRING .)
    CLLAVE          reduce using rule 17 (tipoDato -> STRING .)
    COMA            reduce using rule 17 (tipoDato -> STRING .)


state 134

    (18) tipoDato -> LIST . MENOR tipoDato MAYOR

    MENOR           shift and go to state 162


state 135

    (19) tipoDato -> SET . MENOR tipoDato MAYOR

    MENOR           shift and go to state 163


state 136

    (20) tipoDato -> PAIR . MENOR tipoDato COMA tipoDato MAYOR

    MENOR           shift and go to state 164


state 137

    (21) tipoDato -> TRIPLE . MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    MENOR           shift and go to state 165


state 138

    (13) inicializacion -> IGUAL valor .

    $end            reduce using rule 13 (inicializacion -> IGUAL valor .)
    IGUALIGUAL      reduce using rule 13 (inicializacion -> IGUAL valor .)
    TRIPLEIGUAL     reduce using rule 13 (inicializacion -> IGUAL valor .)
    NOIGUAL         reduce using rule 13 (inicializacion -> IGUAL valor .)
    MAYOR           reduce using rule 13 (inicializacion -> IGUAL valor .)
    MENOR           reduce using rule 13 (inicializacion -> IGUAL valor .)
    MAYORIGUAL      reduce using rule 13 (inicializacion -> IGUAL valor .)
    MENORIGUAL      reduce using rule 13 (inicializacion -> IGUAL valor .)
    AND             reduce using rule 13 (inicializacion -> IGUAL valor .)
    OR              reduce using rule 13 (inicializacion -> IGUAL valor .)
    CPAR            reduce using rule 13 (inicializacion -> IGUAL valor .)
    ELSE            reduce using rule 13 (inicializacion -> IGUAL valor .)
    CLLAVE          reduce using rule 13 (inicializacion -> IGUAL valor .)


state 139

    (22) valor -> ENTEROEXPRESION .

    $end            reduce using rule 22 (valor -> ENTEROEXPRESION .)
    IGUALIGUAL      reduce using rule 22 (valor -> ENTEROEXPRESION .)
    TRIPLEIGUAL     reduce using rule 22 (valor -> ENTEROEXPRESION .)
    NOIGUAL         reduce using rule 22 (valor -> ENTEROEXPRESION .)
    MAYOR           reduce using rule 22 (valor -> ENTEROEXPRESION .)
    MENOR           reduce using rule 22 (valor -> ENTEROEXPRESION .)
    MAYORIGUAL      reduce using rule 22 (valor -> ENTEROEXPRESION .)
    MENORIGUAL      reduce using rule 22 (valor -> ENTEROEXPRESION .)
    AND             reduce using rule 22 (valor -> ENTEROEXPRESION .)
    OR              reduce using rule 22 (valor -> ENTEROEXPRESION .)
    CPAR            reduce using rule 22 (valor -> ENTEROEXPRESION .)
    ELSE            reduce using rule 22 (valor -> ENTEROEXPRESION .)
    CLLAVE          reduce using rule 22 (valor -> ENTEROEXPRESION .)


state 140

    (23) valor -> FLOTANTEEXPRESION .

    $end            reduce using rule 23 (valor -> FLOTANTEEXPRESION .)
    IGUALIGUAL      reduce using rule 23 (valor -> FLOTANTEEXPRESION .)
    TRIPLEIGUAL     reduce using rule 23 (valor -> FLOTANTEEXPRESION .)
    NOIGUAL         reduce using rule 23 (valor -> FLOTANTEEXPRESION .)
    MAYOR           reduce using rule 23 (valor -> FLOTANTEEXPRESION .)
    MENOR           reduce using rule 23 (valor -> FLOTANTEEXPRESION .)
    MAYORIGUAL      reduce using rule 23 (valor -> FLOTANTEEXPRESION .)
    MENORIGUAL      reduce using rule 23 (valor -> FLOTANTEEXPRESION .)
    AND             reduce using rule 23 (valor -> FLOTANTEEXPRESION .)
    OR              reduce using rule 23 (valor -> FLOTANTEEXPRESION .)
    CPAR            reduce using rule 23 (valor -> FLOTANTEEXPRESION .)
    ELSE            reduce using rule 23 (valor -> FLOTANTEEXPRESION .)
    CLLAVE          reduce using rule 23 (valor -> FLOTANTEEXPRESION .)


state 141

    (24) valor -> BOOLEANOEXPRESION .

    $end            reduce using rule 24 (valor -> BOOLEANOEXPRESION .)
    IGUALIGUAL      reduce using rule 24 (valor -> BOOLEANOEXPRESION .)
    TRIPLEIGUAL     reduce using rule 24 (valor -> BOOLEANOEXPRESION .)
    NOIGUAL         reduce using rule 24 (valor -> BOOLEANOEXPRESION .)
    MAYOR           reduce using rule 24 (valor -> BOOLEANOEXPRESION .)
    MENOR           reduce using rule 24 (valor -> BOOLEANOEXPRESION .)
    MAYORIGUAL      reduce using rule 24 (valor -> BOOLEANOEXPRESION .)
    MENORIGUAL      reduce using rule 24 (valor -> BOOLEANOEXPRESION .)
    AND             reduce using rule 24 (valor -> BOOLEANOEXPRESION .)
    OR              reduce using rule 24 (valor -> BOOLEANOEXPRESION .)
    CPAR            reduce using rule 24 (valor -> BOOLEANOEXPRESION .)
    ELSE            reduce using rule 24 (valor -> BOOLEANOEXPRESION .)
    CLLAVE          reduce using rule 24 (valor -> BOOLEANOEXPRESION .)


state 142

    (25) valor -> CADENAEXPRESION .

    $end            reduce using rule 25 (valor -> CADENAEXPRESION .)
    IGUALIGUAL      reduce using rule 25 (valor -> CADENAEXPRESION .)
    TRIPLEIGUAL     reduce using rule 25 (valor -> CADENAEXPRESION .)
    NOIGUAL         reduce using rule 25 (valor -> CADENAEXPRESION .)
    MAYOR           reduce using rule 25 (valor -> CADENAEXPRESION .)
    MENOR           reduce using rule 25 (valor -> CADENAEXPRESION .)
    MAYORIGUAL      reduce using rule 25 (valor -> CADENAEXPRESION .)
    MENORIGUAL      reduce using rule 25 (valor -> CADENAEXPRESION .)
    AND             reduce using rule 25 (valor -> CADENAEXPRESION .)
    OR              reduce using rule 25 (valor -> CADENAEXPRESION .)
    CPAR            reduce using rule 25 (valor -> CADENAEXPRESION .)
    ELSE            reduce using rule 25 (valor -> CADENAEXPRESION .)
    CLLAVE          reduce using rule 25 (valor -> CADENAEXPRESION .)


state 143

    (26) valor -> list .

    $end            reduce using rule 26 (valor -> list .)
    IGUALIGUAL      reduce using rule 26 (valor -> list .)
    TRIPLEIGUAL     reduce using rule 26 (valor -> list .)
    NOIGUAL         reduce using rule 26 (valor -> list .)
    MAYOR           reduce using rule 26 (valor -> list .)
    MENOR           reduce using rule 26 (valor -> list .)
    MAYORIGUAL      reduce using rule 26 (valor -> list .)
    MENORIGUAL      reduce using rule 26 (valor -> list .)
    AND             reduce using rule 26 (valor -> list .)
    OR              reduce using rule 26 (valor -> list .)
    CPAR            reduce using rule 26 (valor -> list .)
    ELSE            reduce using rule 26 (valor -> list .)
    CLLAVE          reduce using rule 26 (valor -> list .)


state 144

    (27) valor -> set .

    $end            reduce using rule 27 (valor -> set .)
    IGUALIGUAL      reduce using rule 27 (valor -> set .)
    TRIPLEIGUAL     reduce using rule 27 (valor -> set .)
    NOIGUAL         reduce using rule 27 (valor -> set .)
    MAYOR           reduce using rule 27 (valor -> set .)
    MENOR           reduce using rule 27 (valor -> set .)
    MAYORIGUAL      reduce using rule 27 (valor -> set .)
    MENORIGUAL      reduce using rule 27 (valor -> set .)
    AND             reduce using rule 27 (valor -> set .)
    OR              reduce using rule 27 (valor -> set .)
    CPAR            reduce using rule 27 (valor -> set .)
    ELSE            reduce using rule 27 (valor -> set .)
    CLLAVE          reduce using rule 27 (valor -> set .)


state 145

    (28) valor -> pair .

    $end            reduce using rule 28 (valor -> pair .)
    IGUALIGUAL      reduce using rule 28 (valor -> pair .)
    TRIPLEIGUAL     reduce using rule 28 (valor -> pair .)
    NOIGUAL         reduce using rule 28 (valor -> pair .)
    MAYOR           reduce using rule 28 (valor -> pair .)
    MENOR           reduce using rule 28 (valor -> pair .)
    MAYORIGUAL      reduce using rule 28 (valor -> pair .)
    MENORIGUAL      reduce using rule 28 (valor -> pair .)
    AND             reduce using rule 28 (valor -> pair .)
    OR              reduce using rule 28 (valor -> pair .)
    CPAR            reduce using rule 28 (valor -> pair .)
    ELSE            reduce using rule 28 (valor -> pair .)
    CLLAVE          reduce using rule 28 (valor -> pair .)


state 146

    (29) valor -> triple .

    $end            reduce using rule 29 (valor -> triple .)
    IGUALIGUAL      reduce using rule 29 (valor -> triple .)
    TRIPLEIGUAL     reduce using rule 29 (valor -> triple .)
    NOIGUAL         reduce using rule 29 (valor -> triple .)
    MAYOR           reduce using rule 29 (valor -> triple .)
    MENOR           reduce using rule 29 (valor -> triple .)
    MAYORIGUAL      reduce using rule 29 (valor -> triple .)
    MENORIGUAL      reduce using rule 29 (valor -> triple .)
    AND             reduce using rule 29 (valor -> triple .)
    OR              reduce using rule 29 (valor -> triple .)
    CPAR            reduce using rule 29 (valor -> triple .)
    ELSE            reduce using rule 29 (valor -> triple .)
    CLLAVE          reduce using rule 29 (valor -> triple .)


state 147

    (31) set -> APAR . contenido CPAR
    (32) pair -> APAR . tipoFactor COMA tipoFactor CPAR
    (33) triple -> APAR . tipoFactor COMA tipoFactor COMA tipoFactor CPAR
    (34) contenido -> . elementos factor
    (35) contenido -> . elementos factorEspecial
    (39) tipoFactor -> . factor
    (40) tipoFactor -> . factorEspecial
    (36) elementos -> . elementos COMA
    (37) elementos -> . factor
    (38) elementos -> . factorEspecial
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (60) factorEspecial -> . ENTEROEXPRESION
    (61) factorEspecial -> . FLOTANTEEXPRESION
    (62) factorEspecial -> . CADENAEXPRESION
    (63) factorEspecial -> . list
    (64) factorEspecial -> . set
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 64
    FLOTANTEEXPRESION shift and go to state 65
    APAR            shift and go to state 12
    CADENAEXPRESION shift and go to state 66
    ACOR            shift and go to state 26

    contenido                      shift and go to state 42
    tipoFactor                     shift and go to state 166
    elementos                      shift and go to state 43
    factor                         shift and go to state 167
    factorEspecial                 shift and go to state 168
    list                           shift and go to state 67
    set                            shift and go to state 68

state 148

    (80) metodo -> ID PUNTO ID APAR . CPAR
    (81) metodo -> ID PUNTO ID APAR . ID CPAR

    CPAR            shift and go to state 170
    ID              shift and go to state 169


state 149

    (84) metodo -> ID PUNTO funcion APAR . CPAR
    (85) metodo -> ID PUNTO funcion APAR . ID CPAR

    CPAR            shift and go to state 172
    ID              shift and go to state 171


state 150

    (104) condicion -> compmiembro comparador compmiembro conector . compmiembro comparador compmiembro
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (88) atributo -> . ID PUNTO ID
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion

    ID              shift and go to state 116
    ENTEROEXPRESION shift and go to state 117
    VAL             shift and go to state 8
    VAR             shift and go to state 10

    compmiembro                    shift and go to state 173
    metodo                         shift and go to state 118
    atributo                       shift and go to state 119
    asignacion                     shift and go to state 120

state 151

    (96) conector -> AND .

    ID              reduce using rule 96 (conector -> AND .)
    ENTEROEXPRESION reduce using rule 96 (conector -> AND .)
    VAL             reduce using rule 96 (conector -> AND .)
    VAR             reduce using rule 96 (conector -> AND .)


state 152

    (97) conector -> OR .

    ID              reduce using rule 97 (conector -> OR .)
    ENTEROEXPRESION reduce using rule 97 (conector -> OR .)
    VAL             reduce using rule 97 (conector -> OR .)
    VAR             reduce using rule 97 (conector -> OR .)


state 153

    (110) if -> IF APAR condicion CPAR . cuerpo
    (111) if -> IF APAR condicion CPAR . cuerpo ELSE cuerpo
    (108) cuerpo -> . sentencia
    (109) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (105) control -> . if
    (106) control -> . for
    (107) control -> . while
    (103) condicion -> . compmiembro comparador compmiembro
    (104) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (88) atributo -> . ID PUNTO ID
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (110) if -> . IF APAR condicion CPAR cuerpo
    (111) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (112) for -> . FOR APAR ID IN ID CPAR cuerpo
    (113) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (120) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (122) while -> . WHILE APAR condicion CPAR cuerpo
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ALLAVE          shift and go to state 176
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 18
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    condicion                      shift and go to state 6
    cuerpo                         shift and go to state 174
    sentencia                      shift and go to state 175
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    atributo                       shift and go to state 7
    termino                        shift and go to state 11
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 154

    (120) for -> FOR APAR APAR ID . COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> FOR APAR APAR ID . COMA ID CPAR IN ID CPAR cuerpo

    COMA            shift and go to state 177


state 155

    (112) for -> FOR APAR ID IN . ID CPAR cuerpo
    (114) for -> FOR APAR ID IN . ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> FOR APAR ID IN . ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> FOR APAR ID IN . ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> FOR APAR ID IN . ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> FOR APAR ID IN . ID PUNTO INDICES CPAR cuerpo
    (119) for -> FOR APAR ID IN . ID PUNTO ID CPAR cuerpo

    ID              shift and go to state 178
    ENTEROEXPRESION shift and go to state 179


state 156

    (113) for -> FOR APAR ID DOSPUNTOS . INT IN ID CPAR cuerpo

    INT             shift and go to state 180


state 157

    (122) while -> WHILE APAR condicion CPAR . cuerpo
    (108) cuerpo -> . sentencia
    (109) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (105) control -> . if
    (106) control -> . for
    (107) control -> . while
    (103) condicion -> . compmiembro comparador compmiembro
    (104) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (88) atributo -> . ID PUNTO ID
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (110) if -> . IF APAR condicion CPAR cuerpo
    (111) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (112) for -> . FOR APAR ID IN ID CPAR cuerpo
    (113) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (120) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (122) while -> . WHILE APAR condicion CPAR cuerpo
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ALLAVE          shift and go to state 176
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 18
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    condicion                      shift and go to state 6
    cuerpo                         shift and go to state 181
    sentencia                      shift and go to state 175
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    atributo                       shift and go to state 7
    termino                        shift and go to state 11
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 158

    (83) metodo -> atributo PUNTO ID APAR ID . CPAR

    CPAR            shift and go to state 182


state 159

    (82) metodo -> atributo PUNTO ID APAR CPAR .

    $end            reduce using rule 82 (metodo -> atributo PUNTO ID APAR CPAR .)
    IGUALIGUAL      reduce using rule 82 (metodo -> atributo PUNTO ID APAR CPAR .)
    TRIPLEIGUAL     reduce using rule 82 (metodo -> atributo PUNTO ID APAR CPAR .)
    NOIGUAL         reduce using rule 82 (metodo -> atributo PUNTO ID APAR CPAR .)
    MAYOR           reduce using rule 82 (metodo -> atributo PUNTO ID APAR CPAR .)
    MENOR           reduce using rule 82 (metodo -> atributo PUNTO ID APAR CPAR .)
    MAYORIGUAL      reduce using rule 82 (metodo -> atributo PUNTO ID APAR CPAR .)
    MENORIGUAL      reduce using rule 82 (metodo -> atributo PUNTO ID APAR CPAR .)
    AND             reduce using rule 82 (metodo -> atributo PUNTO ID APAR CPAR .)
    OR              reduce using rule 82 (metodo -> atributo PUNTO ID APAR CPAR .)
    CPAR            reduce using rule 82 (metodo -> atributo PUNTO ID APAR CPAR .)
    ELSE            reduce using rule 82 (metodo -> atributo PUNTO ID APAR CPAR .)
    CLLAVE          reduce using rule 82 (metodo -> atributo PUNTO ID APAR CPAR .)


state 160

    (86) metodo -> atributo PUNTO funcion APAR CPAR .

    $end            reduce using rule 86 (metodo -> atributo PUNTO funcion APAR CPAR .)
    IGUALIGUAL      reduce using rule 86 (metodo -> atributo PUNTO funcion APAR CPAR .)
    TRIPLEIGUAL     reduce using rule 86 (metodo -> atributo PUNTO funcion APAR CPAR .)
    NOIGUAL         reduce using rule 86 (metodo -> atributo PUNTO funcion APAR CPAR .)
    MAYOR           reduce using rule 86 (metodo -> atributo PUNTO funcion APAR CPAR .)
    MENOR           reduce using rule 86 (metodo -> atributo PUNTO funcion APAR CPAR .)
    MAYORIGUAL      reduce using rule 86 (metodo -> atributo PUNTO funcion APAR CPAR .)
    MENORIGUAL      reduce using rule 86 (metodo -> atributo PUNTO funcion APAR CPAR .)
    AND             reduce using rule 86 (metodo -> atributo PUNTO funcion APAR CPAR .)
    OR              reduce using rule 86 (metodo -> atributo PUNTO funcion APAR CPAR .)
    CPAR            reduce using rule 86 (metodo -> atributo PUNTO funcion APAR CPAR .)
    ELSE            reduce using rule 86 (metodo -> atributo PUNTO funcion APAR CPAR .)
    CLLAVE          reduce using rule 86 (metodo -> atributo PUNTO funcion APAR CPAR .)


state 161

    (87) metodo -> atributo PUNTO funcion APAR ID . CPAR

    CPAR            shift and go to state 183


state 162

    (18) tipoDato -> LIST MENOR . tipoDato MAYOR
    (14) tipoDato -> . INT
    (15) tipoDato -> . FLOAT
    (16) tipoDato -> . BOOLEAN
    (17) tipoDato -> . STRING
    (18) tipoDato -> . LIST MENOR tipoDato MAYOR
    (19) tipoDato -> . SET MENOR tipoDato MAYOR
    (20) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (21) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 130
    FLOAT           shift and go to state 131
    BOOLEAN         shift and go to state 132
    STRING          shift and go to state 133
    LIST            shift and go to state 134
    SET             shift and go to state 135
    PAIR            shift and go to state 136
    TRIPLE          shift and go to state 137

    tipoDato                       shift and go to state 184

state 163

    (19) tipoDato -> SET MENOR . tipoDato MAYOR
    (14) tipoDato -> . INT
    (15) tipoDato -> . FLOAT
    (16) tipoDato -> . BOOLEAN
    (17) tipoDato -> . STRING
    (18) tipoDato -> . LIST MENOR tipoDato MAYOR
    (19) tipoDato -> . SET MENOR tipoDato MAYOR
    (20) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (21) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 130
    FLOAT           shift and go to state 131
    BOOLEAN         shift and go to state 132
    STRING          shift and go to state 133
    LIST            shift and go to state 134
    SET             shift and go to state 135
    PAIR            shift and go to state 136
    TRIPLE          shift and go to state 137

    tipoDato                       shift and go to state 185

state 164

    (20) tipoDato -> PAIR MENOR . tipoDato COMA tipoDato MAYOR
    (14) tipoDato -> . INT
    (15) tipoDato -> . FLOAT
    (16) tipoDato -> . BOOLEAN
    (17) tipoDato -> . STRING
    (18) tipoDato -> . LIST MENOR tipoDato MAYOR
    (19) tipoDato -> . SET MENOR tipoDato MAYOR
    (20) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (21) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 130
    FLOAT           shift and go to state 131
    BOOLEAN         shift and go to state 132
    STRING          shift and go to state 133
    LIST            shift and go to state 134
    SET             shift and go to state 135
    PAIR            shift and go to state 136
    TRIPLE          shift and go to state 137

    tipoDato                       shift and go to state 186

state 165

    (21) tipoDato -> TRIPLE MENOR . tipoDato COMA tipoDato COMA tipoDato MAYOR
    (14) tipoDato -> . INT
    (15) tipoDato -> . FLOAT
    (16) tipoDato -> . BOOLEAN
    (17) tipoDato -> . STRING
    (18) tipoDato -> . LIST MENOR tipoDato MAYOR
    (19) tipoDato -> . SET MENOR tipoDato MAYOR
    (20) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (21) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 130
    FLOAT           shift and go to state 131
    BOOLEAN         shift and go to state 132
    STRING          shift and go to state 133
    LIST            shift and go to state 134
    SET             shift and go to state 135
    PAIR            shift and go to state 136
    TRIPLE          shift and go to state 137

    tipoDato                       shift and go to state 187

state 166

    (32) pair -> APAR tipoFactor . COMA tipoFactor CPAR
    (33) triple -> APAR tipoFactor . COMA tipoFactor COMA tipoFactor CPAR

    COMA            shift and go to state 188


state 167

    (39) tipoFactor -> factor .
    (37) elementos -> factor .

  ! reduce/reduce conflict for COMA resolved using rule 37 (elementos -> factor .)
    COMA            reduce using rule 37 (elementos -> factor .)
    ENTEROEXPRESION reduce using rule 37 (elementos -> factor .)
    FLOTANTEEXPRESION reduce using rule 37 (elementos -> factor .)
    APAR            reduce using rule 37 (elementos -> factor .)
    CADENAEXPRESION reduce using rule 37 (elementos -> factor .)
    ACOR            reduce using rule 37 (elementos -> factor .)

  ! COMA            [ reduce using rule 39 (tipoFactor -> factor .) ]


state 168

    (40) tipoFactor -> factorEspecial .
    (38) elementos -> factorEspecial .

  ! reduce/reduce conflict for COMA resolved using rule 38 (elementos -> factorEspecial .)
    COMA            reduce using rule 38 (elementos -> factorEspecial .)
    ENTEROEXPRESION reduce using rule 38 (elementos -> factorEspecial .)
    FLOTANTEEXPRESION reduce using rule 38 (elementos -> factorEspecial .)
    APAR            reduce using rule 38 (elementos -> factorEspecial .)
    CADENAEXPRESION reduce using rule 38 (elementos -> factorEspecial .)
    ACOR            reduce using rule 38 (elementos -> factorEspecial .)

  ! COMA            [ reduce using rule 40 (tipoFactor -> factorEspecial .) ]


state 169

    (81) metodo -> ID PUNTO ID APAR ID . CPAR

    CPAR            shift and go to state 189


state 170

    (80) metodo -> ID PUNTO ID APAR CPAR .

    $end            reduce using rule 80 (metodo -> ID PUNTO ID APAR CPAR .)
    IGUALIGUAL      reduce using rule 80 (metodo -> ID PUNTO ID APAR CPAR .)
    TRIPLEIGUAL     reduce using rule 80 (metodo -> ID PUNTO ID APAR CPAR .)
    NOIGUAL         reduce using rule 80 (metodo -> ID PUNTO ID APAR CPAR .)
    MAYOR           reduce using rule 80 (metodo -> ID PUNTO ID APAR CPAR .)
    MENOR           reduce using rule 80 (metodo -> ID PUNTO ID APAR CPAR .)
    MAYORIGUAL      reduce using rule 80 (metodo -> ID PUNTO ID APAR CPAR .)
    MENORIGUAL      reduce using rule 80 (metodo -> ID PUNTO ID APAR CPAR .)
    AND             reduce using rule 80 (metodo -> ID PUNTO ID APAR CPAR .)
    OR              reduce using rule 80 (metodo -> ID PUNTO ID APAR CPAR .)
    CPAR            reduce using rule 80 (metodo -> ID PUNTO ID APAR CPAR .)
    ELSE            reduce using rule 80 (metodo -> ID PUNTO ID APAR CPAR .)
    CLLAVE          reduce using rule 80 (metodo -> ID PUNTO ID APAR CPAR .)


state 171

    (85) metodo -> ID PUNTO funcion APAR ID . CPAR

    CPAR            shift and go to state 190


state 172

    (84) metodo -> ID PUNTO funcion APAR CPAR .

    $end            reduce using rule 84 (metodo -> ID PUNTO funcion APAR CPAR .)
    IGUALIGUAL      reduce using rule 84 (metodo -> ID PUNTO funcion APAR CPAR .)
    TRIPLEIGUAL     reduce using rule 84 (metodo -> ID PUNTO funcion APAR CPAR .)
    NOIGUAL         reduce using rule 84 (metodo -> ID PUNTO funcion APAR CPAR .)
    MAYOR           reduce using rule 84 (metodo -> ID PUNTO funcion APAR CPAR .)
    MENOR           reduce using rule 84 (metodo -> ID PUNTO funcion APAR CPAR .)
    MAYORIGUAL      reduce using rule 84 (metodo -> ID PUNTO funcion APAR CPAR .)
    MENORIGUAL      reduce using rule 84 (metodo -> ID PUNTO funcion APAR CPAR .)
    AND             reduce using rule 84 (metodo -> ID PUNTO funcion APAR CPAR .)
    OR              reduce using rule 84 (metodo -> ID PUNTO funcion APAR CPAR .)
    CPAR            reduce using rule 84 (metodo -> ID PUNTO funcion APAR CPAR .)
    ELSE            reduce using rule 84 (metodo -> ID PUNTO funcion APAR CPAR .)
    CLLAVE          reduce using rule 84 (metodo -> ID PUNTO funcion APAR CPAR .)


state 173

    (104) condicion -> compmiembro comparador compmiembro conector compmiembro . comparador compmiembro
    (89) comparador -> . IGUALIGUAL
    (90) comparador -> . TRIPLEIGUAL
    (91) comparador -> . NOIGUAL
    (92) comparador -> . MAYOR
    (93) comparador -> . MENOR
    (94) comparador -> . MAYORIGUAL
    (95) comparador -> . MENORIGUAL

    IGUALIGUAL      shift and go to state 52
    TRIPLEIGUAL     shift and go to state 53
    NOIGUAL         shift and go to state 54
    MAYOR           shift and go to state 55
    MENOR           shift and go to state 56
    MAYORIGUAL      shift and go to state 57
    MENORIGUAL      shift and go to state 58

    comparador                     shift and go to state 191

state 174

    (110) if -> IF APAR condicion CPAR cuerpo .
    (111) if -> IF APAR condicion CPAR cuerpo . ELSE cuerpo

  ! shift/reduce conflict for ELSE resolved as shift
    $end            reduce using rule 110 (if -> IF APAR condicion CPAR cuerpo .)
    CLLAVE          reduce using rule 110 (if -> IF APAR condicion CPAR cuerpo .)
    ELSE            shift and go to state 192

  ! ELSE            [ reduce using rule 110 (if -> IF APAR condicion CPAR cuerpo .) ]


state 175

    (108) cuerpo -> sentencia .

    ELSE            reduce using rule 108 (cuerpo -> sentencia .)
    $end            reduce using rule 108 (cuerpo -> sentencia .)
    CLLAVE          reduce using rule 108 (cuerpo -> sentencia .)


state 176

    (109) cuerpo -> ALLAVE . sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (105) control -> . if
    (106) control -> . for
    (107) control -> . while
    (103) condicion -> . compmiembro comparador compmiembro
    (104) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (88) atributo -> . ID PUNTO ID
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (110) if -> . IF APAR condicion CPAR cuerpo
    (111) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (112) for -> . FOR APAR ID IN ID CPAR cuerpo
    (113) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (120) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (122) while -> . WHILE APAR condicion CPAR cuerpo
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 18
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    sentencia                      shift and go to state 193
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    termino                        shift and go to state 11
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 177

    (120) for -> FOR APAR APAR ID COMA . ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> FOR APAR APAR ID COMA . ID CPAR IN ID CPAR cuerpo

    ID              shift and go to state 194


state 178

    (112) for -> FOR APAR ID IN ID . CPAR cuerpo
    (118) for -> FOR APAR ID IN ID . PUNTO INDICES CPAR cuerpo
    (119) for -> FOR APAR ID IN ID . PUNTO ID CPAR cuerpo

    CPAR            shift and go to state 195
    PUNTO           shift and go to state 196


state 179

    (114) for -> FOR APAR ID IN ENTEROEXPRESION . PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> FOR APAR ID IN ENTEROEXPRESION . UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> FOR APAR ID IN ENTEROEXPRESION . UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> FOR APAR ID IN ENTEROEXPRESION . DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo

    PUNTOPUNTO      shift and go to state 197
    UNTIL           shift and go to state 198
    DOWNTO          shift and go to state 199


state 180

    (113) for -> FOR APAR ID DOSPUNTOS INT . IN ID CPAR cuerpo

    IN              shift and go to state 200


state 181

    (122) while -> WHILE APAR condicion CPAR cuerpo .

    $end            reduce using rule 122 (while -> WHILE APAR condicion CPAR cuerpo .)
    ELSE            reduce using rule 122 (while -> WHILE APAR condicion CPAR cuerpo .)
    CLLAVE          reduce using rule 122 (while -> WHILE APAR condicion CPAR cuerpo .)


state 182

    (83) metodo -> atributo PUNTO ID APAR ID CPAR .

    $end            reduce using rule 83 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    IGUALIGUAL      reduce using rule 83 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    TRIPLEIGUAL     reduce using rule 83 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    NOIGUAL         reduce using rule 83 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    MAYOR           reduce using rule 83 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    MENOR           reduce using rule 83 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    MAYORIGUAL      reduce using rule 83 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    MENORIGUAL      reduce using rule 83 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    AND             reduce using rule 83 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    OR              reduce using rule 83 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    CPAR            reduce using rule 83 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    ELSE            reduce using rule 83 (metodo -> atributo PUNTO ID APAR ID CPAR .)
    CLLAVE          reduce using rule 83 (metodo -> atributo PUNTO ID APAR ID CPAR .)


state 183

    (87) metodo -> atributo PUNTO funcion APAR ID CPAR .

    $end            reduce using rule 87 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    IGUALIGUAL      reduce using rule 87 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    TRIPLEIGUAL     reduce using rule 87 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    NOIGUAL         reduce using rule 87 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    MAYOR           reduce using rule 87 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    MENOR           reduce using rule 87 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    MAYORIGUAL      reduce using rule 87 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    MENORIGUAL      reduce using rule 87 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    AND             reduce using rule 87 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    OR              reduce using rule 87 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    CPAR            reduce using rule 87 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    ELSE            reduce using rule 87 (metodo -> atributo PUNTO funcion APAR ID CPAR .)
    CLLAVE          reduce using rule 87 (metodo -> atributo PUNTO funcion APAR ID CPAR .)


state 184

    (18) tipoDato -> LIST MENOR tipoDato . MAYOR

    MAYOR           shift and go to state 201


state 185

    (19) tipoDato -> SET MENOR tipoDato . MAYOR

    MAYOR           shift and go to state 202


state 186

    (20) tipoDato -> PAIR MENOR tipoDato . COMA tipoDato MAYOR

    COMA            shift and go to state 203


state 187

    (21) tipoDato -> TRIPLE MENOR tipoDato . COMA tipoDato COMA tipoDato MAYOR

    COMA            shift and go to state 204


state 188

    (32) pair -> APAR tipoFactor COMA . tipoFactor CPAR
    (33) triple -> APAR tipoFactor COMA . tipoFactor COMA tipoFactor CPAR
    (39) tipoFactor -> . factor
    (40) tipoFactor -> . factorEspecial
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (60) factorEspecial -> . ENTEROEXPRESION
    (61) factorEspecial -> . FLOTANTEEXPRESION
    (62) factorEspecial -> . CADENAEXPRESION
    (63) factorEspecial -> . list
    (64) factorEspecial -> . set
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 64
    FLOTANTEEXPRESION shift and go to state 65
    APAR            shift and go to state 12
    CADENAEXPRESION shift and go to state 66
    ACOR            shift and go to state 26

    tipoFactor                     shift and go to state 205
    factor                         shift and go to state 206
    factorEspecial                 shift and go to state 207
    list                           shift and go to state 67
    set                            shift and go to state 68

state 189

    (81) metodo -> ID PUNTO ID APAR ID CPAR .

    $end            reduce using rule 81 (metodo -> ID PUNTO ID APAR ID CPAR .)
    IGUALIGUAL      reduce using rule 81 (metodo -> ID PUNTO ID APAR ID CPAR .)
    TRIPLEIGUAL     reduce using rule 81 (metodo -> ID PUNTO ID APAR ID CPAR .)
    NOIGUAL         reduce using rule 81 (metodo -> ID PUNTO ID APAR ID CPAR .)
    MAYOR           reduce using rule 81 (metodo -> ID PUNTO ID APAR ID CPAR .)
    MENOR           reduce using rule 81 (metodo -> ID PUNTO ID APAR ID CPAR .)
    MAYORIGUAL      reduce using rule 81 (metodo -> ID PUNTO ID APAR ID CPAR .)
    MENORIGUAL      reduce using rule 81 (metodo -> ID PUNTO ID APAR ID CPAR .)
    AND             reduce using rule 81 (metodo -> ID PUNTO ID APAR ID CPAR .)
    OR              reduce using rule 81 (metodo -> ID PUNTO ID APAR ID CPAR .)
    CPAR            reduce using rule 81 (metodo -> ID PUNTO ID APAR ID CPAR .)
    ELSE            reduce using rule 81 (metodo -> ID PUNTO ID APAR ID CPAR .)
    CLLAVE          reduce using rule 81 (metodo -> ID PUNTO ID APAR ID CPAR .)


state 190

    (85) metodo -> ID PUNTO funcion APAR ID CPAR .

    $end            reduce using rule 85 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    IGUALIGUAL      reduce using rule 85 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    TRIPLEIGUAL     reduce using rule 85 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    NOIGUAL         reduce using rule 85 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    MAYOR           reduce using rule 85 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    MENOR           reduce using rule 85 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    MAYORIGUAL      reduce using rule 85 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    MENORIGUAL      reduce using rule 85 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    AND             reduce using rule 85 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    OR              reduce using rule 85 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    CPAR            reduce using rule 85 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    ELSE            reduce using rule 85 (metodo -> ID PUNTO funcion APAR ID CPAR .)
    CLLAVE          reduce using rule 85 (metodo -> ID PUNTO funcion APAR ID CPAR .)


state 191

    (104) condicion -> compmiembro comparador compmiembro conector compmiembro comparador . compmiembro
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (88) atributo -> . ID PUNTO ID
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion

    ID              shift and go to state 116
    ENTEROEXPRESION shift and go to state 117
    VAL             shift and go to state 8
    VAR             shift and go to state 10

    compmiembro                    shift and go to state 208
    metodo                         shift and go to state 118
    atributo                       shift and go to state 119
    asignacion                     shift and go to state 120

state 192

    (111) if -> IF APAR condicion CPAR cuerpo ELSE . cuerpo
    (108) cuerpo -> . sentencia
    (109) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (105) control -> . if
    (106) control -> . for
    (107) control -> . while
    (103) condicion -> . compmiembro comparador compmiembro
    (104) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (88) atributo -> . ID PUNTO ID
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (110) if -> . IF APAR condicion CPAR cuerpo
    (111) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (112) for -> . FOR APAR ID IN ID CPAR cuerpo
    (113) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (120) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (122) while -> . WHILE APAR condicion CPAR cuerpo
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ALLAVE          shift and go to state 176
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 18
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    condicion                      shift and go to state 6
    cuerpo                         shift and go to state 209
    sentencia                      shift and go to state 175
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    atributo                       shift and go to state 7
    termino                        shift and go to state 11
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 193

    (109) cuerpo -> ALLAVE sentencia . CLLAVE

    CLLAVE          shift and go to state 210


state 194

    (120) for -> FOR APAR APAR ID COMA ID . CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> FOR APAR APAR ID COMA ID . CPAR IN ID CPAR cuerpo

    CPAR            shift and go to state 211


state 195

    (112) for -> FOR APAR ID IN ID CPAR . cuerpo
    (108) cuerpo -> . sentencia
    (109) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (105) control -> . if
    (106) control -> . for
    (107) control -> . while
    (103) condicion -> . compmiembro comparador compmiembro
    (104) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (88) atributo -> . ID PUNTO ID
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (110) if -> . IF APAR condicion CPAR cuerpo
    (111) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (112) for -> . FOR APAR ID IN ID CPAR cuerpo
    (113) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (120) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (122) while -> . WHILE APAR condicion CPAR cuerpo
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ALLAVE          shift and go to state 176
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 18
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    cuerpo                         shift and go to state 212
    sentencia                      shift and go to state 175
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    termino                        shift and go to state 11
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 196

    (118) for -> FOR APAR ID IN ID PUNTO . INDICES CPAR cuerpo
    (119) for -> FOR APAR ID IN ID PUNTO . ID CPAR cuerpo

    INDICES         shift and go to state 214
    ID              shift and go to state 213


state 197

    (114) for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO . ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 215


state 198

    (115) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL . ENTEROEXPRESION CPAR cuerpo
    (116) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL . ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 216


state 199

    (117) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO . ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 217


state 200

    (113) for -> FOR APAR ID DOSPUNTOS INT IN . ID CPAR cuerpo

    ID              shift and go to state 218


state 201

    (18) tipoDato -> LIST MENOR tipoDato MAYOR .

    IGUAL           reduce using rule 18 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    $end            reduce using rule 18 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    IGUALIGUAL      reduce using rule 18 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    TRIPLEIGUAL     reduce using rule 18 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    NOIGUAL         reduce using rule 18 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    MAYOR           reduce using rule 18 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    MENOR           reduce using rule 18 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    MAYORIGUAL      reduce using rule 18 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    MENORIGUAL      reduce using rule 18 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    AND             reduce using rule 18 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    OR              reduce using rule 18 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    CPAR            reduce using rule 18 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    ELSE            reduce using rule 18 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    CLLAVE          reduce using rule 18 (tipoDato -> LIST MENOR tipoDato MAYOR .)
    COMA            reduce using rule 18 (tipoDato -> LIST MENOR tipoDato MAYOR .)


state 202

    (19) tipoDato -> SET MENOR tipoDato MAYOR .

    IGUAL           reduce using rule 19 (tipoDato -> SET MENOR tipoDato MAYOR .)
    $end            reduce using rule 19 (tipoDato -> SET MENOR tipoDato MAYOR .)
    IGUALIGUAL      reduce using rule 19 (tipoDato -> SET MENOR tipoDato MAYOR .)
    TRIPLEIGUAL     reduce using rule 19 (tipoDato -> SET MENOR tipoDato MAYOR .)
    NOIGUAL         reduce using rule 19 (tipoDato -> SET MENOR tipoDato MAYOR .)
    MAYOR           reduce using rule 19 (tipoDato -> SET MENOR tipoDato MAYOR .)
    MENOR           reduce using rule 19 (tipoDato -> SET MENOR tipoDato MAYOR .)
    MAYORIGUAL      reduce using rule 19 (tipoDato -> SET MENOR tipoDato MAYOR .)
    MENORIGUAL      reduce using rule 19 (tipoDato -> SET MENOR tipoDato MAYOR .)
    AND             reduce using rule 19 (tipoDato -> SET MENOR tipoDato MAYOR .)
    OR              reduce using rule 19 (tipoDato -> SET MENOR tipoDato MAYOR .)
    CPAR            reduce using rule 19 (tipoDato -> SET MENOR tipoDato MAYOR .)
    ELSE            reduce using rule 19 (tipoDato -> SET MENOR tipoDato MAYOR .)
    CLLAVE          reduce using rule 19 (tipoDato -> SET MENOR tipoDato MAYOR .)
    COMA            reduce using rule 19 (tipoDato -> SET MENOR tipoDato MAYOR .)


state 203

    (20) tipoDato -> PAIR MENOR tipoDato COMA . tipoDato MAYOR
    (14) tipoDato -> . INT
    (15) tipoDato -> . FLOAT
    (16) tipoDato -> . BOOLEAN
    (17) tipoDato -> . STRING
    (18) tipoDato -> . LIST MENOR tipoDato MAYOR
    (19) tipoDato -> . SET MENOR tipoDato MAYOR
    (20) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (21) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 130
    FLOAT           shift and go to state 131
    BOOLEAN         shift and go to state 132
    STRING          shift and go to state 133
    LIST            shift and go to state 134
    SET             shift and go to state 135
    PAIR            shift and go to state 136
    TRIPLE          shift and go to state 137

    tipoDato                       shift and go to state 219

state 204

    (21) tipoDato -> TRIPLE MENOR tipoDato COMA . tipoDato COMA tipoDato MAYOR
    (14) tipoDato -> . INT
    (15) tipoDato -> . FLOAT
    (16) tipoDato -> . BOOLEAN
    (17) tipoDato -> . STRING
    (18) tipoDato -> . LIST MENOR tipoDato MAYOR
    (19) tipoDato -> . SET MENOR tipoDato MAYOR
    (20) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (21) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 130
    FLOAT           shift and go to state 131
    BOOLEAN         shift and go to state 132
    STRING          shift and go to state 133
    LIST            shift and go to state 134
    SET             shift and go to state 135
    PAIR            shift and go to state 136
    TRIPLE          shift and go to state 137

    tipoDato                       shift and go to state 220

state 205

    (32) pair -> APAR tipoFactor COMA tipoFactor . CPAR
    (33) triple -> APAR tipoFactor COMA tipoFactor . COMA tipoFactor CPAR

    CPAR            shift and go to state 222
    COMA            shift and go to state 221


state 206

    (39) tipoFactor -> factor .

    CPAR            reduce using rule 39 (tipoFactor -> factor .)
    COMA            reduce using rule 39 (tipoFactor -> factor .)


state 207

    (40) tipoFactor -> factorEspecial .

    CPAR            reduce using rule 40 (tipoFactor -> factorEspecial .)
    COMA            reduce using rule 40 (tipoFactor -> factorEspecial .)


state 208

    (104) condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .

    $end            reduce using rule 104 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    CPAR            reduce using rule 104 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    ELSE            reduce using rule 104 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)
    CLLAVE          reduce using rule 104 (condicion -> compmiembro comparador compmiembro conector compmiembro comparador compmiembro .)


state 209

    (111) if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .

    $end            reduce using rule 111 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    ELSE            reduce using rule 111 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)
    CLLAVE          reduce using rule 111 (if -> IF APAR condicion CPAR cuerpo ELSE cuerpo .)


state 210

    (109) cuerpo -> ALLAVE sentencia CLLAVE .

    ELSE            reduce using rule 109 (cuerpo -> ALLAVE sentencia CLLAVE .)
    $end            reduce using rule 109 (cuerpo -> ALLAVE sentencia CLLAVE .)
    CLLAVE          reduce using rule 109 (cuerpo -> ALLAVE sentencia CLLAVE .)


state 211

    (120) for -> FOR APAR APAR ID COMA ID CPAR . IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> FOR APAR APAR ID COMA ID CPAR . IN ID CPAR cuerpo

    IN              shift and go to state 223


state 212

    (112) for -> FOR APAR ID IN ID CPAR cuerpo .

    $end            reduce using rule 112 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    ELSE            reduce using rule 112 (for -> FOR APAR ID IN ID CPAR cuerpo .)
    CLLAVE          reduce using rule 112 (for -> FOR APAR ID IN ID CPAR cuerpo .)


state 213

    (119) for -> FOR APAR ID IN ID PUNTO ID . CPAR cuerpo

    CPAR            shift and go to state 224


state 214

    (118) for -> FOR APAR ID IN ID PUNTO INDICES . CPAR cuerpo

    CPAR            shift and go to state 225


state 215

    (114) for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION . CPAR cuerpo

    CPAR            shift and go to state 226


state 216

    (115) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION . CPAR cuerpo
    (116) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION . STEP ENTEROEXPRESION CPAR cuerpo

    CPAR            shift and go to state 227
    STEP            shift and go to state 228


state 217

    (117) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION . STEP ENTEROEXPRESION CPAR cuerpo

    STEP            shift and go to state 229


state 218

    (113) for -> FOR APAR ID DOSPUNTOS INT IN ID . CPAR cuerpo

    CPAR            shift and go to state 230


state 219

    (20) tipoDato -> PAIR MENOR tipoDato COMA tipoDato . MAYOR

    MAYOR           shift and go to state 231


state 220

    (21) tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato . COMA tipoDato MAYOR

    COMA            shift and go to state 232


state 221

    (33) triple -> APAR tipoFactor COMA tipoFactor COMA . tipoFactor CPAR
    (39) tipoFactor -> . factor
    (40) tipoFactor -> . factorEspecial
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (60) factorEspecial -> . ENTEROEXPRESION
    (61) factorEspecial -> . FLOTANTEEXPRESION
    (62) factorEspecial -> . CADENAEXPRESION
    (63) factorEspecial -> . list
    (64) factorEspecial -> . set
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ENTEROEXPRESION shift and go to state 64
    FLOTANTEEXPRESION shift and go to state 65
    APAR            shift and go to state 12
    CADENAEXPRESION shift and go to state 66
    ACOR            shift and go to state 26

    tipoFactor                     shift and go to state 233
    factor                         shift and go to state 206
    factorEspecial                 shift and go to state 207
    list                           shift and go to state 67
    set                            shift and go to state 68

state 222

    (32) pair -> APAR tipoFactor COMA tipoFactor CPAR .

    $end            reduce using rule 32 (pair -> APAR tipoFactor COMA tipoFactor CPAR .)
    IGUALIGUAL      reduce using rule 32 (pair -> APAR tipoFactor COMA tipoFactor CPAR .)
    TRIPLEIGUAL     reduce using rule 32 (pair -> APAR tipoFactor COMA tipoFactor CPAR .)
    NOIGUAL         reduce using rule 32 (pair -> APAR tipoFactor COMA tipoFactor CPAR .)
    MAYOR           reduce using rule 32 (pair -> APAR tipoFactor COMA tipoFactor CPAR .)
    MENOR           reduce using rule 32 (pair -> APAR tipoFactor COMA tipoFactor CPAR .)
    MAYORIGUAL      reduce using rule 32 (pair -> APAR tipoFactor COMA tipoFactor CPAR .)
    MENORIGUAL      reduce using rule 32 (pair -> APAR tipoFactor COMA tipoFactor CPAR .)
    AND             reduce using rule 32 (pair -> APAR tipoFactor COMA tipoFactor CPAR .)
    OR              reduce using rule 32 (pair -> APAR tipoFactor COMA tipoFactor CPAR .)
    CPAR            reduce using rule 32 (pair -> APAR tipoFactor COMA tipoFactor CPAR .)
    ELSE            reduce using rule 32 (pair -> APAR tipoFactor COMA tipoFactor CPAR .)
    CLLAVE          reduce using rule 32 (pair -> APAR tipoFactor COMA tipoFactor CPAR .)


state 223

    (120) for -> FOR APAR APAR ID COMA ID CPAR IN . ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> FOR APAR APAR ID COMA ID CPAR IN . ID CPAR cuerpo

    ID              shift and go to state 234


state 224

    (119) for -> FOR APAR ID IN ID PUNTO ID CPAR . cuerpo
    (108) cuerpo -> . sentencia
    (109) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (105) control -> . if
    (106) control -> . for
    (107) control -> . while
    (103) condicion -> . compmiembro comparador compmiembro
    (104) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (88) atributo -> . ID PUNTO ID
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (110) if -> . IF APAR condicion CPAR cuerpo
    (111) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (112) for -> . FOR APAR ID IN ID CPAR cuerpo
    (113) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (120) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (122) while -> . WHILE APAR condicion CPAR cuerpo
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ALLAVE          shift and go to state 176
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 18
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    cuerpo                         shift and go to state 235
    sentencia                      shift and go to state 175
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    termino                        shift and go to state 11
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 225

    (118) for -> FOR APAR ID IN ID PUNTO INDICES CPAR . cuerpo
    (108) cuerpo -> . sentencia
    (109) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (105) control -> . if
    (106) control -> . for
    (107) control -> . while
    (103) condicion -> . compmiembro comparador compmiembro
    (104) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (88) atributo -> . ID PUNTO ID
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (110) if -> . IF APAR condicion CPAR cuerpo
    (111) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (112) for -> . FOR APAR ID IN ID CPAR cuerpo
    (113) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (120) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (122) while -> . WHILE APAR condicion CPAR cuerpo
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ALLAVE          shift and go to state 176
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 18
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    cuerpo                         shift and go to state 236
    sentencia                      shift and go to state 175
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    termino                        shift and go to state 11
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 226

    (114) for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR . cuerpo
    (108) cuerpo -> . sentencia
    (109) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (105) control -> . if
    (106) control -> . for
    (107) control -> . while
    (103) condicion -> . compmiembro comparador compmiembro
    (104) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (88) atributo -> . ID PUNTO ID
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (110) if -> . IF APAR condicion CPAR cuerpo
    (111) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (112) for -> . FOR APAR ID IN ID CPAR cuerpo
    (113) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (120) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (122) while -> . WHILE APAR condicion CPAR cuerpo
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ALLAVE          shift and go to state 176
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 18
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    cuerpo                         shift and go to state 237
    sentencia                      shift and go to state 175
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    termino                        shift and go to state 11
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 227

    (115) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR . cuerpo
    (108) cuerpo -> . sentencia
    (109) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (105) control -> . if
    (106) control -> . for
    (107) control -> . while
    (103) condicion -> . compmiembro comparador compmiembro
    (104) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (88) atributo -> . ID PUNTO ID
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (110) if -> . IF APAR condicion CPAR cuerpo
    (111) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (112) for -> . FOR APAR ID IN ID CPAR cuerpo
    (113) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (120) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (122) while -> . WHILE APAR condicion CPAR cuerpo
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ALLAVE          shift and go to state 176
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 18
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    cuerpo                         shift and go to state 238
    sentencia                      shift and go to state 175
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    termino                        shift and go to state 11
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 228

    (116) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP . ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 239


state 229

    (117) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP . ENTEROEXPRESION CPAR cuerpo

    ENTEROEXPRESION shift and go to state 240


state 230

    (113) for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR . cuerpo
    (108) cuerpo -> . sentencia
    (109) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (105) control -> . if
    (106) control -> . for
    (107) control -> . while
    (103) condicion -> . compmiembro comparador compmiembro
    (104) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (88) atributo -> . ID PUNTO ID
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (110) if -> . IF APAR condicion CPAR cuerpo
    (111) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (112) for -> . FOR APAR ID IN ID CPAR cuerpo
    (113) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (120) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (122) while -> . WHILE APAR condicion CPAR cuerpo
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ALLAVE          shift and go to state 176
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 18
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    cuerpo                         shift and go to state 241
    sentencia                      shift and go to state 175
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    termino                        shift and go to state 11
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 231

    (20) tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .

    IGUAL           reduce using rule 20 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    $end            reduce using rule 20 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    IGUALIGUAL      reduce using rule 20 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    TRIPLEIGUAL     reduce using rule 20 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    NOIGUAL         reduce using rule 20 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    MAYOR           reduce using rule 20 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    MENOR           reduce using rule 20 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    MAYORIGUAL      reduce using rule 20 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    MENORIGUAL      reduce using rule 20 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    AND             reduce using rule 20 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    OR              reduce using rule 20 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    CPAR            reduce using rule 20 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    ELSE            reduce using rule 20 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    CLLAVE          reduce using rule 20 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)
    COMA            reduce using rule 20 (tipoDato -> PAIR MENOR tipoDato COMA tipoDato MAYOR .)


state 232

    (21) tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA . tipoDato MAYOR
    (14) tipoDato -> . INT
    (15) tipoDato -> . FLOAT
    (16) tipoDato -> . BOOLEAN
    (17) tipoDato -> . STRING
    (18) tipoDato -> . LIST MENOR tipoDato MAYOR
    (19) tipoDato -> . SET MENOR tipoDato MAYOR
    (20) tipoDato -> . PAIR MENOR tipoDato COMA tipoDato MAYOR
    (21) tipoDato -> . TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR

    INT             shift and go to state 130
    FLOAT           shift and go to state 131
    BOOLEAN         shift and go to state 132
    STRING          shift and go to state 133
    LIST            shift and go to state 134
    SET             shift and go to state 135
    PAIR            shift and go to state 136
    TRIPLE          shift and go to state 137

    tipoDato                       shift and go to state 242

state 233

    (33) triple -> APAR tipoFactor COMA tipoFactor COMA tipoFactor . CPAR

    CPAR            shift and go to state 243


state 234

    (120) for -> FOR APAR APAR ID COMA ID CPAR IN ID . PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> FOR APAR APAR ID COMA ID CPAR IN ID . CPAR cuerpo

    PUNTO           shift and go to state 245
    CPAR            shift and go to state 244


state 235

    (119) for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .

    $end            reduce using rule 119 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    ELSE            reduce using rule 119 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)
    CLLAVE          reduce using rule 119 (for -> FOR APAR ID IN ID PUNTO ID CPAR cuerpo .)


state 236

    (118) for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .

    $end            reduce using rule 118 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    ELSE            reduce using rule 118 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)
    CLLAVE          reduce using rule 118 (for -> FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo .)


state 237

    (114) for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .

    $end            reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    ELSE            reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)
    CLLAVE          reduce using rule 114 (for -> FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo .)


state 238

    (115) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .

    $end            reduce using rule 115 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    ELSE            reduce using rule 115 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)
    CLLAVE          reduce using rule 115 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo .)


state 239

    (116) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION . CPAR cuerpo

    CPAR            shift and go to state 246


state 240

    (117) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION . CPAR cuerpo

    CPAR            shift and go to state 247


state 241

    (113) for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .

    $end            reduce using rule 113 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    ELSE            reduce using rule 113 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)
    CLLAVE          reduce using rule 113 (for -> FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo .)


state 242

    (21) tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato . MAYOR

    MAYOR           shift and go to state 248


state 243

    (33) triple -> APAR tipoFactor COMA tipoFactor COMA tipoFactor CPAR .

    $end            reduce using rule 33 (triple -> APAR tipoFactor COMA tipoFactor COMA tipoFactor CPAR .)
    IGUALIGUAL      reduce using rule 33 (triple -> APAR tipoFactor COMA tipoFactor COMA tipoFactor CPAR .)
    TRIPLEIGUAL     reduce using rule 33 (triple -> APAR tipoFactor COMA tipoFactor COMA tipoFactor CPAR .)
    NOIGUAL         reduce using rule 33 (triple -> APAR tipoFactor COMA tipoFactor COMA tipoFactor CPAR .)
    MAYOR           reduce using rule 33 (triple -> APAR tipoFactor COMA tipoFactor COMA tipoFactor CPAR .)
    MENOR           reduce using rule 33 (triple -> APAR tipoFactor COMA tipoFactor COMA tipoFactor CPAR .)
    MAYORIGUAL      reduce using rule 33 (triple -> APAR tipoFactor COMA tipoFactor COMA tipoFactor CPAR .)
    MENORIGUAL      reduce using rule 33 (triple -> APAR tipoFactor COMA tipoFactor COMA tipoFactor CPAR .)
    AND             reduce using rule 33 (triple -> APAR tipoFactor COMA tipoFactor COMA tipoFactor CPAR .)
    OR              reduce using rule 33 (triple -> APAR tipoFactor COMA tipoFactor COMA tipoFactor CPAR .)
    CPAR            reduce using rule 33 (triple -> APAR tipoFactor COMA tipoFactor COMA tipoFactor CPAR .)
    ELSE            reduce using rule 33 (triple -> APAR tipoFactor COMA tipoFactor COMA tipoFactor CPAR .)
    CLLAVE          reduce using rule 33 (triple -> APAR tipoFactor COMA tipoFactor COMA tipoFactor CPAR .)


state 244

    (121) for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR . cuerpo
    (108) cuerpo -> . sentencia
    (109) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (105) control -> . if
    (106) control -> . for
    (107) control -> . while
    (103) condicion -> . compmiembro comparador compmiembro
    (104) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (88) atributo -> . ID PUNTO ID
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (110) if -> . IF APAR condicion CPAR cuerpo
    (111) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (112) for -> . FOR APAR ID IN ID CPAR cuerpo
    (113) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (120) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (122) while -> . WHILE APAR condicion CPAR cuerpo
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ALLAVE          shift and go to state 176
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 18
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    cuerpo                         shift and go to state 249
    sentencia                      shift and go to state 175
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    termino                        shift and go to state 11
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 245

    (120) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO . WITHINDEX APAR CPAR CPAR cuerpo

    WITHINDEX       shift and go to state 250


state 246

    (116) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR . cuerpo
    (108) cuerpo -> . sentencia
    (109) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (105) control -> . if
    (106) control -> . for
    (107) control -> . while
    (103) condicion -> . compmiembro comparador compmiembro
    (104) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (88) atributo -> . ID PUNTO ID
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (110) if -> . IF APAR condicion CPAR cuerpo
    (111) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (112) for -> . FOR APAR ID IN ID CPAR cuerpo
    (113) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (120) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (122) while -> . WHILE APAR condicion CPAR cuerpo
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ALLAVE          shift and go to state 176
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 18
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    cuerpo                         shift and go to state 251
    sentencia                      shift and go to state 175
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    termino                        shift and go to state 11
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 247

    (117) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR . cuerpo
    (108) cuerpo -> . sentencia
    (109) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (105) control -> . if
    (106) control -> . for
    (107) control -> . while
    (103) condicion -> . compmiembro comparador compmiembro
    (104) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (88) atributo -> . ID PUNTO ID
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (110) if -> . IF APAR condicion CPAR cuerpo
    (111) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (112) for -> . FOR APAR ID IN ID CPAR cuerpo
    (113) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (120) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (122) while -> . WHILE APAR condicion CPAR cuerpo
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ALLAVE          shift and go to state 176
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 18
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    cuerpo                         shift and go to state 252
    sentencia                      shift and go to state 175
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    termino                        shift and go to state 11
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 248

    (21) tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .

    IGUAL           reduce using rule 21 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    $end            reduce using rule 21 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    IGUALIGUAL      reduce using rule 21 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    TRIPLEIGUAL     reduce using rule 21 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    NOIGUAL         reduce using rule 21 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    MAYOR           reduce using rule 21 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    MENOR           reduce using rule 21 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    MAYORIGUAL      reduce using rule 21 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    MENORIGUAL      reduce using rule 21 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    AND             reduce using rule 21 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    OR              reduce using rule 21 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    CPAR            reduce using rule 21 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    ELSE            reduce using rule 21 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    CLLAVE          reduce using rule 21 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)
    COMA            reduce using rule 21 (tipoDato -> TRIPLE MENOR tipoDato COMA tipoDato COMA tipoDato MAYOR .)


state 249

    (121) for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .

    $end            reduce using rule 121 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    ELSE            reduce using rule 121 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)
    CLLAVE          reduce using rule 121 (for -> FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo .)


state 250

    (120) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX . APAR CPAR CPAR cuerpo

    APAR            shift and go to state 253


state 251

    (116) for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .

    $end            reduce using rule 116 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    ELSE            reduce using rule 116 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    CLLAVE          reduce using rule 116 (for -> FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)


state 252

    (117) for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .

    $end            reduce using rule 117 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    ELSE            reduce using rule 117 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)
    CLLAVE          reduce using rule 117 (for -> FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo .)


state 253

    (120) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR . CPAR CPAR cuerpo

    CPAR            shift and go to state 254


state 254

    (120) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR . CPAR cuerpo

    CPAR            shift and go to state 255


state 255

    (120) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR . cuerpo
    (108) cuerpo -> . sentencia
    (109) cuerpo -> . ALLAVE sentencia CLLAVE
    (1) sentencia -> . asignacion
    (2) sentencia -> . expresion
    (3) sentencia -> . metodo
    (4) sentencia -> . control
    (5) sentencia -> . condicion
    (6) sentencia -> . atributo
    (7) asignacion -> . VAL ID tipoAsignacion
    (8) asignacion -> . VAR ID tipoAsignacion
    (41) expresion -> . expresion SUMA termino
    (42) expresion -> . expresion RESTA termino
    (43) expresion -> . expresion DIVISION termino
    (44) expresion -> . expresion MULT termino
    (45) expresion -> . expresion MODULO termino
    (46) expresion -> . termino
    (80) metodo -> . ID PUNTO ID APAR CPAR
    (81) metodo -> . ID PUNTO ID APAR ID CPAR
    (82) metodo -> . atributo PUNTO ID APAR CPAR
    (83) metodo -> . atributo PUNTO ID APAR ID CPAR
    (84) metodo -> . ID PUNTO funcion APAR CPAR
    (85) metodo -> . ID PUNTO funcion APAR ID CPAR
    (86) metodo -> . atributo PUNTO funcion APAR CPAR
    (87) metodo -> . atributo PUNTO funcion APAR ID CPAR
    (105) control -> . if
    (106) control -> . for
    (107) control -> . while
    (103) condicion -> . compmiembro comparador compmiembro
    (104) condicion -> . compmiembro comparador compmiembro conector compmiembro comparador compmiembro
    (88) atributo -> . ID PUNTO ID
    (47) termino -> . termino SUMA factorEspecial
    (48) termino -> . termino RESTA factor
    (49) termino -> . termino MULT factor
    (50) termino -> . termino DIVISION factor
    (51) termino -> . termino MODULO factor
    (52) termino -> . factor
    (53) termino -> . ENTEROEXPRESION
    (54) termino -> . FLOTANTEEXPRESION
    (55) termino -> . CADENAEXPRESION
    (56) termino -> . list
    (57) termino -> . set
    (110) if -> . IF APAR condicion CPAR cuerpo
    (111) if -> . IF APAR condicion CPAR cuerpo ELSE cuerpo
    (112) for -> . FOR APAR ID IN ID CPAR cuerpo
    (113) for -> . FOR APAR ID DOSPUNTOS INT IN ID CPAR cuerpo
    (114) for -> . FOR APAR ID IN ENTEROEXPRESION PUNTOPUNTO ENTEROEXPRESION CPAR cuerpo
    (115) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION CPAR cuerpo
    (116) for -> . FOR APAR ID IN ENTEROEXPRESION UNTIL ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (117) for -> . FOR APAR ID IN ENTEROEXPRESION DOWNTO ENTEROEXPRESION STEP ENTEROEXPRESION CPAR cuerpo
    (118) for -> . FOR APAR ID IN ID PUNTO INDICES CPAR cuerpo
    (119) for -> . FOR APAR ID IN ID PUNTO ID CPAR cuerpo
    (120) for -> . FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo
    (121) for -> . FOR APAR APAR ID COMA ID CPAR IN ID CPAR cuerpo
    (122) while -> . WHILE APAR condicion CPAR cuerpo
    (98) compmiembro -> . ID
    (99) compmiembro -> . ENTEROEXPRESION
    (100) compmiembro -> . metodo
    (101) compmiembro -> . atributo
    (102) compmiembro -> . asignacion
    (58) factor -> . ENTEROEXPRESION
    (59) factor -> . FLOTANTEEXPRESION
    (65) factor -> . APAR expresion CPAR
    (30) list -> . ACOR contenido CCOR
    (31) set -> . APAR contenido CPAR

    ALLAVE          shift and go to state 176
    VAL             shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 9
    ENTEROEXPRESION shift and go to state 18
    FLOTANTEEXPRESION shift and go to state 19
    CADENAEXPRESION shift and go to state 20
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    APAR            shift and go to state 12
    ACOR            shift and go to state 26

    cuerpo                         shift and go to state 256
    sentencia                      shift and go to state 175
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    metodo                         shift and go to state 4
    control                        shift and go to state 5
    condicion                      shift and go to state 6
    atributo                       shift and go to state 7
    termino                        shift and go to state 11
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    compmiembro                    shift and go to state 16
    factor                         shift and go to state 17
    list                           shift and go to state 21
    set                            shift and go to state 22

state 256

    (120) for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .

    $end            reduce using rule 120 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    ELSE            reduce using rule 120 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)
    CLLAVE          reduce using rule 120 (for -> FOR APAR APAR ID COMA ID CPAR IN ID PUNTO WITHINDEX APAR CPAR CPAR cuerpo .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUMA in state 11 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 11 resolved as shift
WARNING: shift/reduce conflict for MULT in state 11 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 11 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 11 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 69 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 69 resolved as shift
WARNING: shift/reduce conflict for MULT in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 69 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 69 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 71 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 71 resolved as shift
WARNING: shift/reduce conflict for MULT in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 71 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 71 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 72 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 72 resolved as shift
WARNING: shift/reduce conflict for MULT in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 72 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 72 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 73 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 73 resolved as shift
WARNING: shift/reduce conflict for MULT in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 73 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 73 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 74 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 74 resolved as shift
WARNING: shift/reduce conflict for MULT in state 74 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 74 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 174 resolved as shift
WARNING: reduce/reduce conflict in state 18 resolved using rule (termino -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 18
WARNING: reduce/reduce conflict in state 19 resolved using rule (termino -> FLOTANTEEXPRESION)
WARNING: rejected rule (factor -> FLOTANTEEXPRESION) in state 19
WARNING: reduce/reduce conflict in state 46 resolved using rule (termino -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 46
WARNING: reduce/reduce conflict in state 46 resolved using rule (factor -> ENTEROEXPRESION)
WARNING: rejected rule (factorEspecial -> ENTEROEXPRESION) in state 46
WARNING: reduce/reduce conflict in state 47 resolved using rule (termino -> FLOTANTEEXPRESION)
WARNING: rejected rule (factor -> FLOTANTEEXPRESION) in state 47
WARNING: reduce/reduce conflict in state 47 resolved using rule (factor -> FLOTANTEEXPRESION)
WARNING: rejected rule (factorEspecial -> FLOTANTEEXPRESION) in state 47
WARNING: reduce/reduce conflict in state 64 resolved using rule (factor -> ENTEROEXPRESION)
WARNING: rejected rule (factorEspecial -> ENTEROEXPRESION) in state 64
WARNING: reduce/reduce conflict in state 65 resolved using rule (factor -> FLOTANTEEXPRESION)
WARNING: rejected rule (factorEspecial -> FLOTANTEEXPRESION) in state 65
WARNING: reduce/reduce conflict in state 70 resolved using rule (termino -> ENTEROEXPRESION)
WARNING: rejected rule (factor -> ENTEROEXPRESION) in state 70
WARNING: reduce/reduce conflict in state 167 resolved using rule (elementos -> factor)
WARNING: rejected rule (tipoFactor -> factor) in state 167
WARNING: reduce/reduce conflict in state 168 resolved using rule (elementos -> factorEspecial)
WARNING: rejected rule (tipoFactor -> factorEspecial) in state 168
